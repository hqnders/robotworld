<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="6224px" preserveAspectRatio="none" style="width:13001px;height:6224px;" version="1.1" viewBox="0 0 13001 6224" width="13001px" zoomAndPan="magnify"><defs><filter height="300%" id="f1rjxkql0gimm" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster PathAlgorithm--><polygon fill="#FFFFFF" filter="url(#f1rjxkql0gimm)" points="7668.6338,3623,7785.6338,3623,7792.6338,3645.2969,9865.6338,3645.2969,9865.6338,4595.5,7668.6338,4595.5,7668.6338,3623" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="7668.6338" x2="7792.6338" y1="3645.2969" y2="3645.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="111" x="7672.6338" y="3637.9951">PathAlgorithm</text><!--cluster model--><polygon fill="#FFFFFF" filter="url(#f1rjxkql0gimm)" points="5691.6338,2268.5,5745.6338,2268.5,5752.6338,2290.7969,7660.6338,2290.7969,7660.6338,5879.5,5691.6338,5879.5,5691.6338,2268.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="5691.6338" x2="5752.6338" y1="2290.7969" y2="2290.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="48" x="5695.6338" y="2283.4951">model</text><!--cluster Messaging--><polygon fill="#FFFFFF" filter="url(#f1rjxkql0gimm)" points="265.6338,3693.5,355.6338,3693.5,362.6338,3715.7969,1778.6338,3715.7969,1778.6338,6212,265.6338,6212,265.6338,3693.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="265.6338" x2="362.6338" y1="3715.7969" y2="3715.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="84" x="269.6338" y="3708.4951">Messaging</text><!--cluster Application--><polygon fill="#FFFFFF" filter="url(#f1rjxkql0gimm)" points="1797.6338,4397.5,1890.6338,4397.5,1897.6338,4419.7969,3359.6338,4419.7969,3359.6338,5541,1797.6338,5541,1797.6338,4397.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1797.6338" x2="1897.6338" y1="4419.7969" y2="4419.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="87" x="1801.6338" y="4412.4951">Application</text><!--cluster Base--><polygon fill="#FFFFFF" filter="url(#f1rjxkql0gimm)" points="3367.6338,5247,3411.6338,5247,3418.6338,5269.2969,5683.6338,5269.2969,5683.6338,5899,3367.6338,5899,3367.6338,5247" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="3367.6338" x2="3418.6338" y1="5269.2969" y2="5269.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="38" x="3371.6338" y="5261.9951">Base</text><!--cluster View--><polygon fill="#FFFFFF" filter="url(#f1rjxkql0gimm)" points="10941.6338,16,10986.6338,16,10993.6338,38.2969,12398.6338,38.2969,12398.6338,4595.5,10941.6338,4595.5,10941.6338,16" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="10941.6338" x2="10993.6338" y1="38.2969" y2="38.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="39" x="10945.6338" y="30.9951">View</text><!--cluster Utils--><polygon fill="#FFFFFF" filter="url(#f1rjxkql0gimm)" points="9873.6338,4346,9913.6338,4346,9920.6338,4368.2969,10933.6338,4368.2969,10933.6338,4634,9873.6338,4634,9873.6338,4346" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="9873.6338" x2="9920.6338" y1="4368.2969" y2="4368.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="34" x="9877.6338" y="4360.9951">Utils</text><!--class AStar--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="406.5313" id="AStar" style="stroke: #A80036; stroke-width: 1.5;" width="538" x="8091.6338" y="3650"/><ellipse cx="8339.3838" cy="3666" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8342.3526,3671.6406 Q8341.7744,3671.9375 8341.1338,3672.0859 Q8340.4932,3672.2344 8339.7901,3672.2344 Q8337.2901,3672.2344 8335.9697,3670.5859 Q8334.6494,3668.9375 8334.6494,3665.8125 Q8334.6494,3662.6875 8335.9697,3661.0313 Q8337.2901,3659.375 8339.7901,3659.375 Q8340.4932,3659.375 8341.1416,3659.5313 Q8341.7901,3659.6875 8342.3526,3659.9844 L8342.3526,3662.7031 Q8341.7276,3662.125 8341.1338,3661.8516 Q8340.5401,3661.5781 8339.9151,3661.5781 Q8338.5713,3661.5781 8337.8838,3662.6484 Q8337.1963,3663.7188 8337.1963,3665.8125 Q8337.1963,3667.9063 8337.8838,3668.9766 Q8338.5713,3670.0469 8339.9151,3670.0469 Q8340.5401,3670.0469 8341.1338,3669.7734 Q8341.7276,3669.5 8342.3526,3668.9219 L8342.3526,3671.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="8359.8838" y="3670.1543">AStar</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8092.6338" x2="8628.6338" y1="3682" y2="3682"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8099.6338" y="3690.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="8111.6338" y="3696.2104">closedSet : PathAlgorithm::ClosedSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8099.6338" y="3703.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="8111.6338" y="3709.0151">openSet : PathAlgorithm::OpenSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8099.6338" y="3716.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="8111.6338" y="3721.8198">predecessorMap : PathAlgorithm::VertexMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8099.6338" y="3729.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="8111.6338" y="3734.6245">closedSetMutex : mutable std::recursive_mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8099.6338" y="3742.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="8111.6338" y="3747.4292">openSetMutex : mutable std::recursive_mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8099.6338" y="3754.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="8111.6338" y="3760.2339">predecessorMapMutex : mutable std::recursive_mutex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8092.6338" x2="8628.6338" y1="3766.8281" y2="3766.8281"/><ellipse cx="8102.6338" cy="3778.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="8111.6338" y="3781.0386">getClosedSet() : ClosedSet {query}</text><polygon fill="#FFFF44" points="8102.6338,3786.5352,8106.6338,3790.5352,8102.6338,3794.5352,8098.6338,3790.5352" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="8111.6338" y="3793.8433">getCS() : ClosedSet&amp;</text><polygon fill="#FFFF44" points="8102.6338,3799.3398,8106.6338,3803.3398,8102.6338,3807.3398,8098.6338,3803.3398" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="8111.6338" y="3806.6479">getCS() : ClosedSet&amp; {query}</text><ellipse cx="8102.6338" cy="3817.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="8111.6338" y="3819.4526">findInClosedSet(const Vertex&amp; aVertex) : ClosedSet::iterator</text><ellipse cx="8102.6338" cy="3829.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="8111.6338" y="3832.2573">getOpenSet() : OpenSet {query}</text><polygon fill="#FFFF44" points="8102.6338,3837.7539,8106.6338,3841.7539,8102.6338,3845.7539,8098.6338,3841.7539" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="8111.6338" y="3845.062">getOS() : OpenSet&amp;</text><polygon fill="#FFFF44" points="8102.6338,3850.5586,8106.6338,3854.5586,8102.6338,3858.5586,8098.6338,3854.5586" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="8111.6338" y="3857.8667">getOS() : OpenSet&amp; {query}</text><ellipse cx="8102.6338" cy="3868.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="8111.6338" y="3870.6714">findInOpenSet(const Vertex&amp; aVertex) : OpenSet::iterator</text><ellipse cx="8102.6338" cy="3881.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="8111.6338" y="3883.4761">search(const Point&amp; aStartPoint, const Point&amp; aGoalPoint, const Size&amp; aRobotSize) : Path</text><ellipse cx="8102.6338" cy="3893.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="8111.6338" y="3896.2808">search(Vertex aStart, const Vertex&amp; aGoal, const Size&amp; aRobotSize) : Path</text><ellipse cx="8102.6338" cy="3906.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="8111.6338" y="3909.0854">getPredecessorMap() : VertexMap {query}</text><polygon fill="#FFFF44" points="8102.6338,3914.582,8106.6338,3918.582,8102.6338,3922.582,8098.6338,3918.582" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="8111.6338" y="3921.8901">getPM() : VertexMap&amp;</text><polygon fill="#FFFF44" points="8102.6338,3927.3867,8106.6338,3931.3867,8102.6338,3935.3867,8098.6338,3931.3867" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="8111.6338" y="3934.6948">getPM() : VertexMap&amp; {query}</text><ellipse cx="8102.6338" cy="3945.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="8111.6338" y="3947.4995">findRemoveClosedSet(const Vertex&amp; aVertex) : bool</text><ellipse cx="8102.6338" cy="3957.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="8111.6338" y="3960.3042">findRemoveInOpenSet(const Vertex&amp; aVertex) : bool</text><ellipse cx="8102.6338" cy="3970.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="8111.6338" y="3973.1089">addToClosedSet(const Vertex&amp; aVertex) : void</text><ellipse cx="8102.6338" cy="3983.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="8111.6338" y="3985.9136">addToOpenSet(const Vertex&amp; aVertex) : void</text><ellipse cx="8102.6338" cy="3996.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="8111.6338" y="3998.7183">removeFirstFromOpenSet() : void</text><ellipse cx="8102.6338" cy="4009.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="8111.6338" y="4011.5229">removeFromClosedSet(const Vertex&amp; aVertex) : void</text><ellipse cx="8102.6338" cy="4022.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="8111.6338" y="4024.3276">removeFromClosedSet(ClosedSet::iterator&amp; i) : void</text><ellipse cx="8102.6338" cy="4034.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="8111.6338" y="4037.1323">removeFromOpenSet(const Vertex&amp; aVertex) : void</text><ellipse cx="8102.6338" cy="4047.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="8111.6338" y="4049.937">removeFromOpenSet(OpenSet::iterator&amp; i) : void</text><!--class Vertex--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="176.0469" id="Vertex" style="stroke: #A80036; stroke-width: 1.5;" width="307" x="9537.1338" y="4411.5"/><ellipse cx="9666.3838" cy="4427.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9669.3526,4433.1406 Q9668.7744,4433.4375 9668.1338,4433.5859 Q9667.4932,4433.7344 9666.7901,4433.7344 Q9664.2901,4433.7344 9662.9697,4432.0859 Q9661.6494,4430.4375 9661.6494,4427.3125 Q9661.6494,4424.1875 9662.9697,4422.5313 Q9664.2901,4420.875 9666.7901,4420.875 Q9667.4932,4420.875 9668.1416,4421.0313 Q9668.7901,4421.1875 9669.3526,4421.4844 L9669.3526,4424.2031 Q9668.7276,4423.625 9668.1338,4423.3516 Q9667.5401,4423.0781 9666.9151,4423.0781 Q9665.5713,4423.0781 9664.8838,4424.1484 Q9664.1963,4425.2188 9664.1963,4427.3125 Q9664.1963,4429.4063 9664.8838,4430.4766 Q9665.5713,4431.5469 9666.9151,4431.5469 Q9667.5401,4431.5469 9668.1338,4431.2734 Q9668.7276,4431 9669.3526,4430.4219 L9669.3526,4433.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="9686.8838" y="4431.6543">Vertex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9538.1338" x2="9843.1338" y1="4443.5" y2="4443.5"/><ellipse cx="9548.1338" cy="4455.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="9557.1338" y="4457.7104">actualCost : double</text><ellipse cx="9548.1338" cy="4468.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="9557.1338" y="4470.5151">heuristicCost : double</text><ellipse cx="9548.1338" cy="4481.0117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="9557.1338" y="4483.3198">x : int</text><ellipse cx="9548.1338" cy="4493.8164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="9557.1338" y="4496.1245">y : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9538.1338" x2="9843.1338" y1="4502.7188" y2="4502.7188"/><ellipse cx="9548.1338" cy="4514.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="9557.1338" y="4516.9292">Vertex(int anX, int anY)</text><ellipse cx="9548.1338" cy="4527.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="9557.1338" y="4529.7339">Vertex(const Point&amp; aPoint)</text><ellipse cx="9548.1338" cy="4540.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="9557.1338" y="4542.5386">asPoint() : Point {query}</text><ellipse cx="9548.1338" cy="4553.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="9557.1338" y="4555.3433">equalPoint(const Vertex&amp; aVertex) : bool {query}</text><ellipse cx="9548.1338" cy="4565.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="9557.1338" y="4568.1479">lessCost(const Vertex&amp; aVertex) : bool {query}</text><ellipse cx="9548.1338" cy="4578.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="9557.1338" y="4580.9526">lessId(const Vertex&amp; aVertex) : bool {query}</text><!--class Edge--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="124.8281" id="Edge" style="stroke: #A80036; stroke-width: 1.5;" width="340" x="9517.6338" y="3791"/><ellipse cx="9667.3838" cy="3807" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9670.3526,3812.6406 Q9669.7744,3812.9375 9669.1338,3813.0859 Q9668.4932,3813.2344 9667.7901,3813.2344 Q9665.2901,3813.2344 9663.9697,3811.5859 Q9662.6494,3809.9375 9662.6494,3806.8125 Q9662.6494,3803.6875 9663.9697,3802.0313 Q9665.2901,3800.375 9667.7901,3800.375 Q9668.4932,3800.375 9669.1416,3800.5313 Q9669.7901,3800.6875 9670.3526,3800.9844 L9670.3526,3803.7031 Q9669.7276,3803.125 9669.1338,3802.8516 Q9668.5401,3802.5781 9667.9151,3802.5781 Q9666.5713,3802.5781 9665.8838,3803.6484 Q9665.1963,3804.7188 9665.1963,3806.8125 Q9665.1963,3808.9063 9665.8838,3809.9766 Q9666.5713,3811.0469 9667.9151,3811.0469 Q9668.5401,3811.0469 9669.1338,3810.7734 Q9669.7276,3810.5 9670.3526,3809.9219 L9670.3526,3812.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32" x="9687.8838" y="3811.1543">Edge</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9518.6338" x2="9856.6338" y1="3823" y2="3823"/><ellipse cx="9528.6338" cy="3834.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="9537.6338" y="3837.2104">vertex1 : Vertex</text><ellipse cx="9528.6338" cy="3847.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="9537.6338" y="3850.0151">vertex2 : Vertex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9518.6338" x2="9856.6338" y1="3856.6094" y2="3856.6094"/><ellipse cx="9528.6338" cy="3868.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="9537.6338" y="3870.8198">Edge(const Vertex&amp; aVertex1, const Vertex&amp; aVertex2)</text><ellipse cx="9528.6338" cy="3881.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="9537.6338" y="3883.6245">Edge(const Edge&amp; anEdge)</text><ellipse cx="9528.6338" cy="3894.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="9537.6338" y="3896.4292">otherSide(const Vertex&amp; aVertex) : Vertex&amp; {query}</text><ellipse cx="9528.6338" cy="3906.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="9537.6338" y="3909.2339">thisSide(const Vertex&amp; aVertex) : Vertex&amp; {query}</text><!--class VertexEqualPointCompare--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="VertexEqualPointCompare" style="stroke: #A80036; stroke-width: 1.5;" width="391" x="8665.1338" y="3823"/><ellipse cx="8774.8838" cy="3839" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8777.8526,3844.6406 Q8777.2744,3844.9375 8776.6338,3845.0859 Q8775.9932,3845.2344 8775.2901,3845.2344 Q8772.7901,3845.2344 8771.4697,3843.5859 Q8770.1494,3841.9375 8770.1494,3838.8125 Q8770.1494,3835.6875 8771.4697,3834.0313 Q8772.7901,3832.375 8775.2901,3832.375 Q8775.9932,3832.375 8776.6416,3832.5313 Q8777.2901,3832.6875 8777.8526,3832.9844 L8777.8526,3835.7031 Q8777.2276,3835.125 8776.6338,3834.8516 Q8776.0401,3834.5781 8775.4151,3834.5781 Q8774.0713,3834.5781 8773.3838,3835.6484 Q8772.6963,3836.7188 8772.6963,3838.8125 Q8772.6963,3840.9063 8773.3838,3841.9766 Q8774.0713,3843.0469 8775.4151,3843.0469 Q8776.0401,3843.0469 8776.6338,3842.7734 Q8777.2276,3842.5 8777.8526,3841.9219 L8777.8526,3844.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="163" x="8795.3838" y="3843.1543">VertexEqualPointCompare</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8666.1338" x2="9055.1338" y1="3855" y2="3855"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8666.1338" x2="9055.1338" y1="3863" y2="3863"/><ellipse cx="8676.1338" cy="3874.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="8685.1338" y="3877.2104">operator()(const Vertex&amp; lhs, const Vertex&amp; rhs) : bool {query}</text><!--class VertexLessCostCompare--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="VertexLessCostCompare" style="stroke: #A80036; stroke-width: 1.5;" width="391" x="9091.1338" y="3823"/><ellipse cx="9206.3838" cy="3839" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9209.3526,3844.6406 Q9208.7744,3844.9375 9208.1338,3845.0859 Q9207.4932,3845.2344 9206.7901,3845.2344 Q9204.2901,3845.2344 9202.9697,3843.5859 Q9201.6494,3841.9375 9201.6494,3838.8125 Q9201.6494,3835.6875 9202.9697,3834.0313 Q9204.2901,3832.375 9206.7901,3832.375 Q9207.4932,3832.375 9208.1416,3832.5313 Q9208.7901,3832.6875 9209.3526,3832.9844 L9209.3526,3835.7031 Q9208.7276,3835.125 9208.1338,3834.8516 Q9207.5401,3834.5781 9206.9151,3834.5781 Q9205.5713,3834.5781 9204.8838,3835.6484 Q9204.1963,3836.7188 9204.1963,3838.8125 Q9204.1963,3840.9063 9204.8838,3841.9766 Q9205.5713,3843.0469 9206.9151,3843.0469 Q9207.5401,3843.0469 9208.1338,3842.7734 Q9208.7276,3842.5 9209.3526,3841.9219 L9209.3526,3844.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="9226.8838" y="3843.1543">VertexLessCostCompare</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9092.1338" x2="9481.1338" y1="3855" y2="3855"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9092.1338" x2="9481.1338" y1="3863" y2="3863"/><ellipse cx="9102.1338" cy="3874.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="9111.1338" y="3877.2104">operator()(const Vertex&amp; lhs, const Vertex&amp; rhs) : bool {query}</text><!--class VertexLessIdCompare--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="VertexLessIdCompare" style="stroke: #A80036; stroke-width: 1.5;" width="391" x="8665.1338" y="4469"/><ellipse cx="8788.8838" cy="4485" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8791.8526,4490.6406 Q8791.2744,4490.9375 8790.6338,4491.0859 Q8789.9932,4491.2344 8789.2901,4491.2344 Q8786.7901,4491.2344 8785.4697,4489.5859 Q8784.1494,4487.9375 8784.1494,4484.8125 Q8784.1494,4481.6875 8785.4697,4480.0313 Q8786.7901,4478.375 8789.2901,4478.375 Q8789.9932,4478.375 8790.6416,4478.5313 Q8791.2901,4478.6875 8791.8526,4478.9844 L8791.8526,4481.7031 Q8791.2276,4481.125 8790.6338,4480.8516 Q8790.0401,4480.5781 8789.4151,4480.5781 Q8788.0713,4480.5781 8787.3838,4481.6484 Q8786.6963,4482.7188 8786.6963,4484.8125 Q8786.6963,4486.9063 8787.3838,4487.9766 Q8788.0713,4489.0469 8789.4151,4489.0469 Q8790.0401,4489.0469 8790.6338,4488.7734 Q8791.2276,4488.5 8791.8526,4487.9219 L8791.8526,4490.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="8809.3838" y="4489.1543">VertexLessIdCompare</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8666.1338" x2="9055.1338" y1="4501" y2="4501"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8666.1338" x2="9055.1338" y1="4509" y2="4509"/><ellipse cx="8676.1338" cy="4520.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="8685.1338" y="4523.2104">operator()(const Vertex&amp; lhs, const Vertex&amp; rhs) : bool {query}</text><!--class ViewObject--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="163.2422" id="ViewObject" style="stroke: #A80036; stroke-width: 1.5;" width="380" x="7676.6338" y="3772"/><ellipse cx="7828.3838" cy="3788" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7831.3526,3793.6406 Q7830.7744,3793.9375 7830.1338,3794.0859 Q7829.4932,3794.2344 7828.7901,3794.2344 Q7826.2901,3794.2344 7824.9697,3792.5859 Q7823.6494,3790.9375 7823.6494,3787.8125 Q7823.6494,3784.6875 7824.9697,3783.0313 Q7826.2901,3781.375 7828.7901,3781.375 Q7829.4932,3781.375 7830.1416,3781.5313 Q7830.7901,3781.6875 7831.3526,3781.9844 L7831.3526,3784.7031 Q7830.7276,3784.125 7830.1338,3783.8516 Q7829.5401,3783.5781 7828.9151,3783.5781 Q7827.5713,3783.5781 7826.8838,3784.6484 Q7826.1963,3785.7188 7826.1963,3787.8125 Q7826.1963,3789.9063 7826.8838,3790.9766 Q7827.5713,3792.0469 7828.9151,3792.0469 Q7829.5401,3792.0469 7830.1338,3791.7734 Q7830.7276,3791.5 7831.3526,3790.9219 L7831.3526,3793.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="7848.8838" y="3792.1543">ViewObject</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7677.6338" x2="8055.6338" y1="3804" y2="3804"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7684.6338" y="3812.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="7696.6338" y="3818.2104">objectId : Base::ObjectId</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7684.6338" y="3825.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="7696.6338" y="3831.0151">modelObject : model::ModelObjectPtr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7677.6338" x2="8055.6338" y1="3837.6094" y2="3837.6094"/><ellipse cx="7687.6338" cy="3849.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="7696.6338" y="3851.8198">ViewObject()</text><ellipse cx="7687.6338" cy="3862.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="7696.6338" y="3864.6245">ViewObject(model::ModelObjectPtr aModelObject)</text><ellipse cx="7687.6338" cy="3875.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="7696.6338" y="3877.4292">~ViewObject()</text><ellipse cx="7687.6338" cy="3887.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="7696.6338" y="3890.2339">getObjectId() : Base::ObjectId&amp; {query}</text><ellipse cx="7687.6338" cy="3900.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="7696.6338" y="3903.0386">getModelObject() : model::ModelObjectPtr {query}</text><polygon fill="#FFFF44" points="7687.6338,3908.5352,7691.6338,3912.5352,7687.6338,3916.5352,7683.6338,3912.5352" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="7696.6338" y="3915.8433">rebindModelObject(model::ModelObjectPtr aModelObject) : void</text><ellipse cx="7687.6338" cy="3926.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="7696.6338" y="3928.6479">setModelObject(model::ModelObjectPtr aModelObject) : void</text><!--class AbstractActuator--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="163.2422" id="AbstractActuator" style="stroke: #A80036; stroke-width: 1.5;" width="403" x="6499.1338" y="2723.5"/><ellipse cx="6643.3838" cy="2739.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6643.4932,2734.8438 L6642.3369,2739.9219 L6644.6651,2739.9219 L6643.4932,2734.8438 Z M6642.0088,2732.6094 L6644.9932,2732.6094 L6648.3526,2745 L6645.8994,2745 L6645.1338,2741.9375 L6641.8526,2741.9375 L6641.1026,2745 L6638.6651,2745 L6642.0088,2732.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="106" x="6663.8838" y="2743.6543">AbstractActuator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6500.1338" x2="6901.1338" y1="2755.5" y2="2755.5"/><polygon fill="none" points="6510.1338,2762.4023,6514.1338,2766.4023,6510.1338,2770.4023,6506.1338,2766.4023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="6519.1338" y="2769.7104">agent : AbstractAgent*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6500.1338" x2="6901.1338" y1="2776.3047" y2="2776.3047"/><ellipse cx="6510.1338" cy="2788.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="6519.1338" y="2790.5151">AbstractActuator()</text><ellipse cx="6510.1338" cy="2801.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="6519.1338" y="2803.3198">AbstractActuator(AbstractAgent* anAgent)</text><ellipse cx="6510.1338" cy="2813.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="6519.1338" y="2816.1245">~AbstractActuator()</text><ellipse cx="6510.1338" cy="2826.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6519.1338" y="2828.9292">asDebugString() : std::string {query}</text><ellipse cx="6510.1338" cy="2839.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="6519.1338" y="2841.7339">asString() : std::string {query}</text><ellipse cx="6510.1338" cy="2852.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="6519.1338" y="2854.5386">attachAgent(AbstractAgent* anAgent) : void</text><ellipse cx="6510.1338" cy="2865.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="6519.1338" y="2867.3433">detachAgent() : void</text><ellipse cx="6510.1338" cy="2877.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="377" x="6519.1338" y="2880.1479">handleCommand(AbstractCommand&amp; anAbstractCommand) : void</text><!--class AbstractAgent--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="201.6563" id="AbstractAgent" style="stroke: #A80036; stroke-width: 1.5;" width="584" x="5879.6338" y="3100"/><ellipse cx="6122.8838" cy="3116" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6122.9932,3111.3438 L6121.8369,3116.4219 L6124.1651,3116.4219 L6122.9932,3111.3438 Z M6121.5088,3109.1094 L6124.4932,3109.1094 L6127.8526,3121.5 L6125.3994,3121.5 L6124.6338,3118.4375 L6121.3526,3118.4375 L6120.6026,3121.5 L6118.1651,3121.5 L6121.5088,3109.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="89" x="6143.3838" y="3120.1543">AbstractAgent</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5880.6338" x2="6462.6338" y1="3132" y2="3132"/><polygon fill="none" points="5890.6338,3138.9023,5894.6338,3142.9023,5890.6338,3146.9023,5886.6338,3142.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="5899.6338" y="3146.2104">perceptQueue : Base::Queue&lt; std::shared_ptr&lt; AbstractPercept&gt; &gt;</text><polygon fill="none" points="5890.6338,3151.707,5894.6338,3155.707,5890.6338,3159.707,5886.6338,3155.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="5899.6338" y="3159.0151">actuators : std::vector&lt; std::shared_ptr&lt; AbstractActuator&gt; &gt;</text><polygon fill="none" points="5890.6338,3164.5117,5894.6338,3168.5117,5890.6338,3172.5117,5886.6338,3168.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="5899.6338" y="3171.8198">sensors : std::vector&lt; std::shared_ptr&lt; AbstractSensor&gt; &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5880.6338" x2="6462.6338" y1="3178.4141" y2="3178.4141"/><ellipse cx="5890.6338" cy="3190.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5899.6338" y="3192.6245">AbstractAgent()</text><ellipse cx="5890.6338" cy="3203.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="5899.6338" y="3205.4292">~AbstractAgent()</text><ellipse cx="5890.6338" cy="3215.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5899.6338" y="3218.2339">asDebugString() : std::string {query}</text><ellipse cx="5890.6338" cy="3228.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="5899.6338" y="3231.0386">asString() : std::string {query}</text><ellipse cx="5890.6338" cy="3241.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="5899.6338" y="3243.8433">addPercept(std::shared_ptr&lt; AbstractPercept&gt; anAbstractPercept) : void</text><ellipse cx="5890.6338" cy="3254.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="5899.6338" y="3256.6479">attachActuator(std::shared_ptr&lt; AbstractActuator&gt; anActuator, bool attachActuatorToAgent) : void</text><ellipse cx="5890.6338" cy="3267.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="527" x="5899.6338" y="3269.4526">attachSensor(std::shared_ptr&lt; AbstractSensor&gt; aSensor, bool attachSensorToAgent) : void</text><ellipse cx="5890.6338" cy="3279.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="105" x="5899.6338" y="3282.2573">startActing() : void</text><ellipse cx="5890.6338" cy="3292.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="103" x="5899.6338" y="3295.062">stopActing() : void</text><!--class AbstractCommand--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="AbstractCommand" style="stroke: #A80036; stroke-width: 1.5;" width="148" x="6751.6338" y="3823"/><ellipse cx="6767.0838" cy="3839" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6770.0525,3844.6406 Q6769.4744,3844.9375 6768.8338,3845.0859 Q6768.1932,3845.2344 6767.49,3845.2344 Q6764.99,3845.2344 6763.6697,3843.5859 Q6762.3494,3841.9375 6762.3494,3838.8125 Q6762.3494,3835.6875 6763.6697,3834.0313 Q6764.99,3832.375 6767.49,3832.375 Q6768.1932,3832.375 6768.8416,3832.5313 Q6769.49,3832.6875 6770.0525,3832.9844 L6770.0525,3835.7031 Q6769.4275,3835.125 6768.8338,3834.8516 Q6768.24,3834.5781 6767.615,3834.5781 Q6766.2713,3834.5781 6765.5838,3835.6484 Q6764.8963,3836.7188 6764.8963,3838.8125 Q6764.8963,3840.9063 6765.5838,3841.9766 Q6766.2713,3843.0469 6767.615,3843.0469 Q6768.24,3843.0469 6768.8338,3842.7734 Q6769.4275,3842.5 6770.0525,3841.9219 L6770.0525,3844.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="6781.1838" y="3843.1543">AbstractCommand</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6752.6338" x2="6898.6338" y1="3855" y2="3855"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6752.6338" x2="6898.6338" y1="3863" y2="3863"/><ellipse cx="6762.6338" cy="3874.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6771.6338" y="3877.2104">~AbstractCommand()</text><!--class AbstractPercept--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="AbstractPercept" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="5843.6338" y="5453"/><ellipse cx="5858.6338" cy="5469" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5861.6026,5474.6406 Q5861.0244,5474.9375 5860.3838,5475.0859 Q5859.7432,5475.2344 5859.0401,5475.2344 Q5856.5401,5475.2344 5855.2197,5473.5859 Q5853.8994,5471.9375 5853.8994,5468.8125 Q5853.8994,5465.6875 5855.2197,5464.0313 Q5856.5401,5462.375 5859.0401,5462.375 Q5859.7432,5462.375 5860.3916,5462.5313 Q5861.0401,5462.6875 5861.6026,5462.9844 L5861.6026,5465.7031 Q5860.9776,5465.125 5860.3838,5464.8516 Q5859.7901,5464.5781 5859.1651,5464.5781 Q5857.8213,5464.5781 5857.1338,5465.6484 Q5856.4463,5466.7188 5856.4463,5468.8125 Q5856.4463,5470.9063 5857.1338,5471.9766 Q5857.8213,5473.0469 5859.1651,5473.0469 Q5859.7901,5473.0469 5860.3838,5472.7734 Q5860.9776,5472.5 5861.6026,5471.9219 L5861.6026,5474.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="102" x="5872.6338" y="5473.1543">AbstractPercept</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5844.6338" x2="5976.6338" y1="5485" y2="5485"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5844.6338" x2="5976.6338" y1="5493" y2="5493"/><ellipse cx="5854.6338" cy="5504.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="5863.6338" y="5507.2104">~AbstractPercept()</text><!--class AbstractSensor--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="265.6797" id="AbstractSensor" style="stroke: #A80036; stroke-width: 1.5;" width="687" x="5737.1338" y="4366.5"/><ellipse cx="6028.8838" cy="4382.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6028.9932,4377.8438 L6027.8369,4382.9219 L6030.1651,4382.9219 L6028.9932,4377.8438 Z M6027.5088,4375.6094 L6030.4932,4375.6094 L6033.8526,4388 L6031.3994,4388 L6030.6338,4384.9375 L6027.3526,4384.9375 L6026.6026,4388 L6024.1651,4388 L6027.5088,4375.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="95" x="6049.3838" y="4386.6543">AbstractSensor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5738.1338" x2="6423.1338" y1="4398.5" y2="4398.5"/><polygon fill="none" points="5748.1338,4405.4023,5752.1338,4409.4023,5748.1338,4413.4023,5744.1338,4409.4023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5757.1338" y="4412.7104">agent : AbstractAgent*</text><polygon fill="none" points="5748.1338,4418.207,5752.1338,4422.207,5748.1338,4426.207,5744.1338,4422.207" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="5757.1338" y="4425.5151">running : bool</text><polygon fill="none" points="5748.1338,4431.0117,5752.1338,4435.0117,5748.1338,4439.0117,5744.1338,4435.0117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="5757.1338" y="4438.3198">sensorMutex : mutable std::recursive_mutex</text><polygon fill="none" points="5748.1338,4443.8164,5752.1338,4447.8164,5748.1338,4451.8164,5744.1338,4447.8164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5757.1338" y="4451.1245">sensorThread : std::thread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5738.1338" x2="6423.1338" y1="4457.7188" y2="4457.7188"/><ellipse cx="5748.1338" cy="4469.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="5757.1338" y="4471.9292">AbstractSensor()</text><ellipse cx="5748.1338" cy="4482.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5757.1338" y="4484.7339">AbstractSensor(AbstractAgent* anAgent)</text><ellipse cx="5748.1338" cy="4495.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5757.1338" y="4497.5386">~AbstractSensor()</text><ellipse cx="5748.1338" cy="4508.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="661" x="5757.1338" y="4510.3433">getPerceptFor(std::shared_ptr&lt; AbstractStimulus&gt; anAbstractPercepts) : std::shared_ptr&lt;AbstractPercept&gt; {query}</text><ellipse cx="5748.1338" cy="4520.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="336" x="5757.1338" y="4523.1479">getStimulus() : std::shared_ptr&lt;AbstractStimulus&gt; {query}</text><ellipse cx="5748.1338" cy="4533.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5757.1338" y="4535.9526">asDebugString() : std::string {query}</text><ellipse cx="5748.1338" cy="4546.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="5757.1338" y="4548.7573">asString() : std::string {query}</text><ellipse cx="5748.1338" cy="4559.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="5757.1338" y="4561.562">attachAgent(AbstractAgent* anAgent) : void</text><ellipse cx="5748.1338" cy="4572.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="5757.1338" y="4574.3667">detachAgent() : void</text><ellipse cx="5748.1338" cy="4584.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5757.1338" y="4587.1714">run(unsigned long aSleepTime) : void</text><ellipse cx="5748.1338" cy="4597.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="5757.1338" y="4599.9761">sendPercept(std::shared_ptr&lt; AbstractPercept&gt; anAbstractPercept) : void</text><ellipse cx="5748.1338" cy="4610.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5757.1338" y="4612.7808">setOff() : void</text><ellipse cx="5748.1338" cy="4623.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="5757.1338" y="4625.5854">setOn(unsigned long aSleepTime) : void</text><!--class AbstractStimulus--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="AbstractStimulus" style="stroke: #A80036; stroke-width: 1.5;" width="140" x="6289.6338" y="5453"/><ellipse cx="6305.5338" cy="5469" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6308.5025,5474.6406 Q6307.9244,5474.9375 6307.2838,5475.0859 Q6306.6432,5475.2344 6305.94,5475.2344 Q6303.44,5475.2344 6302.1197,5473.5859 Q6300.7994,5471.9375 6300.7994,5468.8125 Q6300.7994,5465.6875 6302.1197,5464.0313 Q6303.44,5462.375 6305.94,5462.375 Q6306.6432,5462.375 6307.2916,5462.5313 Q6307.94,5462.6875 6308.5025,5462.9844 L6308.5025,5465.7031 Q6307.8775,5465.125 6307.2838,5464.8516 Q6306.69,5464.5781 6306.065,5464.5781 Q6304.7213,5464.5781 6304.0338,5465.6484 Q6303.3463,5466.7188 6303.3463,5468.8125 Q6303.3463,5470.9063 6304.0338,5471.9766 Q6304.7213,5473.0469 6306.065,5473.0469 Q6306.69,5473.0469 6307.2838,5472.7734 Q6307.8775,5472.5 6308.5025,5471.9219 L6308.5025,5474.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="6319.7338" y="5473.1543">AbstractStimulus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6290.6338" x2="6428.6338" y1="5485" y2="5485"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6290.6338" x2="6428.6338" y1="5493" y2="5493"/><ellipse cx="6300.6338" cy="5504.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="6309.6338" y="5507.2104">~AbstractStimulus()</text><!--class BoundedVector--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="278.4844" id="BoundedVector" style="stroke: #A80036; stroke-width: 1.5;" width="387" x="6534.1338" y="4360.5"/><ellipse cx="6674.8838" cy="4376.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6677.8526,4382.1406 Q6677.2744,4382.4375 6676.6338,4382.5859 Q6675.9932,4382.7344 6675.2901,4382.7344 Q6672.7901,4382.7344 6671.4697,4381.0859 Q6670.1494,4379.4375 6670.1494,4376.3125 Q6670.1494,4373.1875 6671.4697,4371.5313 Q6672.7901,4369.875 6675.2901,4369.875 Q6675.9932,4369.875 6676.6416,4370.0313 Q6677.2901,4370.1875 6677.8526,4370.4844 L6677.8526,4373.2031 Q6677.2276,4372.625 6676.6338,4372.3516 Q6676.0401,4372.0781 6675.4151,4372.0781 Q6674.0713,4372.0781 6673.3838,4373.1484 Q6672.6963,4374.2188 6672.6963,4376.3125 Q6672.6963,4378.4063 6673.3838,4379.4766 Q6674.0713,4380.5469 6675.4151,4380.5469 Q6676.0401,4380.5469 6676.6338,4380.2734 Q6677.2276,4380 6677.8526,4379.4219 L6677.8526,4382.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="6695.3838" y="4380.6543">BoundedVector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6535.1338" x2="6920.1338" y1="4392.5" y2="4392.5"/><ellipse cx="6545.1338" cy="4404.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="6554.1338" y="4406.7104">x : float</text><ellipse cx="6545.1338" cy="4417.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="6554.1338" y="4419.5151">y : float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6535.1338" x2="6920.1338" y1="4426.1094" y2="4426.1094"/><ellipse cx="6545.1338" cy="4438.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="6554.1338" y="4440.3198">BoundedVector()</text><ellipse cx="6545.1338" cy="4450.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="6554.1338" y="4453.1245">BoundedVector(float anX, float anY)</text><ellipse cx="6545.1338" cy="4463.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="6554.1338" y="4465.9292">BoundedVector(const Point&amp; aPoint1, const Point&amp; aPoint2)</text><ellipse cx="6545.1338" cy="4476.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="6554.1338" y="4478.7339">BoundedVector(const BoundedVector&amp; aPolarCoord)</text><ellipse cx="6545.1338" cy="4489.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="6554.1338" y="4491.5386">~BoundedVector()</text><ellipse cx="6545.1338" cy="4502.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="6554.1338" y="4504.3433">getNormalised() : BoundedVector</text><ellipse cx="6545.1338" cy="4514.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6554.1338" y="4517.1479">operator-() : BoundedVector</text><ellipse cx="6545.1338" cy="4527.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="6554.1338" y="4529.9526">operator*=(float aScalar) : BoundedVector&amp;</text><ellipse cx="6545.1338" cy="4540.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6554.1338" y="4542.7573">operator+=(const BoundedVector&amp; aVector) : BoundedVector&amp;</text><ellipse cx="6545.1338" cy="4553.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="6554.1338" y="4555.562">operator-=(const BoundedVector&amp; aVector) : BoundedVector&amp;</text><ellipse cx="6545.1338" cy="4566.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="6554.1338" y="4568.3667">operator/=(float aScalar) : BoundedVector&amp;</text><ellipse cx="6545.1338" cy="4578.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="6554.1338" y="4581.1714">getMagnitude() : float</text><ellipse cx="6545.1338" cy="4591.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6554.1338" y="4593.9761">asDebugString() : std::string {query}</text><ellipse cx="6545.1338" cy="4604.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="6554.1338" y="4606.7808">asString() : std::string {query}</text><ellipse cx="6545.1338" cy="4617.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="6554.1338" y="4619.5854">normalise() : void</text><ellipse cx="6545.1338" cy="4630.082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="6554.1338" y="4632.3901">reverse() : void</text><!--class Robot--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="726.6484" id="Robot" style="stroke: #A80036; stroke-width: 1.5;" width="429" x="6264.1338" y="3490"/><ellipse cx="6455.8838" cy="3506" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6458.8526,3511.6406 Q6458.2744,3511.9375 6457.6338,3512.0859 Q6456.9932,3512.2344 6456.2901,3512.2344 Q6453.7901,3512.2344 6452.4697,3510.5859 Q6451.1494,3508.9375 6451.1494,3505.8125 Q6451.1494,3502.6875 6452.4697,3501.0313 Q6453.7901,3499.375 6456.2901,3499.375 Q6456.9932,3499.375 6457.6416,3499.5313 Q6458.2901,3499.6875 6458.8526,3499.9844 L6458.8526,3502.7031 Q6458.2276,3502.125 6457.6338,3501.8516 Q6457.0401,3501.5781 6456.4151,3501.5781 Q6455.0713,3501.5781 6454.3838,3502.6484 Q6453.6963,3503.7188 6453.6963,3505.8125 Q6453.6963,3507.9063 6454.3838,3508.9766 Q6455.0713,3510.0469 6456.4151,3510.0469 Q6457.0401,3510.0469 6457.6338,3509.7734 Q6458.2276,3509.5 6458.8526,3508.9219 L6458.8526,3511.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="6476.3838" y="3510.1543">Robot</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6265.1338" x2="6692.1338" y1="3522" y2="3522"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3530.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="6284.1338" y="3536.2104">front : BoundedVector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3543.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6284.1338" y="3549.0151">goal : model::GoalPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3556.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="6284.1338" y="3561.8198">astar : PathAlgorithm::AStar</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3569.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="6284.1338" y="3574.6245">path : PathAlgorithm::Path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3582.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="6284.1338" y="3587.4292">position : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3594.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="6284.1338" y="3600.2339">size : Size</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3607.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="6284.1338" y="3613.0386">acting : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3620.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6284.1338" y="3625.8433">communicating : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3633.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="6284.1338" y="3638.6479">driving : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3646.1445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="6284.1338" y="3651.4526">speed : float</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3658.9492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="6284.1338" y="3664.2573">robotMutex : mutable std::recursive_mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3671.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="6284.1338" y="3677.062">name : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6272.1338" y="3684.5586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="6284.1338" y="3689.8667">robotThread : std::thread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6265.1338" x2="6692.1338" y1="3696.4609" y2="3696.4609"/><ellipse cx="6275.1338" cy="3708.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="6284.1338" y="3710.6714">Robot()</text><ellipse cx="6275.1338" cy="3721.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="6284.1338" y="3723.4761">Robot(const std::string&amp; aName)</text><ellipse cx="6275.1338" cy="3733.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="6284.1338" y="3736.2808">Robot(const std::string&amp; aName, const Point&amp; aPosition)</text><ellipse cx="6275.1338" cy="3746.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="6284.1338" y="3749.0854">~Robot()</text><ellipse cx="6275.1338" cy="3759.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="6284.1338" y="3761.8901">getFront() : BoundedVector {query}</text><ellipse cx="6275.1338" cy="3772.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="6284.1338" y="3774.6948">getOpenSet() : PathAlgorithm::OpenSet {query}</text><ellipse cx="6275.1338" cy="3785.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="6284.1338" y="3787.4995">getPath() : PathAlgorithm::Path {query}</text><ellipse cx="6275.1338" cy="3797.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6284.1338" y="3800.3042">getBackLeft() : Point {query}</text><ellipse cx="6275.1338" cy="3810.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="6284.1338" y="3813.1089">getBackRight() : Point {query}</text><ellipse cx="6275.1338" cy="3823.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="6284.1338" y="3825.9136">getFrontLeft() : Point {query}</text><ellipse cx="6275.1338" cy="3836.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="6284.1338" y="3838.7183">getFrontRight() : Point {query}</text><ellipse cx="6275.1338" cy="3849.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6284.1338" y="3851.5229">getPosition() : Point {query}</text><ellipse cx="6275.1338" cy="3862.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6284.1338" y="3864.3276">getRegion() : Region {query}</text><ellipse cx="6275.1338" cy="3874.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6284.1338" y="3877.1323">getSize() : Size {query}</text><polygon fill="#FFFF44" points="6275.1338,3882.6289,6279.1338,3886.6289,6275.1338,3890.6289,6271.1338,3886.6289" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="6284.1338" y="3889.937">arrived(model::GoalPtr aGoal) : bool</text><polygon fill="#FFFF44" points="6275.1338,3895.4336,6279.1338,3899.4336,6275.1338,3903.4336,6271.1338,3899.4336" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="6284.1338" y="3902.7417">collision() : bool</text><ellipse cx="6275.1338" cy="3913.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="6284.1338" y="3915.5464">intersects(const Region&amp; aRegion) : bool {query}</text><ellipse cx="6275.1338" cy="3926.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="6284.1338" y="3928.3511">isActing() : bool {query}</text><ellipse cx="6275.1338" cy="3938.8477" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6284.1338" y="3941.1558">isCommunicating() : bool {query}</text><ellipse cx="6275.1338" cy="3951.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6284.1338" y="3953.9604">isDriving() : bool {query}</text><ellipse cx="6275.1338" cy="3964.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="6284.1338" y="3966.7651">getSpeed() : float {query}</text><ellipse cx="6275.1338" cy="3977.2617" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6284.1338" y="3979.5698">asDebugString() : std::string {query}</text><ellipse cx="6275.1338" cy="3990.0664" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="6284.1338" y="3992.3745">asString() : std::string {query}</text><ellipse cx="6275.1338" cy="4002.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="6284.1338" y="4005.1792">getName() : std::string {query}</text><polygon fill="#FFFF44" points="6275.1338,4010.6758,6279.1338,4014.6758,6275.1338,4018.6758,6271.1338,4014.6758" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="6284.1338" y="4017.9839">calculateRoute(model::GoalPtr aGoal) : void</text><polygon fill="#FFFF44" points="6275.1338,4023.4805,6279.1338,4027.4805,6275.1338,4031.4805,6271.1338,4027.4805" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="6284.1338" y="4030.7886">drive() : void</text><ellipse cx="6275.1338" cy="4041.2852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="6284.1338" y="4043.5933">handleNotification() : void</text><ellipse cx="6275.1338" cy="4054.0898" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="6284.1338" y="4056.3979">handleRequest(Messaging::Message&amp; aMessage) : void</text><ellipse cx="6275.1338" cy="4066.8945" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="6284.1338" y="4069.2026">handleResponse(const Messaging::Message&amp; aMessage) : void</text><ellipse cx="6275.1338" cy="4079.6992" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="6284.1338" y="4082.0073">setFront(const BoundedVector&amp; aVector, bool aNotifyObservers) : void</text><ellipse cx="6275.1338" cy="4092.5039" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="6284.1338" y="4094.812">setName(const std::string&amp; aName, bool aNotifyObservers) : void</text><ellipse cx="6275.1338" cy="4105.3086" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="6284.1338" y="4107.6167">setPosition(const Point&amp; aPosition, bool aNotifyObservers) : void</text><ellipse cx="6275.1338" cy="4118.1133" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="6284.1338" y="4120.4214">setSize(const Size&amp; aSize, bool aNotifyObservers) : void</text><ellipse cx="6275.1338" cy="4130.918" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="6284.1338" y="4133.2261">setSpeed(float aNewSpeed, bool aNotifyObservers) : void</text><ellipse cx="6275.1338" cy="4143.7227" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6284.1338" y="4146.0308">startActing() : void</text><ellipse cx="6275.1338" cy="4156.5273" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="6284.1338" y="4158.8354">startCommunicating() : void</text><ellipse cx="6275.1338" cy="4169.332" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="6284.1338" y="4171.6401">startDriving() : void</text><ellipse cx="6275.1338" cy="4182.1367" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="6284.1338" y="4184.4448">stopActing() : void</text><ellipse cx="6275.1338" cy="4194.9414" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="6284.1338" y="4197.2495">stopCommunicating() : void</text><ellipse cx="6275.1338" cy="4207.7461" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6284.1338" y="4210.0542">stopDriving() : void</text><!--class LaserDistanceSensor--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="137.6328" id="LaserDistanceSensor" style="stroke: #A80036; stroke-width: 1.5;" width="693" x="5774.1338" y="4929"/><ellipse cx="6049.8838" cy="4945" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6052.8526,4950.6406 Q6052.2744,4950.9375 6051.6338,4951.0859 Q6050.9932,4951.2344 6050.2901,4951.2344 Q6047.7901,4951.2344 6046.4697,4949.5859 Q6045.1494,4947.9375 6045.1494,4944.8125 Q6045.1494,4941.6875 6046.4697,4940.0313 Q6047.7901,4938.375 6050.2901,4938.375 Q6050.9932,4938.375 6051.6416,4938.5313 Q6052.2901,4938.6875 6052.8526,4938.9844 L6052.8526,4941.7031 Q6052.2276,4941.125 6051.6338,4940.8516 Q6051.0401,4940.5781 6050.4151,4940.5781 Q6049.0713,4940.5781 6048.3838,4941.6484 Q6047.6963,4942.7188 6047.6963,4944.8125 Q6047.6963,4946.9063 6048.3838,4947.9766 Q6049.0713,4949.0469 6050.4151,4949.0469 Q6051.0401,4949.0469 6051.6338,4948.7734 Q6052.2276,4948.5 6052.8526,4947.9219 L6052.8526,4950.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="133" x="6070.3838" y="4949.1543">LaserDistanceSensor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5775.1338" x2="6466.1338" y1="4961" y2="4961"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5775.1338" x2="6466.1338" y1="4969" y2="4969"/><ellipse cx="5785.1338" cy="4980.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5794.1338" y="4983.2104">LaserDistanceSensor()</text><ellipse cx="5785.1338" cy="4993.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="5794.1338" y="4996.0151">LaserDistanceSensor(Robot* aRobot)</text><ellipse cx="5785.1338" cy="5006.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5794.1338" y="5008.8198">~LaserDistanceSensor()</text><ellipse cx="5785.1338" cy="5019.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="667" x="5794.1338" y="5021.6245">getPerceptFor(std::shared_ptr&lt; AbstractStimulus&gt; anAbstractStimulus) : std::shared_ptr&lt;AbstractPercept&gt; {query}</text><ellipse cx="5785.1338" cy="5032.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="5794.1338" y="5034.4292">getStimulus() : std::shared_ptr&lt;AbstractStimulus&gt; {query}</text><ellipse cx="5785.1338" cy="5044.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5794.1338" y="5047.2339">asDebugString() : std::string {query}</text><ellipse cx="5785.1338" cy="5057.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="5794.1338" y="5060.0386">asString() : std::string {query}</text><!--class ModelObject--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="163.2422" id="ModelObject" style="stroke: #A80036; stroke-width: 1.5;" width="381" x="6647.1338" y="2295.5"/><ellipse cx="6794.8838" cy="2311.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6797.8526,2317.1406 Q6797.2744,2317.4375 6796.6338,2317.5859 Q6795.9932,2317.7344 6795.2901,2317.7344 Q6792.7901,2317.7344 6791.4697,2316.0859 Q6790.1494,2314.4375 6790.1494,2311.3125 Q6790.1494,2308.1875 6791.4697,2306.5313 Q6792.7901,2304.875 6795.2901,2304.875 Q6795.9932,2304.875 6796.6416,2305.0313 Q6797.2901,2305.1875 6797.8526,2305.4844 L6797.8526,2308.2031 Q6797.2276,2307.625 6796.6338,2307.3516 Q6796.0401,2307.0781 6795.4151,2307.0781 Q6794.0713,2307.0781 6793.3838,2308.1484 Q6792.6963,2309.2188 6792.6963,2311.3125 Q6792.6963,2313.4063 6793.3838,2314.4766 Q6794.0713,2315.5469 6795.4151,2315.5469 Q6796.0401,2315.5469 6796.6338,2315.2734 Q6797.2276,2315 6797.8526,2314.4219 L6797.8526,2317.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="6815.3838" y="2315.6543">ModelObject</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6648.1338" x2="7027.1338" y1="2327.5" y2="2327.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6655.1338" y="2336.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="6667.1338" y="2341.7104">objectId : Base::ObjectId</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6648.1338" x2="7027.1338" y1="2348.3047" y2="2348.3047"/><ellipse cx="6658.1338" cy="2360.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="6667.1338" y="2362.5151">ModelObject()</text><ellipse cx="6658.1338" cy="2373.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="6667.1338" y="2375.3198">~ModelObject()</text><ellipse cx="6658.1338" cy="2385.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="6667.1338" y="2388.1245">getObjectId() : Base::ObjectId&amp; {query}</text><ellipse cx="6658.1338" cy="2398.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="6667.1338" y="2400.9292">operator&lt;(const ModelObject&amp; aModelObject) : bool {query}</text><ellipse cx="6658.1338" cy="2411.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6667.1338" y="2413.7339">operator==(const ModelObject&amp; aModelObject) : bool {query}</text><ellipse cx="6658.1338" cy="2424.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="6667.1338" y="2426.5386">toPtr() : std::shared_ptr&lt;DestinationType&gt;</text><ellipse cx="6658.1338" cy="2437.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6667.1338" y="2439.3433">asDebugString() : std::string {query}</text><ellipse cx="6658.1338" cy="2449.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="6667.1338" y="2452.1479">asString() : std::string {query}</text><!--class RobotWorld--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="444.9453" id="RobotWorld" style="stroke: #A80036; stroke-width: 1.5;" width="605" x="7011.1338" y="4277"/><ellipse cx="7273.3838" cy="4293" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7276.3526,4298.6406 Q7275.7744,4298.9375 7275.1338,4299.0859 Q7274.4932,4299.2344 7273.7901,4299.2344 Q7271.2901,4299.2344 7269.9697,4297.5859 Q7268.6494,4295.9375 7268.6494,4292.8125 Q7268.6494,4289.6875 7269.9697,4288.0313 Q7271.2901,4286.375 7273.7901,4286.375 Q7274.4932,4286.375 7275.1416,4286.5313 Q7275.7901,4286.6875 7276.3526,4286.9844 L7276.3526,4289.7031 Q7275.7276,4289.125 7275.1338,4288.8516 Q7274.5401,4288.5781 7273.9151,4288.5781 Q7272.5713,4288.5781 7271.8838,4289.6484 Q7271.1963,4290.7188 7271.1963,4292.8125 Q7271.1963,4294.9063 7271.8838,4295.9766 Q7272.5713,4297.0469 7273.9151,4297.0469 Q7274.5401,4297.0469 7275.1338,4296.7734 Q7275.7276,4296.5 7276.3526,4295.9219 L7276.3526,4298.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="7293.8838" y="4297.1543">RobotWorld</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7012.1338" x2="7615.1338" y1="4309" y2="4309"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7019.1338" y="4317.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="7031.1338" y="4323.2104">goals : mutable std::vector&lt; GoalPtr&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7019.1338" y="4330.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="7031.1338" y="4336.0151">robots : mutable std::vector&lt; RobotPtr&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7019.1338" y="4343.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="7031.1338" y="4348.8198">walls : mutable std::vector&lt; WallPtr&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7019.1338" y="4356.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="7031.1338" y="4361.6245">wayPoints : mutable std::vector&lt; WayPointPtr&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7012.1338" x2="7615.1338" y1="4368.2188" y2="4368.2188"/><polygon fill="#FFFF44" points="7022.1338,4375.1211,7026.1338,4379.1211,7022.1338,4383.1211,7018.1338,4379.1211" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7031.1338" y="4382.4292">RobotWorld()</text><polygon fill="#FFFF44" points="7022.1338,4387.9258,7026.1338,4391.9258,7022.1338,4395.9258,7018.1338,4391.9258" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="7031.1338" y="4395.2339">~RobotWorld()</text><ellipse cx="7022.1338" cy="4405.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="7031.1338" y="4408.0386">getGoal(const std::string&amp; aName) : GoalPtr {query}</text><ellipse cx="7022.1338" cy="4418.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="7031.1338" y="4420.8433">getGoal(const Base::ObjectId&amp; anObjectId) : GoalPtr {query}</text><ellipse cx="7022.1338" cy="4431.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="531" x="7031.1338" y="4433.6479">newGoal(const std::string&amp; aName, const Point&amp; aPosition, bool aNotifyObservers) : GoalPtr</text><ellipse cx="7022.1338" cy="4444.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="7031.1338" y="4446.4526">getRobot(const std::string&amp; aName) : RobotPtr {query}</text><ellipse cx="7022.1338" cy="4456.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="7031.1338" y="4459.2573">getRobot(const Base::ObjectId&amp; anObjectId) : RobotPtr {query}</text><ellipse cx="7022.1338" cy="4469.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="7031.1338" y="4472.062">newRobot(const std::string&amp; aName, const Point&amp; aPosition, bool aNotifyObservers) : RobotPtr</text><ellipse cx="7022.1338" cy="4482.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="7031.1338" y="4484.8667">getRobotWorld() : RobotWorld&amp;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="7031.1338" x2="7205.1338" y1="4486.8667" y2="4486.8667"/><ellipse cx="7022.1338" cy="4495.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="7031.1338" y="4497.6714">getWall(const Base::ObjectId&amp; anObjectId) : WallPtr {query}</text><ellipse cx="7022.1338" cy="4508.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="7031.1338" y="4510.4761">newWall(const Point&amp; aPoint1, const Point&amp; aPoint2, bool aNotifyObservers) : WallPtr</text><ellipse cx="7022.1338" cy="4520.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="7031.1338" y="4523.2808">getWayPoint(const std::string&amp; aName) : WayPointPtr {query}</text><ellipse cx="7022.1338" cy="4533.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="396" x="7031.1338" y="4536.0854">getWayPoint(const Base::ObjectId&amp; anObjectId) : WayPointPtr {query}</text><ellipse cx="7022.1338" cy="4546.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="7031.1338" y="4548.8901">newWayPoint(const std::string&amp; aName, const Point&amp; aPosition, bool aNotifyObservers) : WayPointPtr</text><ellipse cx="7022.1338" cy="4559.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7031.1338" y="4561.6948">asDebugString() : std::string {query}</text><ellipse cx="7022.1338" cy="4572.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="7031.1338" y="4574.4995">asString() : std::string {query}</text><ellipse cx="7022.1338" cy="4584.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="7031.1338" y="4587.3042">getGoals() : std::vector&lt;GoalPtr&gt;&amp; {query}</text><ellipse cx="7022.1338" cy="4597.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="7031.1338" y="4600.1089">getRobots() : std::vector&lt;RobotPtr&gt;&amp; {query}</text><ellipse cx="7022.1338" cy="4610.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="7031.1338" y="4612.9136">getWalls() : std::vector&lt;WallPtr&gt;&amp; {query}</text><ellipse cx="7022.1338" cy="4623.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="7031.1338" y="4625.7183">getWayPoints() : std::vector&lt;WayPointPtr&gt;&amp; {query}</text><ellipse cx="7022.1338" cy="4636.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="7031.1338" y="4638.5229">deleteGoal(model::GoalPtr aGoal, bool aNotifyObservers) : void</text><ellipse cx="7022.1338" cy="4649.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="7031.1338" y="4651.3276">deleteRobot(model::RobotPtr aRobot, bool aNotifyObservers) : void</text><ellipse cx="7022.1338" cy="4661.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="7031.1338" y="4664.1323">deleteWall(model::WallPtr aWall, bool aNotifyObservers) : void</text><ellipse cx="7022.1338" cy="4674.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="431" x="7031.1338" y="4676.937">deleteWayPoint(model::WayPointPtr aWayPoint, bool aNotifyObservers) : void</text><ellipse cx="7022.1338" cy="4687.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="7031.1338" y="4689.7417">populate(int aNumberOfWalls) : void</text><ellipse cx="7022.1338" cy="4700.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="7031.1338" y="4702.5464">unpopulate(bool aNotifyObservers) : void</text><ellipse cx="7022.1338" cy="4713.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="530" x="7031.1338" y="4715.3511">unpopulate(const std::vector&lt;Base::ObjectId&gt;&amp; aKeepObjects, bool aNotifyObservers) : void</text><!--class SteeringActuator--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="86.4141" id="SteeringActuator" style="stroke: #A80036; stroke-width: 1.5;" width="403" x="6499.1338" y="3158"/><ellipse cx="6642.8838" cy="3174" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6645.8526,3179.6406 Q6645.2744,3179.9375 6644.6338,3180.0859 Q6643.9932,3180.2344 6643.2901,3180.2344 Q6640.7901,3180.2344 6639.4697,3178.5859 Q6638.1494,3176.9375 6638.1494,3173.8125 Q6638.1494,3170.6875 6639.4697,3169.0313 Q6640.7901,3167.375 6643.2901,3167.375 Q6643.9932,3167.375 6644.6416,3167.5313 Q6645.2901,3167.6875 6645.8526,3167.9844 L6645.8526,3170.7031 Q6645.2276,3170.125 6644.6338,3169.8516 Q6644.0401,3169.5781 6643.4151,3169.5781 Q6642.0713,3169.5781 6641.3838,3170.6484 Q6640.6963,3171.7188 6640.6963,3173.8125 Q6640.6963,3175.9063 6641.3838,3176.9766 Q6642.0713,3178.0469 6643.4151,3178.0469 Q6644.0401,3178.0469 6644.6338,3177.7734 Q6645.2276,3177.5 6645.8526,3176.9219 L6645.8526,3179.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="6663.3838" y="3178.1543">SteeringActuator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6500.1338" x2="6901.1338" y1="3190" y2="3190"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6500.1338" x2="6901.1338" y1="3198" y2="3198"/><ellipse cx="6510.1338" cy="3209.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="6519.1338" y="3212.2104">SteeringActuator()</text><ellipse cx="6510.1338" cy="3222.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="6519.1338" y="3225.0151">~SteeringActuator()</text><ellipse cx="6510.1338" cy="3235.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="6519.1338" y="3237.8198">handleCommand(AbstractCommand&amp; anAbstractCommand) : void</text><!--class Wall--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="188.8516" id="Wall" style="stroke: #A80036; stroke-width: 1.5;" width="376" x="7276.6338" y="4903.5"/><ellipse cx="7447.8838" cy="4919.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7450.8526,4925.1406 Q7450.2744,4925.4375 7449.6338,4925.5859 Q7448.9932,4925.7344 7448.2901,4925.7344 Q7445.7901,4925.7344 7444.4697,4924.0859 Q7443.1494,4922.4375 7443.1494,4919.3125 Q7443.1494,4916.1875 7444.4697,4914.5313 Q7445.7901,4912.875 7448.2901,4912.875 Q7448.9932,4912.875 7449.6416,4913.0313 Q7450.2901,4913.1875 7450.8526,4913.4844 L7450.8526,4916.2031 Q7450.2276,4915.625 7449.6338,4915.3516 Q7449.0401,4915.0781 7448.4151,4915.0781 Q7447.0713,4915.0781 7446.3838,4916.1484 Q7445.6963,4917.2188 7445.6963,4919.3125 Q7445.6963,4921.4063 7446.3838,4922.4766 Q7447.0713,4923.5469 7448.4151,4923.5469 Q7449.0401,4923.5469 7449.6338,4923.2734 Q7450.2276,4923 7450.8526,4922.4219 L7450.8526,4925.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25" x="7468.3838" y="4923.6543">Wall</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7277.6338" x2="7651.6338" y1="4935.5" y2="4935.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7284.6338" y="4944.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="7296.6338" y="4949.7104">point1 : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7284.6338" y="4957.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="7296.6338" y="4962.5151">point2 : Point</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7277.6338" x2="7651.6338" y1="4969.1094" y2="4969.1094"/><ellipse cx="7287.6338" cy="4981.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="7296.6338" y="4983.3198">Wall()</text><ellipse cx="7287.6338" cy="4993.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="7296.6338" y="4996.1245">Wall(const Point&amp; aPoint1, const Point&amp; aPoint2)</text><ellipse cx="7287.6338" cy="5006.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="7296.6338" y="5008.9292">~Wall()</text><ellipse cx="7287.6338" cy="5019.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="7296.6338" y="5021.7339">getPoint1() : Point {query}</text><ellipse cx="7287.6338" cy="5032.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="7296.6338" y="5034.5386">getPoint2() : Point {query}</text><ellipse cx="7287.6338" cy="5045.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7296.6338" y="5047.3433">asDebugString() : std::string {query}</text><ellipse cx="7287.6338" cy="5057.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="7296.6338" y="5060.1479">asString() : std::string {query}</text><ellipse cx="7287.6338" cy="5070.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="7296.6338" y="5072.9526">setPoint1(const Point&amp; aPoint1, bool aNotifyObservers) : void</text><ellipse cx="7287.6338" cy="5083.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="7296.6338" y="5085.7573">setPoint2(const Point&amp; aPoint2, bool aNotifyObservers) : void</text><!--class WayPoint--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="265.6797" id="WayPoint" style="stroke: #A80036; stroke-width: 1.5;" width="403" x="6838.1338" y="4865"/><ellipse cx="7006.8838" cy="4881" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7009.8526,4886.6406 Q7009.2744,4886.9375 7008.6338,4887.0859 Q7007.9932,4887.2344 7007.2901,4887.2344 Q7004.7901,4887.2344 7003.4697,4885.5859 Q7002.1494,4883.9375 7002.1494,4880.8125 Q7002.1494,4877.6875 7003.4697,4876.0313 Q7004.7901,4874.375 7007.2901,4874.375 Q7007.9932,4874.375 7008.6416,4874.5313 Q7009.2901,4874.6875 7009.8526,4874.9844 L7009.8526,4877.7031 Q7009.2276,4877.125 7008.6338,4876.8516 Q7008.0401,4876.5781 7007.4151,4876.5781 Q7006.0713,4876.5781 7005.3838,4877.6484 Q7004.6963,4878.7188 7004.6963,4880.8125 Q7004.6963,4882.9063 7005.3838,4883.9766 Q7006.0713,4885.0469 7007.4151,4885.0469 Q7008.0401,4885.0469 7008.6338,4884.7734 Q7009.2276,4884.5 7009.8526,4883.9219 L7009.8526,4886.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="7027.3838" y="4885.1543">WayPoint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6839.1338" x2="7240.1338" y1="4897" y2="4897"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6846.1338" y="4905.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="6858.1338" y="4911.2104">position : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6846.1338" y="4918.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="6858.1338" y="4924.0151">size : Size</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6846.1338" y="4931.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="6858.1338" y="4936.8198">name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6839.1338" x2="7240.1338" y1="4943.4141" y2="4943.4141"/><ellipse cx="6849.1338" cy="4955.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="6858.1338" y="4957.6245">WayPoint()</text><ellipse cx="6849.1338" cy="4968.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="6858.1338" y="4970.4292">WayPoint(const std::string&amp; aName)</text><ellipse cx="6849.1338" cy="4980.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="6858.1338" y="4983.2339">WayPoint(const std::string&amp; aName, const Point&amp; aPosition)</text><ellipse cx="6849.1338" cy="4993.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="6858.1338" y="4996.0386">~WayPoint()</text><ellipse cx="6849.1338" cy="5006.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6858.1338" y="5008.8433">getPosition() : Point {query}</text><ellipse cx="6849.1338" cy="5019.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6858.1338" y="5021.6479">getRegion() : Region {query}</text><ellipse cx="6849.1338" cy="5032.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6858.1338" y="5034.4526">getSize() : Size {query}</text><ellipse cx="6849.1338" cy="5044.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="6858.1338" y="5047.2573">intersects(const Region&amp; aRegion) : bool {query}</text><ellipse cx="6849.1338" cy="5057.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6858.1338" y="5060.062">asDebugString() : std::string {query}</text><ellipse cx="6849.1338" cy="5070.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="6858.1338" y="5072.8667">asString() : std::string {query}</text><ellipse cx="6849.1338" cy="5083.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="6858.1338" y="5085.6714">getName() : std::string {query}</text><ellipse cx="6849.1338" cy="5096.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="6858.1338" y="5098.4761">setName(const std::string&amp; aName, bool aNotifyObservers) : void</text><ellipse cx="6849.1338" cy="5108.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="6858.1338" y="5111.2808">setPosition(const Point&amp; aPosition, bool aNotifyObservers) : void</text><ellipse cx="6849.1338" cy="5121.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="6858.1338" y="5124.0854">setSize(const Size&amp; aSize, bool aNotifyObservers) : void</text><!--class DistancePercept--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="99.2188" id="DistancePercept" style="stroke: #A80036; stroke-width: 1.5;" width="380" x="5781.6338" y="5772.5"/><ellipse cx="5915.3838" cy="5788.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5918.3526,5794.1406 Q5917.7744,5794.4375 5917.1338,5794.5859 Q5916.4932,5794.7344 5915.7901,5794.7344 Q5913.2901,5794.7344 5911.9697,5793.0859 Q5910.6494,5791.4375 5910.6494,5788.3125 Q5910.6494,5785.1875 5911.9697,5783.5313 Q5913.2901,5781.875 5915.7901,5781.875 Q5916.4932,5781.875 5917.1416,5782.0313 Q5917.7901,5782.1875 5918.3526,5782.4844 L5918.3526,5785.2031 Q5917.7276,5784.625 5917.1338,5784.3516 Q5916.5401,5784.0781 5915.9151,5784.0781 Q5914.5713,5784.0781 5913.8838,5785.1484 Q5913.1963,5786.2188 5913.1963,5788.3125 Q5913.1963,5790.4063 5913.8838,5791.4766 Q5914.5713,5792.5469 5915.9151,5792.5469 Q5916.5401,5792.5469 5917.1338,5792.2734 Q5917.7276,5792 5918.3526,5791.4219 L5918.3526,5794.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="5935.8838" y="5792.6543">DistancePercept</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5782.6338" x2="6160.6338" y1="5804.5" y2="5804.5"/><ellipse cx="5792.6338" cy="5816.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="5801.6338" y="5818.7104">angle : double</text><ellipse cx="5792.6338" cy="5829.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="5801.6338" y="5831.5151">distance : double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5782.6338" x2="6160.6338" y1="5838.1094" y2="5838.1094"/><ellipse cx="5792.6338" cy="5850.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="5801.6338" y="5852.3198">DistancePercept(const DistanceStimulus&amp; aDistanceStimulus)</text><ellipse cx="5792.6338" cy="5862.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="5801.6338" y="5865.1245">DistancePercept(double anAngle, double aDistance)</text><!--class DistanceStimulus--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="86.4141" id="DistanceStimulus" style="stroke: #A80036; stroke-width: 1.5;" width="326" x="6196.6338" y="5779"/><ellipse cx="6301.3838" cy="5795" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6304.3526,5800.6406 Q6303.7744,5800.9375 6303.1338,5801.0859 Q6302.4932,5801.2344 6301.7901,5801.2344 Q6299.2901,5801.2344 6297.9697,5799.5859 Q6296.6494,5797.9375 6296.6494,5794.8125 Q6296.6494,5791.6875 6297.9697,5790.0313 Q6299.2901,5788.375 6301.7901,5788.375 Q6302.4932,5788.375 6303.1416,5788.5313 Q6303.7901,5788.6875 6304.3526,5788.9844 L6304.3526,5791.7031 Q6303.7276,5791.125 6303.1338,5790.8516 Q6302.5401,5790.5781 6301.9151,5790.5781 Q6300.5713,5790.5781 6299.8838,5791.6484 Q6299.1963,5792.7188 6299.1963,5794.8125 Q6299.1963,5796.9063 6299.8838,5797.9766 Q6300.5713,5799.0469 6301.9151,5799.0469 Q6302.5401,5799.0469 6303.1338,5798.7734 Q6303.7276,5798.5 6304.3526,5797.9219 L6304.3526,5800.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="6321.8838" y="5799.1543">DistanceStimulus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6197.6338" x2="6521.6338" y1="5811" y2="5811"/><ellipse cx="6207.6338" cy="5822.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="6216.6338" y="5825.2104">angle : double</text><ellipse cx="6207.6338" cy="5835.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6216.6338" y="5838.0151">distance : double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6197.6338" x2="6521.6338" y1="5844.6094" y2="5844.6094"/><ellipse cx="6207.6338" cy="5856.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="6216.6338" y="5858.8198">DistanceStimulus(double anAngle, double aDistance)</text><!--class Goal--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="124.8281" id="Goal" style="stroke: #A80036; stroke-width: 1.5;" width="345" x="6629.1338" y="5421"/><ellipse cx="6783.3838" cy="5437" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6786.3526,5442.6406 Q6785.7744,5442.9375 6785.1338,5443.0859 Q6784.4932,5443.2344 6783.7901,5443.2344 Q6781.2901,5443.2344 6779.9697,5441.5859 Q6778.6494,5439.9375 6778.6494,5436.8125 Q6778.6494,5433.6875 6779.9697,5432.0313 Q6781.2901,5430.375 6783.7901,5430.375 Q6784.4932,5430.375 6785.1416,5430.5313 Q6785.7901,5430.6875 6786.3526,5430.9844 L6786.3526,5433.7031 Q6785.7276,5433.125 6785.1338,5432.8516 Q6784.5401,5432.5781 6783.9151,5432.5781 Q6782.5713,5432.5781 6781.8838,5433.6484 Q6781.1963,5434.7188 6781.1963,5436.8125 Q6781.1963,5438.9063 6781.8838,5439.9766 Q6782.5713,5441.0469 6783.9151,5441.0469 Q6784.5401,5441.0469 6785.1338,5440.7734 Q6785.7276,5440.5 6786.3526,5439.9219 L6786.3526,5442.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="28" x="6803.8838" y="5441.1543">Goal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6630.1338" x2="6973.1338" y1="5453" y2="5453"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6630.1338" x2="6973.1338" y1="5461" y2="5461"/><ellipse cx="6640.1338" cy="5472.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="6649.1338" y="5475.2104">Goal()</text><ellipse cx="6640.1338" cy="5485.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="6649.1338" y="5488.0151">Goal(const std::string&amp; aName)</text><ellipse cx="6640.1338" cy="5498.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="6649.1338" y="5500.8198">Goal(const std::string&amp; aName, const Point&amp; aPosition)</text><ellipse cx="6640.1338" cy="5511.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="6649.1338" y="5513.6245">~Goal()</text><ellipse cx="6640.1338" cy="5524.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6649.1338" y="5526.4292">asDebugString() : std::string {query}</text><ellipse cx="6640.1338" cy="5536.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="6649.1338" y="5539.2339">asString() : std::string {query}</text><!--class Client--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="150.4375" id="Client" style="stroke: #A80036; stroke-width: 1.5;" width="588" x="746.6338" y="3778.5"/><ellipse cx="1018.8838" cy="3794.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1021.8526,3800.1406 Q1021.2744,3800.4375 1020.6338,3800.5859 Q1019.9932,3800.7344 1019.2901,3800.7344 Q1016.7901,3800.7344 1015.4697,3799.0859 Q1014.1494,3797.4375 1014.1494,3794.3125 Q1014.1494,3791.1875 1015.4697,3789.5313 Q1016.7901,3787.875 1019.2901,3787.875 Q1019.9932,3787.875 1020.6416,3788.0313 Q1021.2901,3788.1875 1021.8526,3788.4844 L1021.8526,3791.2031 Q1021.2276,3790.625 1020.6338,3790.3516 Q1020.0401,3790.0781 1019.4151,3790.0781 Q1018.0713,3790.0781 1017.3838,3791.1484 Q1016.6963,3792.2188 1016.6963,3794.3125 Q1016.6963,3796.4063 1017.3838,3797.4766 Q1018.0713,3798.5469 1019.4151,3798.5469 Q1020.0401,3798.5469 1020.6338,3798.2734 Q1021.2276,3798 1021.8526,3797.4219 L1021.8526,3800.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="1039.3838" y="3798.6543">Client</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="747.6338" x2="1333.6338" y1="3810.5" y2="3810.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="754.6338" y="3819.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="766.6338" y="3824.7104">responseHandler : ResponseHandlerPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="754.6338" y="3832.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="766.6338" y="3837.5151">io_service : boost::asio::io_service&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="754.6338" y="3845.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="766.6338" y="3850.3198">host : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="754.6338" y="3857.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="766.6338" y="3863.1245">port : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="747.6338" x2="1333.6338" y1="3869.7188" y2="3869.7188"/><ellipse cx="757.6338" cy="3881.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="562" x="766.6338" y="3883.9292">Client(const std::string&amp; aHost, const std::string&amp; aPort, ResponseHandlerPtr aResponseHandler)</text><ellipse cx="757.6338" cy="3894.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="766.6338" y="3896.7339">~Client()</text><ellipse cx="757.6338" cy="3907.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="766.6338" y="3909.5386">dispatchMessage(Message&amp; aMessage) : void</text><ellipse cx="757.6338" cy="3920.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="766.6338" y="3922.3433">handleConnect(ClientSession* aSession, const boost::system::error_code&amp; error) : void</text><!--class ClientSession--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="137.6328" id="ClientSession" style="stroke: #A80036; stroke-width: 1.5;" width="668" x="310.6338" y="5414.5"/><ellipse cx="598.3838" cy="5430.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M601.3526,5436.1406 Q600.7744,5436.4375 600.1338,5436.5859 Q599.4932,5436.7344 598.7901,5436.7344 Q596.2901,5436.7344 594.9697,5435.0859 Q593.6494,5433.4375 593.6494,5430.3125 Q593.6494,5427.1875 594.9697,5425.5313 Q596.2901,5423.875 598.7901,5423.875 Q599.4932,5423.875 600.1416,5424.0313 Q600.7901,5424.1875 601.3526,5424.4844 L601.3526,5427.2031 Q600.7276,5426.625 600.1338,5426.3516 Q599.5401,5426.0781 598.9151,5426.0781 Q597.5713,5426.0781 596.8838,5427.1484 Q596.1963,5428.2188 596.1963,5430.3125 Q596.1963,5432.4063 596.8838,5433.4766 Q597.5713,5434.5469 598.9151,5434.5469 Q599.5401,5434.5469 600.1338,5434.2734 Q600.7276,5434 601.3526,5433.4219 L601.3526,5436.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="618.8838" y="5434.6543">ClientSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="311.6338" x2="977.6338" y1="5446.5" y2="5446.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="318.6338" y="5455.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="330.6338" y="5460.7104">message : Message</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="318.6338" y="5468.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="330.6338" y="5473.5151">responseHandler : ResponseHandlerPtr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="311.6338" x2="977.6338" y1="5480.1094" y2="5480.1094"/><ellipse cx="321.6338" cy="5492.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="642" x="330.6338" y="5494.3198">ClientSession(Message aMessage, boost::asio::io_service&amp; io_service, ResponseHandlerPtr aResponseHandler)</text><ellipse cx="321.6338" cy="5504.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="330.6338" y="5507.1245">~ClientSession()</text><ellipse cx="321.6338" cy="5517.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="330.6338" y="5519.9292">handleMessageRead(Message&amp; aMessage) : void</text><ellipse cx="321.6338" cy="5530.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="330.6338" y="5532.7339">handleMessageWritten(Message&amp; UNUSEDPARAM(aMessage)) : void</text><ellipse cx="321.6338" cy="5543.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="330.6338" y="5545.5386">start() : void</text><!--class CommunicationService--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="163.2422" id="CommunicationService" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="384.1338" y="4418"/><ellipse cx="574.8838" cy="4434" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M577.8526,4439.6406 Q577.2744,4439.9375 576.6338,4440.0859 Q575.9932,4440.2344 575.2901,4440.2344 Q572.7901,4440.2344 571.4697,4438.5859 Q570.1494,4436.9375 570.1494,4433.8125 Q570.1494,4430.6875 571.4697,4429.0313 Q572.7901,4427.375 575.2901,4427.375 Q575.9932,4427.375 576.6416,4427.5313 Q577.2901,4427.6875 577.8526,4427.9844 L577.8526,4430.7031 Q577.2276,4430.125 576.6338,4429.8516 Q576.0401,4429.5781 575.4151,4429.5781 Q574.0713,4429.5781 573.3838,4430.6484 Q572.6963,4431.7188 572.6963,4433.8125 Q572.6963,4435.9063 573.3838,4436.9766 Q574.0713,4438.0469 575.4151,4438.0469 Q576.0401,4438.0469 576.6338,4437.7734 Q577.2276,4437.5 577.8526,4436.9219 L577.8526,4439.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="141" x="595.3838" y="4438.1543">CommunicationService</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="385.1338" x2="914.1338" y1="4450" y2="4450"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="392.1338" y="4458.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="404.1338" y="4464.2104">io_service : boost::asio::io_service</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="392.1338" y="4471.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="404.1338" y="4477.0151">requestHandlerThread : std::thread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="385.1338" x2="914.1338" y1="4483.6094" y2="4483.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="392.1338" y="4492.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="404.1338" y="4497.8198">CommunicationService()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="392.1338" y="4505.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="404.1338" y="4510.6245">~CommunicationService()</text><ellipse cx="395.1338" cy="4521.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="308" x="404.1338" y="4523.4292">getCommunicationService() : CommunicationService&amp;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="404.1338" x2="712.1338" y1="4525.4292" y2="4525.4292"/><ellipse cx="395.1338" cy="4533.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="404.1338" y="4536.2339">getIOService() : boost::asio::io_service&amp;</text><ellipse cx="395.1338" cy="4546.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="431" x="404.1338" y="4549.0386">runRequestHandler(RequestHandlerPtr aRequestHandler, short aPort) : void</text><ellipse cx="395.1338" cy="4559.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="404.1338" y="4561.8433">runRequestHandler(RequestHandlerPtr aRequestHandler, const std::string&amp; aPort) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="392.1338" y="4569.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="470" x="404.1338" y="4574.6479">runRequestHandlerWorker(RequestHandlerPtr aRequestHandler, short aPort) : void</text><!--class Message--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="252.875" id="Message" style="stroke: #A80036; stroke-width: 1.5;" width="373" x="1131.1338" y="5951"/><ellipse cx="1285.3838" cy="5967" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1288.3526,5972.6406 Q1287.7744,5972.9375 1287.1338,5973.0859 Q1286.4932,5973.2344 1285.7901,5973.2344 Q1283.2901,5973.2344 1281.9697,5971.5859 Q1280.6494,5969.9375 1280.6494,5966.8125 Q1280.6494,5963.6875 1281.9697,5962.0313 Q1283.2901,5960.375 1285.7901,5960.375 Q1286.4932,5960.375 1287.1416,5960.5313 Q1287.7901,5960.6875 1288.3526,5960.9844 L1288.3526,5963.7031 Q1287.7276,5963.125 1287.1338,5962.8516 Q1286.5401,5962.5781 1285.9151,5962.5781 Q1284.5713,5962.5781 1283.8838,5963.6484 Q1283.1963,5964.7188 1283.1963,5966.8125 Q1283.1963,5968.9063 1283.8838,5969.9766 Q1284.5713,5971.0469 1285.9151,5971.0469 Q1286.5401,5971.0469 1287.1338,5970.7734 Q1287.7276,5970.5 1288.3526,5969.9219 L1288.3526,5972.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="1305.8838" y="5971.1543">Message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1132.1338" x2="1503.1338" y1="5983" y2="5983"/><ellipse cx="1142.1338" cy="5994.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1151.1338" y="5997.2104">message : MessageBody</text><ellipse cx="1142.1338" cy="6007.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1151.1338" y="6010.0151">messageType : char</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1132.1338" x2="1503.1338" y1="6016.6094" y2="6016.6094"/><ellipse cx="1142.1338" cy="6028.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="1151.1338" y="6030.8198">Message()</text><ellipse cx="1142.1338" cy="6041.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="1151.1338" y="6043.6245">Message(char aMessageType)</text><ellipse cx="1142.1338" cy="6054.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="1151.1338" y="6056.4292">Message(char aMessageType, const std::string&amp; aMessage)</text><ellipse cx="1142.1338" cy="6066.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1151.1338" y="6069.2339">Message(const Message&amp; aMessage)</text><ellipse cx="1142.1338" cy="6079.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1151.1338" y="6082.0386">~Message()</text><ellipse cx="1142.1338" cy="6092.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1151.1338" y="6094.8433">getBody() : MessageBody {query}</text><ellipse cx="1142.1338" cy="6105.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1151.1338" y="6107.6479">getHeader() : MessageHeader {query}</text><ellipse cx="1142.1338" cy="6118.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1151.1338" y="6120.4526">getMessageType() : char {query}</text><ellipse cx="1142.1338" cy="6130.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1151.1338" y="6133.2573">asDebugString() : std::string {query}</text><ellipse cx="1142.1338" cy="6143.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="1151.1338" y="6146.062">asString() : std::string {query}</text><ellipse cx="1142.1338" cy="6156.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1151.1338" y="6158.8667">length() : unsigned long {query}</text><ellipse cx="1142.1338" cy="6169.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1151.1338" y="6171.6714">setBody(const std::string&amp; aBody) : void</text><ellipse cx="1142.1338" cy="6182.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="1151.1338" y="6184.4761">setHeader(const MessageHeader&amp; aHeader) : void</text><ellipse cx="1142.1338" cy="6194.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="1151.1338" y="6197.2808">setMessageType(char aMessageType) : void</text><!--class Message::MessageHeader--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="265.6797" id="Message::MessageHeader" style="stroke: #A80036; stroke-width: 1.5;" width="428" x="283.6338" y="3720.5"/><ellipse cx="410.3838" cy="3736.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M413.3526,3742.1406 Q412.7744,3742.4375 412.1338,3742.5859 Q411.4932,3742.7344 410.7901,3742.7344 Q408.2901,3742.7344 406.9697,3741.0859 Q405.6494,3739.4375 405.6494,3736.3125 Q405.6494,3733.1875 406.9697,3731.5313 Q408.2901,3729.875 410.7901,3729.875 Q411.4932,3729.875 412.1416,3730.0313 Q412.7901,3730.1875 413.3526,3730.4844 L413.3526,3733.2031 Q412.7276,3732.625 412.1338,3732.3516 Q411.5401,3732.0781 410.9151,3732.0781 Q409.5713,3732.0781 408.8838,3733.1484 Q408.1963,3734.2188 408.1963,3736.3125 Q408.1963,3738.4063 408.8838,3739.4766 Q409.5713,3740.5469 410.9151,3740.5469 Q411.5401,3740.5469 412.1338,3740.2734 Q412.7276,3740 413.3526,3739.4219 L413.3526,3742.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="166" x="430.8838" y="3740.6543">Message::MessageHeader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="284.6338" x2="710.6338" y1="3752.5" y2="3752.5"/><ellipse cx="294.6338" cy="3764.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="303.6338" y="3766.7104">messageType : char</text><ellipse cx="294.6338" cy="3777.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="193" x="303.6338" y="3779.5151">magicNumber1 : static const char</text><line style="stroke: #000000; stroke-width: 1.0;" x1="303.6338" x2="496.6338" y1="3781.5151" y2="3781.5151"/><ellipse cx="294.6338" cy="3790.0117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="193" x="303.6338" y="3792.3198">magicNumber2 : static const char</text><line style="stroke: #000000; stroke-width: 1.0;" x1="303.6338" x2="496.6338" y1="3794.3198" y2="3794.3198"/><ellipse cx="294.6338" cy="3802.8164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="193" x="303.6338" y="3805.1245">magicNumber3 : static const char</text><line style="stroke: #000000; stroke-width: 1.0;" x1="303.6338" x2="496.6338" y1="3807.1245" y2="3807.1245"/><ellipse cx="294.6338" cy="3815.6211" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="193" x="303.6338" y="3817.9292">magicNumber4 : static const char</text><line style="stroke: #000000; stroke-width: 1.0;" x1="303.6338" x2="496.6338" y1="3819.9292" y2="3819.9292"/><ellipse cx="294.6338" cy="3828.4258" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="303.6338" y="3830.7339">majorVersion : static const char</text><line style="stroke: #000000; stroke-width: 1.0;" x1="303.6338" x2="486.6338" y1="3832.7339" y2="3832.7339"/><ellipse cx="294.6338" cy="3841.2305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="183" x="303.6338" y="3843.5386">minorVersion : static const char</text><line style="stroke: #000000; stroke-width: 1.0;" x1="303.6338" x2="486.6338" y1="3845.5386" y2="3845.5386"/><ellipse cx="294.6338" cy="3854.0352" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="303.6338" y="3856.3433">messageLength : unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="284.6338" x2="710.6338" y1="3862.9375" y2="3862.9375"/><ellipse cx="294.6338" cy="3874.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="303.6338" y="3877.1479">MessageHeader()</text><ellipse cx="294.6338" cy="3887.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="303.6338" y="3889.9526">MessageHeader(char aMessageType, unsigned long aMessageLength)</text><ellipse cx="294.6338" cy="3900.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="303.6338" y="3902.7573">MessageHeader(const std::string&amp; aMessageHeaderBuffer)</text><ellipse cx="294.6338" cy="3913.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="303.6338" y="3915.562">getMessageType() : char {query}</text><ellipse cx="294.6338" cy="3926.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="303.6338" y="3928.3667">asString() : std::string {query}</text><ellipse cx="294.6338" cy="3938.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="303.6338" y="3941.1714">toString() : std::string {query}</text><ellipse cx="294.6338" cy="3951.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="303.6338" y="3953.9761">getHeaderLength() : unsigned long {query}</text><ellipse cx="294.6338" cy="3964.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="303.6338" y="3966.7808">getMessageLength() : unsigned long {query}</text><ellipse cx="294.6338" cy="3977.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="303.6338" y="3979.5854">fromString(const std::string&amp; aString) : void</text><!--class MessageHandler--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="48" id="MessageHandler" style="stroke: #A80036; stroke-width: 1.5;" width="135" x="779.1338" y="6053.5"/><ellipse cx="794.1338" cy="6069.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M794.2432,6064.8438 L793.0869,6069.9219 L795.4151,6069.9219 L794.2432,6064.8438 Z M792.7588,6062.6094 L795.7432,6062.6094 L799.1026,6075 L796.6494,6075 L795.8838,6071.9375 L792.6026,6071.9375 L791.8526,6075 L789.4151,6075 L792.7588,6062.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="103" x="808.1338" y="6073.6543">MessageHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="780.1338" x2="913.1338" y1="6085.5" y2="6085.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="780.1338" x2="913.1338" y1="6093.5" y2="6093.5"/><!--class RequestHandler--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="73.6094" id="RequestHandler" style="stroke: #A80036; stroke-width: 1.5;" width="272" x="915.6338" y="5785"/><ellipse cx="997.3838" cy="5801" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M997.4932,5796.3438 L996.3369,5801.4219 L998.6651,5801.4219 L997.4932,5796.3438 Z M996.0088,5794.1094 L998.9932,5794.1094 L1002.3526,5806.5 L999.8994,5806.5 L999.1338,5803.4375 L995.8526,5803.4375 L995.1026,5806.5 L992.6651,5806.5 L996.0088,5794.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="100" x="1017.8838" y="5805.1543">RequestHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="916.6338" x2="1186.6338" y1="5817" y2="5817"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="916.6338" x2="1186.6338" y1="5825" y2="5825"/><ellipse cx="926.6338" cy="5836.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="935.6338" y="5839.2104">~RequestHandler()</text><ellipse cx="926.6338" cy="5849.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="246" x="935.6338" y="5852.0151">handleRequest(Message&amp; aMessage) : void</text><!--class ResponseHandler--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="73.6094" id="ResponseHandler" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="497.1338" y="5785"/><ellipse cx="595.8838" cy="5801" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M595.9932,5796.3438 L594.8369,5801.4219 L597.1651,5801.4219 L595.9932,5796.3438 Z M594.5088,5794.1094 L597.4932,5794.1094 L600.8526,5806.5 L598.3994,5806.5 L597.6338,5803.4375 L594.3526,5803.4375 L593.6026,5806.5 L591.1651,5806.5 L594.5088,5794.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="109" x="616.3838" y="5805.1543">ResponseHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="498.1338" x2="811.1338" y1="5817" y2="5817"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="498.1338" x2="811.1338" y1="5825" y2="5825"/><ellipse cx="508.1338" cy="5836.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="517.1338" y="5839.2104">~ResponseHandler()</text><ellipse cx="508.1338" cy="5849.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="289" x="517.1338" y="5852.0151">handleResponse(const Message&amp; aMessage) : void</text><!--class Server--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="124.8281" id="Server" style="stroke: #A80036; stroke-width: 1.5;" width="529" x="385.1338" y="4935.5"/><ellipse cx="625.3838" cy="4951.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M628.3526,4957.1406 Q627.7744,4957.4375 627.1338,4957.5859 Q626.4932,4957.7344 625.7901,4957.7344 Q623.2901,4957.7344 621.9697,4956.0859 Q620.6494,4954.4375 620.6494,4951.3125 Q620.6494,4948.1875 621.9697,4946.5313 Q623.2901,4944.875 625.7901,4944.875 Q626.4932,4944.875 627.1416,4945.0313 Q627.7901,4945.1875 628.3526,4945.4844 L628.3526,4948.2031 Q627.7276,4947.625 627.1338,4947.3516 Q626.5401,4947.0781 625.9151,4947.0781 Q624.5713,4947.0781 623.8838,4948.1484 Q623.1963,4949.2188 623.1963,4951.3125 Q623.1963,4953.4063 623.8838,4954.4766 Q624.5713,4955.5469 625.9151,4955.5469 Q626.5401,4955.5469 627.1338,4955.2734 Q627.7276,4955 628.3526,4954.4219 L628.3526,4957.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="645.8838" y="4955.6543">Server</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="386.1338" x2="913.1338" y1="4967.5" y2="4967.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="393.1338" y="4976.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="405.1338" y="4981.7104">requestHandler : RequestHandlerPtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="393.1338" y="4989.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="405.1338" y="4994.5151">io_service : boost::asio::io_service&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="393.1338" y="5002.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="405.1338" y="5007.3198">acceptor : boost::asio::ip::tcp::acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="386.1338" x2="913.1338" y1="5013.9141" y2="5013.9141"/><ellipse cx="396.1338" cy="5025.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="405.1338" y="5028.1245">Server(short port, RequestHandlerPtr aRequestHandler)</text><ellipse cx="396.1338" cy="5038.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="405.1338" y="5040.9292">~Server()</text><ellipse cx="396.1338" cy="5051.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="405.1338" y="5053.7339">handleAccept(ServerSession* aSession, const boost::system::error_code&amp; error) : void</text><!--class ServerSession--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="124.8281" id="ServerSession" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="1088.1338" y="5421"/><ellipse cx="1305.8838" cy="5437" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1308.8526,5442.6406 Q1308.2744,5442.9375 1307.6338,5443.0859 Q1306.9932,5443.2344 1306.2901,5443.2344 Q1303.7901,5443.2344 1302.4697,5441.5859 Q1301.1494,5439.9375 1301.1494,5436.8125 Q1301.1494,5433.6875 1302.4697,5432.0313 Q1303.7901,5430.375 1306.2901,5430.375 Q1306.9932,5430.375 1307.6416,5430.5313 Q1308.2901,5430.6875 1308.8526,5430.9844 L1308.8526,5433.7031 Q1308.2276,5433.125 1307.6338,5432.8516 Q1307.0401,5432.5781 1306.4151,5432.5781 Q1305.0713,5432.5781 1304.3838,5433.6484 Q1303.6963,5434.7188 1303.6963,5436.8125 Q1303.6963,5438.9063 1304.3838,5439.9766 Q1305.0713,5441.0469 1306.4151,5441.0469 Q1307.0401,5441.0469 1307.6338,5440.7734 Q1308.2276,5440.5 1308.8526,5439.9219 L1308.8526,5442.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="1326.3838" y="5441.1543">ServerSession</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1089.1338" x2="1620.1338" y1="5453" y2="5453"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1096.1338" y="5461.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1108.1338" y="5467.2104">requestHandler : RequestHandlerPtr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1089.1338" x2="1620.1338" y1="5473.8047" y2="5473.8047"/><ellipse cx="1099.1338" cy="5485.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="1108.1338" y="5488.0151">ServerSession(boost::asio::io_service&amp; io_service, RequestHandlerPtr aRequestHandler)</text><ellipse cx="1099.1338" cy="5498.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1108.1338" y="5500.8198">~ServerSession()</text><ellipse cx="1099.1338" cy="5511.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="1108.1338" y="5513.6245">handleMessageRead(Message&amp; aMessage) : void</text><ellipse cx="1099.1338" cy="5524.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="1108.1338" y="5526.4292">handleMessageWritten(Message&amp; UNUSEDPARAM(aMessage)) : void</text><ellipse cx="1099.1338" cy="5536.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="1108.1338" y="5539.2339">start() : void</text><!--class Session--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="265.6797" id="Session" style="stroke: #A80036; stroke-width: 1.5;" width="785" x="949.1338" y="4865"/><ellipse cx="1313.8838" cy="4881" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1313.9932,4876.3438 L1312.8369,4881.4219 L1315.1651,4881.4219 L1313.9932,4876.3438 Z M1312.5088,4874.1094 L1315.4932,4874.1094 L1318.8526,4886.5 L1316.3994,4886.5 L1315.6338,4883.4375 L1312.3526,4883.4375 L1311.6026,4886.5 L1309.1651,4886.5 L1312.5088,4874.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="47" x="1334.3838" y="4885.1543">Session</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="950.1338" x2="1733.1338" y1="4897" y2="4897"/><polygon fill="none" points="960.1338,4903.9023,964.1338,4907.9023,960.1338,4911.9023,956.1338,4907.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="969.1338" y="4911.2104">socket : boost::asio::ip::tcp::socket</text><polygon fill="none" points="960.1338,4916.707,964.1338,4920.707,960.1338,4924.707,956.1338,4920.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="969.1338" y="4924.0151">bodyBuffer : std::vector&lt; char&gt;</text><polygon fill="none" points="960.1338,4929.5117,964.1338,4933.5117,960.1338,4937.5117,956.1338,4933.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="969.1338" y="4936.8198">headerBuffer : std::vector&lt; char&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="950.1338" x2="1733.1338" y1="4943.4141" y2="4943.4141"/><ellipse cx="960.1338" cy="4955.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="969.1338" y="4957.6245">Session(boost::asio::io_service&amp; io_service)</text><ellipse cx="960.1338" cy="4968.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="969.1338" y="4970.4292">~Session()</text><ellipse cx="960.1338" cy="4980.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="969.1338" y="4983.2339">getSocket() : boost::asio::ip::tcp::socket&amp;</text><polygon fill="#FFFF44" points="960.1338,4988.7305,964.1338,4992.7305,960.1338,4996.7305,956.1338,4992.7305" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="644" x="969.1338" y="4996.0386">handleBodyRead(Message&amp; aMessage, const boost::system::error_code&amp; error, size_t bytes_transferred) : void</text><polygon fill="#FFFF44" points="960.1338,5001.5352,964.1338,5005.5352,960.1338,5009.5352,956.1338,5005.5352" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="969.1338" y="5008.8433">handleBodyWritten(Message&amp; aMessage, const boost::system::error_code&amp; error) : void</text><polygon fill="#FFFF44" points="960.1338,5014.3398,964.1338,5018.3398,960.1338,5022.3398,956.1338,5018.3398" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="749" x="969.1338" y="5021.6479">handleHeaderRead(Message&amp; aMessage, const boost::system::error_code&amp; error, size_t UNUSEDPARAM(bytes_transferred)) : void</text><polygon fill="#FFFF44" points="960.1338,5027.1445,964.1338,5031.1445,960.1338,5035.1445,956.1338,5031.1445" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="969.1338" y="5034.4526">handleHeaderWritten(Message&amp; aMessage, const boost::system::error_code&amp; error) : void</text><ellipse cx="960.1338" cy="5044.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="969.1338" y="5047.2573">handleMessageRead(Message&amp; aMessage) : void</text><polygon fill="#FFFF44" points="960.1338,5052.7539,964.1338,5056.7539,960.1338,5060.7539,956.1338,5056.7539" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="759" x="969.1338" y="5060.062">handleMessageRead(Message&amp; aMessage, const boost::system::error_code&amp; error, size_t UNUSEDPARAM(bytes_transferred)) : void</text><ellipse cx="960.1338" cy="5070.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="290" x="969.1338" y="5072.8667">handleMessageWritten(Message&amp; aMessage) : void</text><polygon fill="#FFFF44" points="960.1338,5078.3633,964.1338,5082.3633,960.1338,5086.3633,956.1338,5082.3633" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="969.1338" y="5085.6714">handleMessageWritten(Message&amp; aMessage, const boost::system::error_code&amp; error) : void</text><polygon fill="#FFFF44" points="960.1338,5091.168,964.1338,5095.168,960.1338,5099.168,956.1338,5095.168" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="969.1338" y="5098.4761">readMessage() : void</text><ellipse cx="960.1338" cy="5108.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="70" x="969.1338" y="5111.2808">start() : void</text><polygon fill="#FFFF44" points="960.1338,5116.7773,964.1338,5120.7773,960.1338,5124.7773,956.1338,5120.7773" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="969.1338" y="5124.0854">writeMessage(Message&amp; aMessage) : void</text><!--class CommandlineArgument--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="201.6563" id="CommandlineArgument" style="stroke: #A80036; stroke-width: 1.5;" width="688" x="2663.6338" y="4897"/><ellipse cx="2930.8838" cy="4913" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2933.8526,4918.6406 Q2933.2744,4918.9375 2932.6338,4919.0859 Q2931.9932,4919.2344 2931.2901,4919.2344 Q2928.7901,4919.2344 2927.4697,4917.5859 Q2926.1494,4915.9375 2926.1494,4912.8125 Q2926.1494,4909.6875 2927.4697,4908.0313 Q2928.7901,4906.375 2931.2901,4906.375 Q2931.9932,4906.375 2932.6416,4906.5313 Q2933.2901,4906.6875 2933.8526,4906.9844 L2933.8526,4909.7031 Q2933.2276,4909.125 2932.6338,4908.8516 Q2932.0401,4908.5781 2931.4151,4908.5781 Q2930.0713,4908.5781 2929.3838,4909.6484 Q2928.6963,4910.7188 2928.6963,4912.8125 Q2928.6963,4914.9063 2929.3838,4915.9766 Q2930.0713,4917.0469 2931.4151,4917.0469 Q2932.0401,4917.0469 2932.6338,4916.7734 Q2933.2276,4916.5 2933.8526,4915.9219 L2933.8526,4918.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="145" x="2951.3838" y="4917.1543">CommandlineArgument</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2664.6338" x2="3350.6338" y1="4929" y2="4929"/><ellipse cx="2674.6338" cy="4940.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2683.6338" y="4943.2104">value : std::string</text><ellipse cx="2674.6338" cy="4953.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2683.6338" y="4956.0151">variable : std::string</text><ellipse cx="2674.6338" cy="4966.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2683.6338" y="4968.8198">argumentNumber : unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2664.6338" x2="3350.6338" y1="4975.4141" y2="4975.4141"/><ellipse cx="2674.6338" cy="4987.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2683.6338" y="4989.6245">CommandlineArgument()</text><ellipse cx="2674.6338" cy="5000.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="662" x="2683.6338" y="5002.4292">CommandlineArgument(unsigned long anArgumentNumber, const std::string&amp; aVariable, const std::string&amp; aValue)</text><ellipse cx="2674.6338" cy="5012.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="2683.6338" y="5015.2339">CommandlineArgument(const CommandlineArgument&amp; aCommandlineArgument)</text><ellipse cx="2674.6338" cy="5025.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2683.6338" y="5028.0386">~CommandlineArgument()</text><ellipse cx="2674.6338" cy="5038.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="2683.6338" y="5040.8433">operator=(const CommandlineArgument&amp; aCommandlineArgument) : CommandlineArgument&amp;</text><ellipse cx="2674.6338" cy="5051.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="2683.6338" y="5053.6479">operator&lt;(const CommandlineArgument&amp; aCommandlineArgument) : bool {query}</text><ellipse cx="2674.6338" cy="5064.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="2683.6338" y="5066.4526">operator==(const unsigned long anArgumentNumber) : bool {query}</text><ellipse cx="2674.6338" cy="5076.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="2683.6338" y="5079.2573">operator==(const std::string&amp; aVariable) : bool {query}</text><ellipse cx="2674.6338" cy="5089.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="2683.6338" y="5092.062">operator==(const CommandlineArgument&amp; aCommandlineArgument) : bool {query}</text><!--class LogTextCtrl--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="99.2188" id="LogTextCtrl" style="stroke: #A80036; stroke-width: 1.5;" width="802" x="1919.6338" y="5434"/><ellipse cx="2281.8838" cy="5450" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2284.8526,5455.6406 Q2284.2744,5455.9375 2283.6338,5456.0859 Q2282.9932,5456.2344 2282.2901,5456.2344 Q2279.7901,5456.2344 2278.4697,5454.5859 Q2277.1494,5452.9375 2277.1494,5449.8125 Q2277.1494,5446.6875 2278.4697,5445.0313 Q2279.7901,5443.375 2282.2901,5443.375 Q2282.9932,5443.375 2283.6416,5443.5313 Q2284.2901,5443.6875 2284.8526,5443.9844 L2284.8526,5446.7031 Q2284.2276,5446.125 2283.6338,5445.8516 Q2283.0401,5445.5781 2282.4151,5445.5781 Q2281.0713,5445.5781 2280.3838,5446.6484 Q2279.6963,5447.7188 2279.6963,5449.8125 Q2279.6963,5451.9063 2280.3838,5452.9766 Q2281.0713,5454.0469 2282.4151,5454.0469 Q2283.0401,5454.0469 2283.6338,5453.7734 Q2284.2276,5453.5 2284.8526,5452.9219 L2284.8526,5455.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="2302.3838" y="5454.1543">LogTextCtrl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1920.6338" x2="2720.6338" y1="5466" y2="5466"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1920.6338" x2="2720.6338" y1="5474" y2="5474"/><ellipse cx="1930.6338" cy="5485.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="776" x="1939.6338" y="5488.2104">LogTextCtrl(Window* aParent, WindowId aWindowId, long aStyle, const std::string&amp; anInitialText, const Point&amp; aPoint, const Size&amp; aSize)</text><ellipse cx="1930.6338" cy="5498.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1939.6338" y="5501.0151">~LogTextCtrl()</text><polygon fill="#FFFF44" points="1930.6338,5506.5117,1934.6338,5510.5117,1930.6338,5514.5117,1926.6338,5510.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="1939.6338" y="5513.8198">OnCommandEvent(CommandEvent&amp; anEvent) : void</text><ellipse cx="1930.6338" cy="5524.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1939.6338" y="5526.6245">log(const std::string&amp; aString) : void</text><!--class Logger--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="99.2188" id="Logger" style="stroke: #A80036; stroke-width: 1.5;" width="252" x="2407.6338" y="4450"/><ellipse cx="2507.8838" cy="4466" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2510.8526,4471.6406 Q2510.2744,4471.9375 2509.6338,4472.0859 Q2508.9932,4472.2344 2508.2901,4472.2344 Q2505.7901,4472.2344 2504.4697,4470.5859 Q2503.1494,4468.9375 2503.1494,4465.8125 Q2503.1494,4462.6875 2504.4697,4461.0313 Q2505.7901,4459.375 2508.2901,4459.375 Q2508.9932,4459.375 2509.6416,4459.5313 Q2510.2901,4459.6875 2510.8526,4459.9844 L2510.8526,4462.7031 Q2510.2276,4462.125 2509.6338,4461.8516 Q2509.0401,4461.5781 2508.4151,4461.5781 Q2507.0713,4461.5781 2506.3838,4462.6484 Q2505.6963,4463.7188 2505.6963,4465.8125 Q2505.6963,4467.9063 2506.3838,4468.9766 Q2507.0713,4470.0469 2508.4151,4470.0469 Q2509.0401,4470.0469 2509.6338,4469.7734 Q2510.2276,4469.5 2510.8526,4468.9219 L2510.8526,4471.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="2528.3838" y="4470.1543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2408.6338" x2="2658.6338" y1="4482" y2="4482"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2415.6338" y="4490.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="2427.6338" y="4496.2104">disable : static bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2427.6338" x2="2539.6338" y1="4498.2104" y2="4498.2104"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2408.6338" x2="2658.6338" y1="4502.8047" y2="4502.8047"/><ellipse cx="2418.6338" cy="4514.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="99" x="2427.6338" y="4517.0151">isEnabled() : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2427.6338" x2="2526.6338" y1="4519.0151" y2="4519.0151"/><ellipse cx="2418.6338" cy="4527.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="226" x="2427.6338" y="4529.8198">log(const std::string&amp; aMessage) : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2427.6338" x2="2653.6338" y1="4531.8198" y2="4531.8198"/><ellipse cx="2418.6338" cy="4540.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="180" x="2427.6338" y="4542.6245">setDisable(bool aDisable) : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2427.6338" x2="2607.6338" y1="4544.6245" y2="4544.6245"/><!--class MainApplication--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="150.4375" id="MainApplication" style="stroke: #A80036; stroke-width: 1.5;" width="427" x="2859.1338" y="4424.5"/><ellipse cx="3019.3838" cy="4440.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3022.3526,4446.1406 Q3021.7744,4446.4375 3021.1338,4446.5859 Q3020.4932,4446.7344 3019.7901,4446.7344 Q3017.2901,4446.7344 3015.9697,4445.0859 Q3014.6494,4443.4375 3014.6494,4440.3125 Q3014.6494,4437.1875 3015.9697,4435.5313 Q3017.2901,4433.875 3019.7901,4433.875 Q3020.4932,4433.875 3021.1416,4434.0313 Q3021.7901,4434.1875 3022.3526,4434.4844 L3022.3526,4437.2031 Q3021.7276,4436.625 3021.1338,4436.3516 Q3020.5401,4436.0781 3019.9151,4436.0781 Q3018.5713,4436.0781 3017.8838,4437.1484 Q3017.1963,4438.2188 3017.1963,4440.3125 Q3017.1963,4442.4063 3017.8838,4443.4766 Q3018.5713,4444.5469 3019.9151,4444.5469 Q3020.5401,4444.5469 3021.1338,4444.2734 Q3021.7276,4444 3022.3526,4443.4219 L3022.3526,4446.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="3039.8838" y="4444.6543">MainApplication</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2860.1338" x2="3285.1338" y1="4456.5" y2="4456.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2867.1338" y="4465.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="401" x="2879.1338" y="4470.7104">commandlineArguments : static std::vector&lt; CommandlineArgument&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2879.1338" x2="3280.1338" y1="4472.7104" y2="4472.7104"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2867.1338" y="4478.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="291" x="2879.1338" y="4483.5151">commandlineFiles : static std::vector&lt; std::string&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2879.1338" x2="3170.1338" y1="4485.5151" y2="4485.5151"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2860.1338" x2="3285.1338" y1="4490.1094" y2="4490.1094"/><ellipse cx="2870.1338" cy="4502.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="361" x="2879.1338" y="4504.3198">getArg(const std::string&amp; aVariable) : CommandlineArgument&amp;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2879.1338" x2="3240.1338" y1="4506.3198" y2="4506.3198"/><ellipse cx="2870.1338" cy="4514.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="398" x="2879.1338" y="4517.1245">getArg(unsigned long anArgumentNumber) : CommandlineArgument&amp;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2879.1338" x2="3277.1338" y1="4519.1245" y2="4519.1245"/><ellipse cx="2870.1338" cy="4527.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2879.1338" y="4529.9292">OnInit() : bool</text><ellipse cx="2870.1338" cy="4540.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="266" x="2879.1338" y="4542.7339">isArgGiven(const std::string&amp; aVariable) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2879.1338" x2="3145.1338" y1="4544.7339" y2="4544.7339"/><ellipse cx="2870.1338" cy="4553.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="290" x="2879.1338" y="4555.5386">getCommandlineFiles() : std::vector&lt;std::string&gt;&amp;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2879.1338" x2="3169.1338" y1="4557.5386" y2="4557.5386"/><ellipse cx="2870.1338" cy="4566.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="312" x="2879.1338" y="4568.3433">setCommandlineArguments(int argc, char* argv) : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2879.1338" x2="3191.1338" y1="4570.3433" y2="4570.3433"/><!--class MainFrameWindow--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="432.1406" id="MainFrameWindow" style="stroke: #A80036; stroke-width: 1.5;" width="387" x="2241.1338" y="4782"/><ellipse cx="2372.8838" cy="4798" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2375.8526,4803.6406 Q2375.2744,4803.9375 2374.6338,4804.0859 Q2373.9932,4804.2344 2373.2901,4804.2344 Q2370.7901,4804.2344 2369.4697,4802.5859 Q2368.1494,4800.9375 2368.1494,4797.8125 Q2368.1494,4794.6875 2369.4697,4793.0313 Q2370.7901,4791.375 2373.2901,4791.375 Q2373.9932,4791.375 2374.6416,4791.5313 Q2375.2901,4791.6875 2375.8526,4791.9844 L2375.8526,4794.7031 Q2375.2276,4794.125 2374.6338,4793.8516 Q2374.0401,4793.5781 2373.4151,4793.5781 Q2372.0713,4793.5781 2371.3838,4794.6484 Q2370.6963,4795.7188 2370.6963,4797.8125 Q2370.6963,4799.9063 2371.3838,4800.9766 Q2372.0713,4802.0469 2373.4151,4802.0469 Q2374.0401,4802.0469 2374.6338,4801.7734 Q2375.2276,4801.5 2375.8526,4800.9219 L2375.8526,4803.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="2393.3838" y="4802.1543">MainFrameWindow</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2242.1338" x2="2627.1338" y1="4814" y2="4814"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4822.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2261.1338" y="4828.2104">debugTraceFunction : Base::DebugTraceFunction*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4835.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2261.1338" y="4841.0151">logTextCtrl : LogTextCtrl*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4848.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2261.1338" y="4853.8198">menuBar : MenuBar*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4861.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2261.1338" y="4866.6245">buttonPanel : Panel*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4874.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2261.1338" y="4879.4292">clientPanel : Panel*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4886.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2261.1338" y="4892.2339">lhsPanel : Panel*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4899.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2261.1338" y="4905.0386">rhsPanel : Panel*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4912.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2261.1338" y="4917.8433">splitterWindow : SplitterWindow*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="4925.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="2261.1338" y="4930.6479">robotWorldCanvas : View::RobotWorldCanvas*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2242.1338" x2="2627.1338" y1="4937.2422" y2="4937.2422"/><ellipse cx="2252.1338" cy="4949.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2261.1338" y="4951.4526">MainFrameWindow(const std::string&amp; aTitle)</text><ellipse cx="2252.1338" cy="4961.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2261.1338" y="4964.2573">~MainFrameWindow()</text><ellipse cx="2252.1338" cy="4974.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="2261.1338" y="4977.062">getTraceFunction() : Base::DebugTraceFunction&amp; {query}</text><polygon fill="#FFFF44" points="2252.1338,4982.5586,2256.1338,4986.5586,2252.1338,4990.5586,2248.1338,4986.5586" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2261.1338" y="4989.8667">initialiseMenuBar() : MenuBar*</text><polygon fill="#FFFF44" points="2252.1338,4995.3633,2256.1338,4999.3633,2252.1338,5003.3633,2248.1338,4999.3633" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2261.1338" y="5002.6714">initialiseButtonPanel() : Panel*</text><polygon fill="#FFFF44" points="2252.1338,5008.168,2256.1338,5012.168,2252.1338,5016.168,2248.1338,5012.168" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2261.1338" y="5015.4761">initialiseClientPanel() : Panel*</text><polygon fill="#FFFF44" points="2252.1338,5020.9727,2256.1338,5024.9727,2252.1338,5028.9727,2248.1338,5024.9727" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2261.1338" y="5028.2808">initialiseLhsPanel() : Panel*</text><polygon fill="#FFFF44" points="2252.1338,5033.7773,2256.1338,5037.7773,2252.1338,5041.7773,2248.1338,5037.7773" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2261.1338" y="5041.0854">initialiseRhsPanel() : Panel*</text><polygon fill="#FFFF44" points="2252.1338,5046.582,2256.1338,5050.582,2252.1338,5054.582,2248.1338,5050.582" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="2261.1338" y="5053.8901">initialiseSplitterWindow() : SplitterWindow*</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5061.3867"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="2261.1338" y="5066.6948">OnAbout(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5074.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2261.1338" y="5079.4995">OnPopulate(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5086.9961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="2261.1338" y="5092.3042">OnQuit(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5099.8008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="2261.1338" y="5105.1089">OnSendMessage(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5112.6055"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="2261.1338" y="5117.9136">OnStartListening(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5125.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="2261.1338" y="5130.7183">OnStartRobot(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5138.2148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="2261.1338" y="5143.5229">OnStdOutDebugTraceFunction(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5151.0195"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2261.1338" y="5156.3276">OnStopListening(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5163.8242"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="2261.1338" y="5169.1323">OnStopRobot(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5176.6289"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="2261.1338" y="5181.937">OnUnpopulate(CommandEvent&amp; anEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.1338" y="5189.4336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="2261.1338" y="5194.7417">OnWidgetDebugTraceFunction(CommandEvent&amp; anEvent) : void</text><polygon fill="#FFFF44" points="2252.1338,5200.2383,2256.1338,5204.2383,2252.1338,5208.2383,2248.1338,5204.2383" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2261.1338" y="5207.5464">initialise() : void</text><!--class WidgetDebugTraceFunction--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="86.4141" id="WidgetDebugTraceFunction" style="stroke: #A80036; stroke-width: 1.5;" width="400" x="1805.6338" y="4955"/><ellipse cx="1914.8838" cy="4971" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1917.8526,4976.6406 Q1917.2744,4976.9375 1916.6338,4977.0859 Q1915.9932,4977.2344 1915.2901,4977.2344 Q1912.7901,4977.2344 1911.4697,4975.5859 Q1910.1494,4973.9375 1910.1494,4970.8125 Q1910.1494,4967.6875 1911.4697,4966.0313 Q1912.7901,4964.375 1915.2901,4964.375 Q1915.9932,4964.375 1916.6416,4964.5313 Q1917.2901,4964.6875 1917.8526,4964.9844 L1917.8526,4967.7031 Q1917.2276,4967.125 1916.6338,4966.8516 Q1916.0401,4966.5781 1915.4151,4966.5781 Q1914.0713,4966.5781 1913.3838,4967.6484 Q1912.6963,4968.7188 1912.6963,4970.8125 Q1912.6963,4972.9063 1913.3838,4973.9766 Q1914.0713,4975.0469 1915.4151,4975.0469 Q1916.0401,4975.0469 1916.6338,4974.7734 Q1917.2276,4974.5 1917.8526,4973.9219 L1917.8526,4976.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="173" x="1935.3838" y="4975.1543">WidgetDebugTraceFunction</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1806.6338" x2="2204.6338" y1="4987" y2="4987"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1813.6338" y="4995.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="1825.6338" y="5001.2104">outputControl : Application::LogTextCtrl*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1806.6338" x2="2204.6338" y1="5007.8047" y2="5007.8047"/><ellipse cx="1816.6338" cy="5019.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="1825.6338" y="5022.0151">WidgetDebugTraceFunction(Application::LogTextCtrl* aLogTextCtrl)</text><ellipse cx="1816.6338" cy="5032.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1825.6338" y="5034.8198">trace(const std::string&amp; aText) : void</text><!--class DebugTraceFunction--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="73.6094" id="DebugTraceFunction" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="3376.1338" y="5446.5"/><ellipse cx="3424.3838" cy="5462.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3424.4932,5457.8438 L3423.3369,5462.9219 L3425.6651,5462.9219 L3424.4932,5457.8438 Z M3423.0088,5455.6094 L3425.9932,5455.6094 L3429.3526,5468 L3426.8994,5468 L3426.1338,5464.9375 L3422.8526,5464.9375 L3422.1026,5468 L3419.6651,5468 L3423.0088,5455.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="3444.8838" y="5466.6543">DebugTraceFunction</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3377.1338" x2="3610.1338" y1="5478.5" y2="5478.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3377.1338" x2="3610.1338" y1="5486.5" y2="5486.5"/><ellipse cx="3387.1338" cy="5498.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3396.1338" y="5500.7104">~DebugTraceFunction()</text><ellipse cx="3387.1338" cy="5511.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="3396.1338" y="5513.5151">trace(const std::string&amp; aText) : void</text><!--class NotificationFunctionTypeTraits--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="NotificationFunctionTypeTraits" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="4872.1338" y="5453"/><ellipse cx="4887.1338" cy="5469" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4890.1026,5474.6406 Q4889.5244,5474.9375 4888.8838,5475.0859 Q4888.2432,5475.2344 4887.5401,5475.2344 Q4885.0401,5475.2344 4883.7197,5473.5859 Q4882.3994,5471.9375 4882.3994,5468.8125 Q4882.3994,5465.6875 4883.7197,5464.0313 Q4885.0401,5462.375 4887.5401,5462.375 Q4888.2432,5462.375 4888.8916,5462.5313 Q4889.5401,5462.6875 4890.1026,5462.9844 L4890.1026,5465.7031 Q4889.4776,5465.125 4888.8838,5464.8516 Q4888.2901,5464.5781 4887.6651,5464.5781 Q4886.3213,5464.5781 4885.6338,5465.6484 Q4884.9463,5466.7188 4884.9463,5468.8125 Q4884.9463,5470.9063 4885.6338,5471.9766 Q4886.3213,5473.0469 4887.6651,5473.0469 Q4888.2901,5473.0469 4888.8838,5472.7734 Q4889.4776,5472.5 4890.1026,5471.9219 L4890.1026,5474.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="189" x="4901.1338" y="5473.1543">NotificationFunctionTypeTraits</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="278" x="5098.1338" y="5450"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="5099.1338" y="5462.1387">template&lt; typename NotificationFunction &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4873.1338" x2="5372.1338" y1="5485" y2="5485"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4873.1338" x2="5372.1338" y1="5493" y2="5493"/><ellipse cx="4883.1338" cy="5504.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="4892.1338" y="5507.2104">call(NotificationFunction&amp; aNotificationFunction, NotifyEvent &amp;) : void</text><!--class NotificationFunctionTypeTraitsTracing--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="48" id="NotificationFunctionTypeTraitsTracing" style="stroke: #A80036; stroke-width: 1.5;" width="267" x="5408.1338" y="5459.5"/><ellipse cx="5423.1338" cy="5475.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5426.1026,5481.1406 Q5425.5244,5481.4375 5424.8838,5481.5859 Q5424.2432,5481.7344 5423.5401,5481.7344 Q5421.0401,5481.7344 5419.7197,5480.0859 Q5418.3994,5478.4375 5418.3994,5475.3125 Q5418.3994,5472.1875 5419.7197,5470.5313 Q5421.0401,5468.875 5423.5401,5468.875 Q5424.2432,5468.875 5424.8916,5469.0313 Q5425.5401,5469.1875 5426.1026,5469.4844 L5426.1026,5472.2031 Q5425.4776,5471.625 5424.8838,5471.3516 Q5424.2901,5471.0781 5423.6651,5471.0781 Q5422.3213,5471.0781 5421.6338,5472.1484 Q5420.9463,5473.2188 5420.9463,5475.3125 Q5420.9463,5477.4063 5421.6338,5478.4766 Q5422.3213,5479.5469 5423.6651,5479.5469 Q5424.2901,5479.5469 5424.8838,5479.2734 Q5425.4776,5479 5426.1026,5478.4219 L5426.1026,5481.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="235" x="5437.1338" y="5479.6543">NotificationFunctionTypeTraitsTracing</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5409.1338" x2="5674.1338" y1="5491.5" y2="5491.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5409.1338" x2="5674.1338" y1="5499.5" y2="5499.5"/><!--class NotificationHandler--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="99.2188" id="NotificationHandler" style="stroke: #A80036; stroke-width: 1.5;" width="432" x="4906.6338" y="5772.5"/><ellipse cx="4921.6338" cy="5788.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4924.6026,5794.1406 Q4924.0244,5794.4375 4923.3838,5794.5859 Q4922.7432,5794.7344 4922.0401,5794.7344 Q4919.5401,5794.7344 4918.2197,5793.0859 Q4916.8994,5791.4375 4916.8994,5788.3125 Q4916.8994,5785.1875 4918.2197,5783.5313 Q4919.5401,5781.875 4922.0401,5781.875 Q4922.7432,5781.875 4923.3916,5782.0313 Q4924.0401,5782.1875 4924.6026,5782.4844 L4924.6026,5785.2031 Q4923.9776,5784.625 4923.3838,5784.3516 Q4922.7901,5784.0781 4922.1651,5784.0781 Q4920.8213,5784.0781 4920.1338,5785.1484 Q4919.4463,5786.2188 4919.4463,5788.3125 Q4919.4463,5790.4063 4920.1338,5791.4766 Q4920.8213,5792.5469 4922.1651,5792.5469 Q4922.7901,5792.5469 4923.3838,5792.2734 Q4923.9776,5792 4924.6026,5791.4219 L4924.6026,5794.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="4935.6338" y="5792.6543">NotificationHandler</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="278" x="5063.6338" y="5769.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="5064.6338" y="5781.6387">template&lt; typename NotificationFunction &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4907.6338" x2="5337.6338" y1="5804.5" y2="5804.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4914.6338" y="5813.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4926.6338" y="5818.7104">function : NotificationFunction</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4907.6338" x2="5337.6338" y1="5825.3047" y2="5825.3047"/><ellipse cx="4917.6338" cy="5837.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="4926.6338" y="5839.5151">NotificationHandler(const NotificationFunction&amp; aNotificationFunction)</text><ellipse cx="4917.6338" cy="5850.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4926.6338" y="5852.3198">~NotificationHandler()</text><ellipse cx="4917.6338" cy="5862.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="4926.6338" y="5865.1245">OnNotificationEvent(NotifyEvent&amp; aNotifyEvent) : void</text><!--class Notifier--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="214.4609" id="Notifier" style="stroke: #A80036; stroke-width: 1.5;" width="299" x="4030.1338" y="5376.5"/><ellipse cx="4152.8838" cy="5392.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4155.8526,5398.1406 Q4155.2744,5398.4375 4154.6338,5398.5859 Q4153.9932,5398.7344 4153.2901,5398.7344 Q4150.7901,5398.7344 4149.4697,5397.0859 Q4148.1494,5395.4375 4148.1494,5392.3125 Q4148.1494,5389.1875 4149.4697,5387.5313 Q4150.7901,5385.875 4153.2901,5385.875 Q4153.9932,5385.875 4154.6416,5386.0313 Q4155.2901,5386.1875 4155.8526,5386.4844 L4155.8526,5389.2031 Q4155.2276,5388.625 4154.6338,5388.3516 Q4154.0401,5388.0781 4153.4151,5388.0781 Q4152.0713,5388.0781 4151.3838,5389.1484 Q4150.6963,5390.2188 4150.6963,5392.3125 Q4150.6963,5394.4063 4151.3838,5395.4766 Q4152.0713,5396.5469 4153.4151,5396.5469 Q4154.0401,5396.5469 4154.6338,5396.2734 Q4155.2276,5396 4155.8526,5395.4219 L4155.8526,5398.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="45" x="4173.3838" y="5396.6543">Notifier</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4031.1338" x2="4328.1338" y1="5408.5" y2="5408.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4038.1338" y="5417.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4050.1338" y="5422.7104">notify : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4038.1338" y="5430.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="4050.1338" y="5435.5151">observers : std::vector&lt; Observer*&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4031.1338" x2="4328.1338" y1="5442.1094" y2="5442.1094"/><ellipse cx="4041.1338" cy="5454.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4050.1338" y="5456.3198">Notifier(bool enable)</text><ellipse cx="4041.1338" cy="5466.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="4050.1338" y="5469.1245">~Notifier()</text><ellipse cx="4041.1338" cy="5479.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="4050.1338" y="5481.9292">isEnabledForNotification() : bool {query}</text><ellipse cx="4041.1338" cy="5492.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4050.1338" y="5494.7339">asDebugString() : std::string {query}</text><ellipse cx="4041.1338" cy="5505.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4050.1338" y="5507.5386">asString() : std::string {query}</text><ellipse cx="4041.1338" cy="5518.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="4050.1338" y="5520.3433">addObserver(Observer&amp; anObserver) : void</text><ellipse cx="4041.1338" cy="5530.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4050.1338" y="5533.1479">disableNotification() : void</text><ellipse cx="4041.1338" cy="5543.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="4050.1338" y="5545.9526">enableNotification(bool enable) : void</text><ellipse cx="4041.1338" cy="5556.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4050.1338" y="5558.7573">notifyObservers() : void</text><ellipse cx="4041.1338" cy="5569.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4050.1338" y="5571.562">removeAllObservers() : void</text><ellipse cx="4041.1338" cy="5582.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4050.1338" y="5584.3667">removeObserver(Observer&amp; anObserver) : void</text><!--class ObjectId--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="419.3359" id="ObjectId" style="stroke: #A80036; stroke-width: 1.5;" width="473" x="4364.1338" y="5274"/><ellipse cx="4570.8838" cy="5290" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4573.8526,5295.6406 Q4573.2744,5295.9375 4572.6338,5296.0859 Q4571.9932,5296.2344 4571.2901,5296.2344 Q4568.7901,5296.2344 4567.4697,5294.5859 Q4566.1494,5292.9375 4566.1494,5289.8125 Q4566.1494,5286.6875 4567.4697,5285.0313 Q4568.7901,5283.375 4571.2901,5283.375 Q4571.9932,5283.375 4572.6416,5283.5313 Q4573.2901,5283.6875 4573.8526,5283.9844 L4573.8526,5286.7031 Q4573.2276,5286.125 4572.6338,5285.8516 Q4572.0401,5285.5781 4571.4151,5285.5781 Q4570.0713,5285.5781 4569.3838,5286.6484 Q4568.6963,5287.7188 4568.6963,5289.8125 Q4568.6963,5291.9063 4569.3838,5292.9766 Q4570.0713,5294.0469 4571.4151,5294.0469 Q4572.0401,5294.0469 4572.6338,5293.7734 Q4573.2276,5293.5 4573.8526,5292.9219 L4573.8526,5295.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="4591.3838" y="5294.1543">ObjectId</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4365.1338" x2="4836.1338" y1="5306" y2="5306"/><ellipse cx="4375.1338" cy="5317.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="217" x="4384.1338" y="5320.2104">objectIdNamespace : static std::string</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4384.1338" x2="4601.1338" y1="5322.2104" y2="5322.2104"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4365.1338" x2="4836.1338" y1="5326.8047" y2="5326.8047"/><ellipse cx="4375.1338" cy="5338.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="4384.1338" y="5341.0151">ObjectId()</text><ellipse cx="4375.1338" cy="5351.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4384.1338" y="5353.8198">ObjectId(unsigned long max)</text><ellipse cx="4375.1338" cy="5364.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="4384.1338" y="5366.6245">ObjectId(unsigned long, unsigned long len, unsigned char* aDataPointer, bool)</text><ellipse cx="4375.1338" cy="5377.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4384.1338" y="5379.4292">ObjectId(const ObjectId&amp; anObjectId)</text><ellipse cx="4375.1338" cy="5389.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="4384.1338" y="5392.2339">ObjectId(InputIterator first, InputIterator last)</text><ellipse cx="4375.1338" cy="5402.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4384.1338" y="5405.0386">ObjectId(const std::string&amp; anObjectIdString)</text><ellipse cx="4375.1338" cy="5415.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4384.1338" y="5417.8433">~ObjectId()</text><ellipse cx="4375.1338" cy="5428.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="135" x="4384.1338" y="5430.6479">newObjectId() : ObjectId</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4384.1338" x2="4519.1338" y1="5432.6479" y2="5432.6479"/><ellipse cx="4375.1338" cy="5441.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="4384.1338" y="5443.4526">operator=(const ObjectId&amp; anObjectId) : ObjectId&amp;</text><ellipse cx="4375.1338" cy="5453.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4384.1338" y="5456.2573">isNull() : bool {query}</text><ellipse cx="4375.1338" cy="5466.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4384.1338" y="5469.062">isValid() : bool {query}</text><ellipse cx="4375.1338" cy="5479.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="4384.1338" y="5481.8667">operator&lt;(const ObjectId&amp; anObjectId) : bool {query}</text><ellipse cx="4375.1338" cy="5492.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="4384.1338" y="5494.6714">operator==(const ObjectId&amp; anObjectId) : bool {query}</text><ellipse cx="4375.1338" cy="5505.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4384.1338" y="5507.4761">release() : bool {query}</text><ellipse cx="4375.1338" cy="5517.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="4384.1338" y="5520.2808">get_buffer() : const_pointer {query}</text><ellipse cx="4375.1338" cy="5530.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="4384.1338" y="5533.0854">operator[](unsigned long index) : const_reference {query}</text><ellipse cx="4375.1338" cy="5543.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="230" x="4384.1338" y="5545.8901">allocbuf(unsigned long nelems) : pointer</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4384.1338" x2="4614.1338" y1="5547.8901" y2="5547.8901"/><ellipse cx="4375.1338" cy="5556.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4384.1338" y="5558.6948">get_buffer(bool orphan) : pointer</text><ellipse cx="4375.1338" cy="5569.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="4384.1338" y="5571.4995">operator[](unsigned long index) : reference</text><ellipse cx="4375.1338" cy="5581.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4384.1338" y="5584.3042">asDebugString() : std::string {query}</text><ellipse cx="4375.1338" cy="5594.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4384.1338" y="5597.1089">asString() : std::string {query}</text><ellipse cx="4375.1338" cy="5607.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4384.1338" y="5609.9136">toString() : std::string {query}</text><ellipse cx="4375.1338" cy="5620.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4384.1338" y="5622.7183">length() : unsigned long {query}</text><ellipse cx="4375.1338" cy="5633.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="4384.1338" y="5635.5229">maximum() : unsigned long {query}</text><ellipse cx="4375.1338" cy="5646.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="142" x="4384.1338" y="5648.3276">freebuf(pointer aT) : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4384.1338" x2="4526.1338" y1="5650.3276" y2="5650.3276"/><ellipse cx="4375.1338" cy="5658.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4384.1338" y="5661.1323">fromString(const std::string&amp; anObjectIdString) : void</text><ellipse cx="4375.1338" cy="5671.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4384.1338" y="5673.937">length(unsigned long len) : void</text><ellipse cx="4375.1338" cy="5684.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="4384.1338" y="5686.7417">replace(unsigned long, unsigned long len, pointer newData, bool) : void</text><!--class Observer--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="137.6328" id="Observer" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="4005.1338" y="5753"/><ellipse cx="4148.3838" cy="5769" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4148.4932,5764.3438 L4147.3369,5769.4219 L4149.6651,5769.4219 L4148.4932,5764.3438 Z M4147.0088,5762.1094 L4149.9932,5762.1094 L4153.3526,5774.5 L4150.8994,5774.5 L4150.1338,5771.4375 L4146.8526,5771.4375 L4146.1026,5774.5 L4143.6651,5774.5 L4147.0088,5762.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="54" x="4168.8838" y="5773.1543">Observer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4006.1338" x2="4353.1338" y1="5785" y2="5785"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4006.1338" x2="4353.1338" y1="5793" y2="5793"/><ellipse cx="4016.1338" cy="5804.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="4025.1338" y="5807.2104">Observer()</text><ellipse cx="4016.1338" cy="5817.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4025.1338" y="5820.0151">~Observer()</text><ellipse cx="4016.1338" cy="5830.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="4025.1338" y="5832.8198">operator&lt;(const Observer&amp; aObserver) : bool {query}</text><ellipse cx="4016.1338" cy="5843.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="4025.1338" y="5845.6245">operator==(const Observer&amp; aObserver) : bool {query}</text><ellipse cx="4016.1338" cy="5856.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="145" x="4025.1338" y="5858.4292">handleNotification() : void</text><ellipse cx="4016.1338" cy="5868.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4025.1338" y="5871.2339">handleNotificationsFor(Notifier&amp; aNotifier) : void</text><ellipse cx="4016.1338" cy="5881.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="4025.1338" y="5884.0386">stopHandlingNotificationsFor(Notifier&amp; aNotifier) : void</text><!--class Queue--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="124.8281" id="Queue" style="stroke: #A80036; stroke-width: 1.5;" width="348" x="3646.6338" y="5421"/><ellipse cx="3661.6338" cy="5437" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3664.6026,5442.6406 Q3664.0244,5442.9375 3663.3838,5443.0859 Q3662.7432,5443.2344 3662.0401,5443.2344 Q3659.5401,5443.2344 3658.2197,5441.5859 Q3656.8994,5439.9375 3656.8994,5436.8125 Q3656.8994,5433.6875 3658.2197,5432.0313 Q3659.5401,5430.375 3662.0401,5430.375 Q3662.7432,5430.375 3663.3916,5430.5313 Q3664.0401,5430.6875 3664.6026,5430.9844 L3664.6026,5433.7031 Q3663.9776,5433.125 3663.3838,5432.8516 Q3662.7901,5432.5781 3662.1651,5432.5781 Q3660.8213,5432.5781 3660.1338,5433.6484 Q3659.4463,5434.7188 3659.4463,5436.8125 Q3659.4463,5438.9063 3660.1338,5439.9766 Q3660.8213,5441.0469 3662.1651,5441.0469 Q3662.7901,5441.0469 3663.3838,5440.7734 Q3663.9776,5440.5 3664.6026,5439.9219 L3664.6026,5442.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="3675.6338" y="5441.1543">Queue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="273" x="3724.6338" y="5418"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="271" x="3725.6338" y="5430.1387">template&lt; typename QueueContentType &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3647.6338" x2="3993.6338" y1="5453" y2="5453"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3654.6338" y="5461.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3666.6338" y="5467.2104">queueFull : std::condition_variable</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3654.6338" y="5474.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3666.6338" y="5480.0151">queueBusy : std::mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3654.6338" y="5487.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="3666.6338" y="5492.8198">queue : std::queue&lt; QueueContentType&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3647.6338" x2="3993.6338" y1="5499.4141" y2="5499.4141"/><ellipse cx="3657.6338" cy="5511.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3666.6338" y="5513.6245">dequeue() : QueueContentType</text><ellipse cx="3657.6338" cy="5524.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3666.6338" y="5526.4292">size() : size_t {query}</text><ellipse cx="3657.6338" cy="5536.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="3666.6338" y="5539.2339">enqueue(const QueueContentType&amp; anElement) : void</text><!--class StdOutDebugTraceFunction--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="60.8047" id="StdOutDebugTraceFunction" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="3376.1338" y="5791.5"/><ellipse cx="3405.5338" cy="5807.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3408.5026,5813.1406 Q3407.9244,5813.4375 3407.2838,5813.5859 Q3406.6432,5813.7344 3405.9401,5813.7344 Q3403.4401,5813.7344 3402.1197,5812.0859 Q3400.7994,5810.4375 3400.7994,5807.3125 Q3400.7994,5804.1875 3402.1197,5802.5313 Q3403.4401,5800.875 3405.9401,5800.875 Q3406.6432,5800.875 3407.2916,5801.0313 Q3407.9401,5801.1875 3408.5026,5801.4844 L3408.5026,5804.2031 Q3407.8776,5803.625 3407.2838,5803.3516 Q3406.6901,5803.0781 3406.0651,5803.0781 Q3404.7213,5803.0781 3404.0338,5804.1484 Q3403.3463,5805.2188 3403.3463,5807.3125 Q3403.3463,5809.4063 3404.0338,5810.4766 Q3404.7213,5811.5469 3406.0651,5811.5469 Q3406.6901,5811.5469 3407.2838,5811.2734 Q3407.8776,5811 3408.5026,5810.4219 L3408.5026,5813.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="173" x="3422.7338" y="5811.6543">StdOutDebugTraceFunction</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3377.1338" x2="3612.1338" y1="5823.5" y2="5823.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3377.1338" x2="3612.1338" y1="5831.5" y2="5831.5"/><ellipse cx="3387.1338" cy="5843.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="3396.1338" y="5845.7104">trace(const std::string&amp; aText) : void</text><!--class GoalShape--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="176.0469" id="GoalShape" style="stroke: #A80036; stroke-width: 1.5;" width="264" x="11882.6338" y="4411.5"/><ellipse cx="11976.3838" cy="4427.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11979.3526,4433.1406 Q11978.7744,4433.4375 11978.1338,4433.5859 Q11977.4932,4433.7344 11976.7901,4433.7344 Q11974.2901,4433.7344 11972.9697,4432.0859 Q11971.6494,4430.4375 11971.6494,4427.3125 Q11971.6494,4424.1875 11972.9697,4422.5313 Q11974.2901,4420.875 11976.7901,4420.875 Q11977.4932,4420.875 11978.1416,4421.0313 Q11978.7901,4421.1875 11979.3526,4421.4844 L11979.3526,4424.2031 Q11978.7276,4423.625 11978.1338,4423.3516 Q11977.5401,4423.0781 11976.9151,4423.0781 Q11975.5713,4423.0781 11974.8838,4424.1484 Q11974.1963,4425.2188 11974.1963,4427.3125 Q11974.1963,4429.4063 11974.8838,4430.4766 Q11975.5713,4431.5469 11976.9151,4431.5469 Q11977.5401,4431.5469 11978.1338,4431.2734 Q11978.7276,4431 11979.3526,4430.4219 L11979.3526,4433.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="11996.8838" y="4431.6543">GoalShape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11883.6338" x2="12145.6338" y1="4443.5" y2="4443.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11883.6338" x2="12145.6338" y1="4451.5" y2="4451.5"/><ellipse cx="11893.6338" cy="4463.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="11902.6338" y="4465.7104">GoalShape(model::GoalPtr aGoal)</text><ellipse cx="11893.6338" cy="4476.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="11902.6338" y="4478.5151">~GoalShape()</text><ellipse cx="11893.6338" cy="4489.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="11902.6338" y="4491.3198">getGoal() : model::GoalPtr {query}</text><ellipse cx="11893.6338" cy="4501.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11902.6338" y="4504.1245">asDebugString() : std::string {query}</text><ellipse cx="11893.6338" cy="4514.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11902.6338" y="4516.9292">asString() : std::string {query}</text><ellipse cx="11893.6338" cy="4527.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="11902.6338" y="4529.7339">getActivationColour() : std::string {query}</text><ellipse cx="11893.6338" cy="4540.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="11902.6338" y="4542.5386">getNormalColour() : std::string {query}</text><ellipse cx="11893.6338" cy="4553.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="11902.6338" y="4555.3433">getSelectionColour() : std::string {query}</text><ellipse cx="11893.6338" cy="4565.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="11902.6338" y="4568.1479">handleNotification() : void</text><ellipse cx="11893.6338" cy="4578.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="11902.6338" y="4580.9526">setGoal(model::GoalPtr aGoal) : void</text><!--class LineShape--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="521.7734" id="LineShape" style="stroke: #A80036; stroke-width: 1.5;" width="981" x="11298.1338" y="2116"/><ellipse cx="11751.8838" cy="2132" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11754.8526,2137.6406 Q11754.2744,2137.9375 11753.6338,2138.0859 Q11752.9932,2138.2344 11752.2901,2138.2344 Q11749.7901,2138.2344 11748.4697,2136.5859 Q11747.1494,2134.9375 11747.1494,2131.8125 Q11747.1494,2128.6875 11748.4697,2127.0313 Q11749.7901,2125.375 11752.2901,2125.375 Q11752.9932,2125.375 11753.6416,2125.5313 Q11754.2901,2125.6875 11754.8526,2125.9844 L11754.8526,2128.7031 Q11754.2276,2128.125 11753.6338,2127.8516 Q11753.0401,2127.5781 11752.4151,2127.5781 Q11751.0713,2127.5781 11750.3838,2128.6484 Q11749.6963,2129.7188 11749.6963,2131.8125 Q11749.6963,2133.9063 11750.3838,2134.9766 Q11751.0713,2136.0469 11752.4151,2136.0469 Q11753.0401,2136.0469 11753.6338,2135.7734 Q11754.2276,2135.5 11754.8526,2134.9219 L11754.8526,2137.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="11772.3838" y="2136.1543">LineShape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11299.1338" x2="12278.1338" y1="2148" y2="2148"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2156.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="11318.1338" y="2162.2104">left : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2169.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="11318.1338" y="2175.0151">right : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2182.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="11318.1338" y="2187.8198">top : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2195.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="11318.1338" y="2200.6245">node1 : RectangleShapePtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2208.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="11318.1338" y="2213.4292">node2 : RectangleShapePtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2220.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="11318.1338" y="2226.2339">arrowHeadSize : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2233.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="11318.1338" y="2239.0386">lineWidth : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11306.1338" y="2246.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="11318.1338" y="2251.8433">title : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11299.1338" x2="12278.1338" y1="2258.4375" y2="2258.4375"/><ellipse cx="11309.1338" cy="2270.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="741" x="11318.1338" y="2272.6479">LineShape(RectangleShapePtr aNode1, RectangleShapePtr aNode2, const std::string&amp; aTitle, int aLineWidth, int anArrowHeadSize)</text><ellipse cx="11309.1338" cy="2283.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="955" x="11318.1338" y="2285.4526">LineShape(model::ModelObjectPtr aModelObject, RectangleShapePtr aNode1, RectangleShapePtr aNode2, const std::string&amp; aTitle, int aLineWidth, int anArrowHeadSize)</text><ellipse cx="11309.1338" cy="2295.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="11318.1338" y="2298.2573">~LineShape()</text><ellipse cx="11309.1338" cy="2308.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="11318.1338" y="2311.062">getBegin() : Point {query}</text><ellipse cx="11309.1338" cy="2321.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="11318.1338" y="2323.8667">getCentre() : Point {query}</text><ellipse cx="11309.1338" cy="2334.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="11318.1338" y="2336.6714">getEnd() : Point {query}</text><polygon fill="#FFFF44" points="11309.1338,2342.168,11313.1338,2346.168,11309.1338,2350.168,11305.1338,2346.168" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="11318.1338" y="2349.4761">getNode1() : RectangleShapePtr</text><polygon fill="#FFFF44" points="11309.1338,2354.9727,11313.1338,2358.9727,11309.1338,2362.9727,11305.1338,2358.9727" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="11318.1338" y="2362.2808">getNode1() : RectangleShapePtr {query}</text><polygon fill="#FFFF44" points="11309.1338,2367.7773,11313.1338,2371.7773,11309.1338,2375.7773,11305.1338,2371.7773" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="11318.1338" y="2375.0854">getNode2() : RectangleShapePtr</text><polygon fill="#FFFF44" points="11309.1338,2380.582,11313.1338,2384.582,11309.1338,2388.582,11305.1338,2384.582" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="11318.1338" y="2387.8901">getNode2() : RectangleShapePtr {query}</text><ellipse cx="11309.1338" cy="2398.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="11318.1338" y="2400.6948">connects(RectangleShapePtr aNode) : bool {query}</text><ellipse cx="11309.1338" cy="2411.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="11318.1338" y="2413.4995">occupies(const Point&amp; aPoint) : bool {query}</text><ellipse cx="11309.1338" cy="2423.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="11318.1338" y="2426.3042">getLength() : double {query}</text><ellipse cx="11309.1338" cy="2436.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="11318.1338" y="2439.1089">getArrowHeadSize() : int {query}</text><ellipse cx="11309.1338" cy="2449.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="11318.1338" y="2451.9136">getLineWidth() : int {query}</text><ellipse cx="11309.1338" cy="2462.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11318.1338" y="2464.7183">asDebugString() : std::string {query}</text><ellipse cx="11309.1338" cy="2475.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11318.1338" y="2477.5229">asString() : std::string {query}</text><ellipse cx="11309.1338" cy="2488.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="11318.1338" y="2490.3276">getTitle() : std::string {query}</text><ellipse cx="11309.1338" cy="2500.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="11318.1338" y="2503.1323">draw(wxDC&amp; dc) : void</text><ellipse cx="11309.1338" cy="2513.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="11318.1338" y="2515.937">drawHead(wxDC&amp; dc) : void</text><ellipse cx="11309.1338" cy="2526.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="11318.1338" y="2528.7417">handleActivated() : void</text><ellipse cx="11309.1338" cy="2539.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="11318.1338" y="2541.5464">handleNotification() : void</text><ellipse cx="11309.1338" cy="2552.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="11318.1338" y="2554.3511">handleSelection() : void</text><ellipse cx="11309.1338" cy="2564.8477" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="11318.1338" y="2567.1558">setArrowHeadSize(int anArrowHeadSize) : void</text><ellipse cx="11309.1338" cy="2577.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="11318.1338" y="2579.9604">setCentre(const Point&amp; aPoint) : void</text><ellipse cx="11309.1338" cy="2590.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="11318.1338" y="2592.7651">setLineWidth(int aLineWidth) : void</text><ellipse cx="11309.1338" cy="2603.2617" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="11318.1338" y="2605.5698">setNode1(RectangleShapePtr aNode1) : void</text><ellipse cx="11309.1338" cy="2616.0664" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="11318.1338" y="2618.3745">setNode2(RectangleShapePtr aNode2) : void</text><ellipse cx="11309.1338" cy="2628.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="11318.1338" y="2631.1792">setTitle(const std::string&amp; aTitle) : void</text><!--class RectangleShape--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="457.75" id="RectangleShape" style="stroke: #A80036; stroke-width: 1.5;" width="816" x="11002.6338" y="2972"/><ellipse cx="11354.8838" cy="2988" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11357.8526,2993.6406 Q11357.2744,2993.9375 11356.6338,2994.0859 Q11355.9932,2994.2344 11355.2901,2994.2344 Q11352.7901,2994.2344 11351.4697,2992.5859 Q11350.1494,2990.9375 11350.1494,2987.8125 Q11350.1494,2984.6875 11351.4697,2983.0313 Q11352.7901,2981.375 11355.2901,2981.375 Q11355.9932,2981.375 11356.6416,2981.5313 Q11357.2901,2981.6875 11357.8526,2981.9844 L11357.8526,2984.7031 Q11357.2276,2984.125 11356.6338,2983.8516 Q11356.0401,2983.5781 11355.4151,2983.5781 Q11354.0713,2983.5781 11353.3838,2984.6484 Q11352.6963,2985.7188 11352.6963,2987.8125 Q11352.6963,2989.9063 11353.3838,2990.9766 Q11354.0713,2992.0469 11355.4151,2992.0469 Q11356.0401,2992.0469 11356.6338,2991.7734 Q11357.2276,2991.5 11357.8526,2990.9219 L11357.8526,2993.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="11375.3838" y="2992.1543">RectangleShape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11003.6338" x2="11817.6338" y1="3004" y2="3004"/><polygon fill="none" points="11013.6338,3010.9023,11017.6338,3014.9023,11013.6338,3018.9023,11009.6338,3014.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="11022.6338" y="3018.2104">centre : Point</text><polygon fill="none" points="11013.6338,3023.707,11017.6338,3027.707,11013.6338,3031.707,11009.6338,3027.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="11022.6338" y="3031.0151">size : Size</text><polygon fill="none" points="11013.6338,3036.5117,11017.6338,3040.5117,11013.6338,3044.5117,11009.6338,3040.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="11022.6338" y="3043.8198">titleSize : Size</text><polygon fill="none" points="11013.6338,3049.3164,11017.6338,3053.3164,11013.6338,3057.3164,11009.6338,3053.3164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="11022.6338" y="3056.6245">borderWidth : int</text><polygon fill="none" points="11013.6338,3062.1211,11017.6338,3066.1211,11013.6338,3070.1211,11009.6338,3066.1211" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="11022.6338" y="3069.4292">spacing : int</text><polygon fill="none" points="11013.6338,3074.9258,11017.6338,3078.9258,11013.6338,3082.9258,11009.6338,3078.9258" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="11022.6338" y="3082.2339">title : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11003.6338" x2="11817.6338" y1="3088.8281" y2="3088.8281"/><ellipse cx="11013.6338" cy="3100.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="11022.6338" y="3103.0386">RectangleShape(const std::string&amp; aTitle)</text><ellipse cx="11013.6338" cy="3113.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="576" x="11022.6338" y="3115.8433">RectangleShape(const Point&amp; aCentrePoint, const std::string&amp; aTitle, int aBorderWidth, int aSpacing)</text><ellipse cx="11013.6338" cy="3126.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="790" x="11022.6338" y="3128.6479">RectangleShape(model::ModelObjectPtr aModelObject, const Point&amp; aCentrePoint, const std::string&amp; aTitle, int aBorderWidth, int aSpacing)</text><ellipse cx="11013.6338" cy="3139.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="11022.6338" y="3141.4526">~RectangleShape()</text><ellipse cx="11013.6338" cy="3151.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="11022.6338" y="3154.2573">getCentre() : Point {query}</text><ellipse cx="11013.6338" cy="3164.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="11022.6338" y="3167.062">operator=(const RectangleShape&amp; aRectangleShape) : RectangleShape&amp;</text><ellipse cx="11013.6338" cy="3177.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="11022.6338" y="3179.8667">getSize() : Size {query}</text><ellipse cx="11013.6338" cy="3190.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="11022.6338" y="3192.6714">isBorderPoint(const Point aPoint, int aRadius) : bool {query}</text><ellipse cx="11013.6338" cy="3203.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="11022.6338" y="3205.4761">occupies(const Point&amp; aPoint) : bool {query}</text><ellipse cx="11013.6338" cy="3215.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="11022.6338" y="3218.2808">getBorderWidth() : int {query}</text><ellipse cx="11013.6338" cy="3228.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="11022.6338" y="3231.0854">getSpacing() : int {query}</text><ellipse cx="11013.6338" cy="3241.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11022.6338" y="3243.8901">asDebugString() : std::string {query}</text><ellipse cx="11013.6338" cy="3254.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11022.6338" y="3256.6948">asString() : std::string {query}</text><ellipse cx="11013.6338" cy="3267.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="11022.6338" y="3269.4995">getActivationColour() : std::string {query}</text><ellipse cx="11013.6338" cy="3279.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="11022.6338" y="3282.3042">getNormalColour() : std::string {query}</text><ellipse cx="11013.6338" cy="3292.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="11022.6338" y="3295.1089">getSelectionColour() : std::string {query}</text><ellipse cx="11013.6338" cy="3305.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="11022.6338" y="3307.9136">getTitle() : std::string {query}</text><ellipse cx="11013.6338" cy="3318.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="11022.6338" y="3320.7183">draw(wxDC&amp; dc) : void</text><ellipse cx="11013.6338" cy="3331.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="11022.6338" y="3333.5229">handleActivated() : void</text><ellipse cx="11013.6338" cy="3344.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="11022.6338" y="3346.3276">handleNotification() : void</text><ellipse cx="11013.6338" cy="3356.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="11022.6338" y="3359.1323">handleSelection() : void</text><ellipse cx="11013.6338" cy="3369.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="11022.6338" y="3371.937">setBorderWidth(int aBorderWidth) : void</text><ellipse cx="11013.6338" cy="3382.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="11022.6338" y="3384.7417">setCentre(const Point&amp; aPoint) : void</text><ellipse cx="11013.6338" cy="3395.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="11022.6338" y="3397.5464">setSize(const Size&amp; aSize) : void</text><ellipse cx="11013.6338" cy="3408.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="11022.6338" y="3410.3511">setSpacing(int aSpacing) : void</text><ellipse cx="11013.6338" cy="3420.8477" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="11022.6338" y="3423.1558">setTitle(const std::string&amp; aTitle) : void</text><!--class RobotShape--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="265.6797" id="RobotShape" style="stroke: #A80036; stroke-width: 1.5;" width="419" x="10949.1338" y="3720.5"/><ellipse cx="11115.8838" cy="3736.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11118.8526,3742.1406 Q11118.2744,3742.4375 11117.6338,3742.5859 Q11116.9932,3742.7344 11116.2901,3742.7344 Q11113.7901,3742.7344 11112.4697,3741.0859 Q11111.1494,3739.4375 11111.1494,3736.3125 Q11111.1494,3733.1875 11112.4697,3731.5313 Q11113.7901,3729.875 11116.2901,3729.875 Q11116.9932,3729.875 11117.6416,3730.0313 Q11118.2901,3730.1875 11118.8526,3730.4844 L11118.8526,3733.2031 Q11118.2276,3732.625 11117.6338,3732.3516 Q11117.0401,3732.0781 11116.4151,3732.0781 Q11115.0713,3732.0781 11114.3838,3733.1484 Q11113.6963,3734.2188 11113.6963,3736.3125 Q11113.6963,3738.4063 11114.3838,3739.4766 Q11115.0713,3740.5469 11116.4151,3740.5469 Q11117.0401,3740.5469 11117.6338,3740.2734 Q11118.2276,3740 11118.8526,3739.4219 L11118.8526,3742.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="11136.3838" y="3740.6543">RobotShape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10950.1338" x2="11367.1338" y1="3752.5" y2="3752.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.1338" y="3761.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="10969.1338" y="3766.7104">robotWorldCanvas : RobotWorldCanvas*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10950.1338" x2="11367.1338" y1="3773.3047" y2="3773.3047"/><ellipse cx="10960.1338" cy="3785.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="10969.1338" y="3787.5151">RobotShape(model::RobotPtr aRobot)</text><ellipse cx="10960.1338" cy="3798.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="10969.1338" y="3800.3198">~RobotShape()</text><ellipse cx="10960.1338" cy="3810.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="10969.1338" y="3813.1245">getRobot() : model::RobotPtr {query}</text><ellipse cx="10960.1338" cy="3823.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="10969.1338" y="3825.9292">occupies(const Point&amp; aPoint) : bool {query}</text><ellipse cx="10960.1338" cy="3836.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="10969.1338" y="3838.7339">asDebugString() : std::string {query}</text><ellipse cx="10960.1338" cy="3849.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="10969.1338" y="3851.5386">asString() : std::string {query}</text><ellipse cx="10960.1338" cy="3862.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="10969.1338" y="3864.3433">getActivationColour() : std::string {query}</text><ellipse cx="10960.1338" cy="3874.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="10969.1338" y="3877.1479">getNormalColour() : std::string {query}</text><ellipse cx="10960.1338" cy="3887.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="10969.1338" y="3889.9526">getSelectionColour() : std::string {query}</text><ellipse cx="10960.1338" cy="3900.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="10969.1338" y="3902.7573">draw(wxDC&amp; dc) : void</text><ellipse cx="10960.1338" cy="3913.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="10969.1338" y="3915.562">handleActivated() : void</text><ellipse cx="10960.1338" cy="3926.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="10969.1338" y="3928.3667">handleNotification() : void</text><ellipse cx="10960.1338" cy="3938.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="10969.1338" y="3941.1714">handleSelection() : void</text><ellipse cx="10960.1338" cy="3951.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="10969.1338" y="3953.9761">setCentre(const Point&amp; aPoint) : void</text><ellipse cx="10960.1338" cy="3964.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="10969.1338" y="3966.7808">setRobot(model::RobotPtr aRobot) : void</text><ellipse cx="10960.1338" cy="3977.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="10969.1338" y="3979.5854">setRobotWorldCanvas(RobotWorldCanvas* aRobotWorldCanvas) : void</text><!--class RobotWorldCanvas--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="1635.7813" id="RobotWorldCanvas" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="10949.6338" y="43"/><ellipse cx="11118.8838" cy="59" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11121.8526,64.6406 Q11121.2744,64.9375 11120.6338,65.0859 Q11119.9932,65.2344 11119.2901,65.2344 Q11116.7901,65.2344 11115.4697,63.5859 Q11114.1494,61.9375 11114.1494,58.8125 Q11114.1494,55.6875 11115.4697,54.0313 Q11116.7901,52.375 11119.2901,52.375 Q11119.9932,52.375 11120.6416,52.5313 Q11121.2901,52.6875 11121.8526,52.9844 L11121.8526,55.7031 Q11121.2276,55.125 11120.6338,54.8516 Q11120.0401,54.5781 11119.4151,54.5781 Q11118.0713,54.5781 11117.3838,55.6484 Q11116.6963,56.7188 11116.6963,58.8125 Q11116.6963,60.9063 11117.3838,61.9766 Q11118.0713,63.0469 11119.4151,63.0469 Q11120.0401,63.0469 11120.6338,62.7734 Q11121.2276,62.5 11121.8526,61.9219 L11121.8526,64.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="11139.3838" y="63.1543">RobotWorldCanvas</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10950.6338" x2="11412.6338" y1="75" y2="75"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="83.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="10969.6338" y="89.2104">actionOffset : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="96.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="10969.6338" y="102.0151">endActionPoint : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="109.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="10969.6338" y="114.8198">popupPoint : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="122.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="10969.6338" y="127.6245">startActionPoint : Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="135.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="10969.6338" y="140.4292">startActionSize : Size</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="147.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="10969.6338" y="153.2339">endActionShape : View::ShapePtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="160.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="10969.6338" y="166.0386">selectedShape : View::ShapePtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="173.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="10969.6338" y="178.8433">startActionShape : View::ShapePtr</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="186.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="10969.6338" y="191.6479">activationEnabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="199.1445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="10969.6338" y="204.4526">dandEnabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="211.9492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="10969.6338" y="217.2573">menuItemEnabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="224.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="10969.6338" y="230.062">selectionEnabled : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="237.5586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="10969.6338" y="242.8667">actionStatus : enum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="250.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="10969.6338" y="255.6714">shapes : std::vector&lt; ShapePtr&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10950.6338" x2="11412.6338" y1="262.2656" y2="262.2656"/><ellipse cx="10960.6338" cy="274.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="10969.6338" y="276.4761">RobotWorldCanvas(Window* anOwner)</text><ellipse cx="10960.6338" cy="286.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="10969.6338" y="289.2808">RobotWorldCanvas(Window* anOwner, model::ModelObjectPtr aModelObject)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="296.7773"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="10969.6338" y="302.0854">function&lt;void(NotifyEvent &amp;)</text><ellipse cx="10960.6338" cy="312.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="10969.6338" y="314.8901">~RobotWorldCanvas()</text><ellipse cx="10960.6338" cy="325.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="10969.6338" y="327.6948">getRobotWorld() : model::RobotWorldPtr {query}</text><ellipse cx="10960.6338" cy="338.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="10969.6338" y="340.4995">devicePointFor(const Point&amp; aScreenPoint) : Point {query}</text><ellipse cx="10960.6338" cy="350.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="10969.6338" y="353.3042">screenPointFor(const Point&amp; aDevicePoint) : Point {query}</text><ellipse cx="10960.6338" cy="363.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="10969.6338" y="366.1089">getSelectedShape() : ShapePtr {query}</text><ellipse cx="10960.6338" cy="376.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="10969.6338" y="378.9136">getShapeAt(const Point&amp; aPoint) : ShapePtr {query}</text><ellipse cx="10960.6338" cy="389.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="10969.6338" y="391.7183">isShapeAt(const Point&amp; aPoint) : bool {query}</text><ellipse cx="10960.6338" cy="402.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="10969.6338" y="404.5229">isShapeSelected() : bool {query}</text><ellipse cx="10960.6338" cy="415.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="10969.6338" y="417.3276">selectShapeAt(const Point&amp; aPoint) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="424.8242"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="10969.6338" y="430.1323">OnAddGoal(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="437.6289"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="10969.6338" y="442.937">OnAddRobot(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="450.4336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="10969.6338" y="455.7417">OnAddWall(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="463.2383"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="10969.6338" y="468.5464">OnAddWayPoint(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="476.043"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="10969.6338" y="481.3511">OnCharDown(KeyEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="488.8477"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="10969.6338" y="494.1558">OnDeleteGoal(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="501.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="10969.6338" y="506.9604">OnDeleteRobot(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="514.457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="10969.6338" y="519.7651">OnDeleteWall(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="527.2617"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="10969.6338" y="532.5698">OnDeleteWayPoint(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="540.0664"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="10969.6338" y="545.3745">OnEditGoal(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="552.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="10969.6338" y="558.1792">OnEditRobot(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="565.6758"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="10969.6338" y="570.9839">OnEditWall(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="578.4805"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="10969.6338" y="583.7886">OnEditWayPoint(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="591.2852"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="10969.6338" y="596.5933">OnKeyDown(KeyEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="604.0898"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="10969.6338" y="609.3979">OnLeftDClick(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="616.8945"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="10969.6338" y="622.2026">OnLeftDown(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="629.6992"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="10969.6338" y="635.0073">OnLeftUp(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="642.5039"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="10969.6338" y="647.812">OnMiddleDClick(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="655.3086"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="10969.6338" y="660.6167">OnMiddleDown(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="668.1133"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="10969.6338" y="673.4214">OnMiddleUp(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="680.918"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="10969.6338" y="686.2261">OnMouseMotion(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="693.7227"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="10969.6338" y="699.0308">OnNotificationEvent(NotifyEvent&amp; aNotifyEvent) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="706.5273"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="10969.6338" y="711.8354">OnPaint(PaintEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="719.332"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="10969.6338" y="724.6401">OnRightDClick(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="732.1367"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="10969.6338" y="737.4448">OnRightDown(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="744.9414"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="10969.6338" y="750.2495">OnRightUp(MouseEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="757.7461"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="10969.6338" y="763.0542">OnShapeInfo(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="770.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="10969.6338" y="775.8589">OnSize(SizeEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="783.3555"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="10969.6338" y="788.6636">OnWorldInfo(CommandEvent&amp; event) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="796.1602"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="10969.6338" y="801.4683">add(const std::vector&lt;std::shared_ptr&lt; T&gt; &gt;&amp; aTs) : void</text><polygon fill="#FFFF44" points="10960.6338,806.9648,10964.6338,810.9648,10960.6338,814.9648,10956.6338,810.9648" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="10969.6338" y="814.2729">addShape(View::RobotShapePtr aRobotShape) : void</text><polygon fill="#FFFF44" points="10960.6338,819.7695,10964.6338,823.7695,10960.6338,827.7695,10956.6338,823.7695" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="10969.6338" y="827.0776">addShape(View::GoalShapePtr aGoalShape) : void</text><polygon fill="#FFFF44" points="10960.6338,832.5742,10964.6338,836.5742,10960.6338,840.5742,10956.6338,836.5742" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="10969.6338" y="839.8823">addShape(View::WayPointShapePtr aWayPointShape) : void</text><polygon fill="#FFFF44" points="10960.6338,845.3789,10964.6338,849.3789,10960.6338,853.3789,10956.6338,849.3789" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="10969.6338" y="852.687">addShape(View::WallShapePtr aWallShape) : void</text><ellipse cx="10960.6338" cy="863.1836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="10969.6338" y="865.4917">enableActivationHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="875.9883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="10969.6338" y="878.2964">enableDragAndDropHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="888.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="10969.6338" y="891.1011">enableHandlePaint(bool enable) : void</text><ellipse cx="10960.6338" cy="901.5977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="10969.6338" y="903.9058">enableHandleSize(bool enable) : void</text><ellipse cx="10960.6338" cy="914.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="10969.6338" y="916.7104">enableItemMenuHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="927.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="10969.6338" y="929.5151">enableKeyHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="940.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="10969.6338" y="942.3198">enableLeftDClickHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="952.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="10969.6338" y="955.1245">enableLeftDownHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="965.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="10969.6338" y="967.9292">enableLeftUpHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="978.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="10969.6338" y="980.7339">enableMiddleDClickHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="991.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="10969.6338" y="993.5386">enableMiddleDownHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="1004.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="10969.6338" y="1006.3433">enableMiddleUpHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="1016.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="10969.6338" y="1019.1479">enableMouseMotionHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="1029.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="10969.6338" y="1031.9526">enableRightDClickHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="1042.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="10969.6338" y="1044.7573">enableRightDownHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="1055.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="10969.6338" y="1057.562">enableRightUpHandling(bool enable) : void</text><ellipse cx="10960.6338" cy="1068.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="10969.6338" y="1070.3667">enableSelectionHandling(bool enable) : void</text><polygon fill="#FFFF44" points="10960.6338,1075.8633,10964.6338,1079.8633,10960.6338,1083.8633,10956.6338,1079.8633" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="10969.6338" y="1083.1714">handleActivation(View::ShapePtr aShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1088.668,10964.6338,1092.668,10960.6338,1096.668,10956.6338,1092.668" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="10969.6338" y="1095.9761">handleAddGoal(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1101.4727,10964.6338,1105.4727,10960.6338,1109.4727,10956.6338,1105.4727" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="10969.6338" y="1108.7808">handleAddRobot(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1114.2773,10964.6338,1118.2773,10960.6338,1122.2773,10956.6338,1118.2773" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="10969.6338" y="1121.5854">handleAddWall(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1127.082,10964.6338,1131.082,10960.6338,1135.082,10956.6338,1131.082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="10969.6338" y="1134.3901">handleAddWayPoint(CommandEvent&amp; event) : void</text><ellipse cx="10960.6338" cy="1144.8867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="10969.6338" y="1147.1948">handleBackGroundNotification() : void</text><polygon fill="#FFFF44" points="10960.6338,1152.6914,10964.6338,1156.6914,10960.6338,1160.6914,10956.6338,1156.6914" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="10969.6338" y="1159.9995">handleBeginLeftDrag(View::ShapePtr aShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1165.4961,10964.6338,1169.4961,10960.6338,1173.4961,10956.6338,1169.4961" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="10969.6338" y="1172.8042">handleDeleteGoal(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1178.3008,10964.6338,1182.3008,10960.6338,1186.3008,10956.6338,1182.3008" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="10969.6338" y="1185.6089">handleDeleteRobot(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1191.1055,10964.6338,1195.1055,10960.6338,1199.1055,10956.6338,1195.1055" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="10969.6338" y="1198.4136">handleDeleteWall(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1203.9102,10964.6338,1207.9102,10960.6338,1211.9102,10956.6338,1207.9102" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="10969.6338" y="1211.2183">handleDeleteWayPoint(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1216.7148,10964.6338,1220.7148,10960.6338,1224.7148,10956.6338,1220.7148" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="10969.6338" y="1224.0229">handleEditGoal(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1229.5195,10964.6338,1233.5195,10960.6338,1237.5195,10956.6338,1233.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="10969.6338" y="1236.8276">handleEditRobot(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1242.3242,10964.6338,1246.3242,10960.6338,1250.3242,10956.6338,1246.3242" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="10969.6338" y="1249.6323">handleEditWall(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1255.1289,10964.6338,1259.1289,10960.6338,1263.1289,10956.6338,1259.1289" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="10969.6338" y="1262.437">handleEditWayPoint(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1267.9336,10964.6338,1271.9336,10960.6338,1275.9336,10956.6338,1271.9336" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="10969.6338" y="1275.2417">handleEndDrag(View::ShapePtr aShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1280.7383,10964.6338,1284.7383,10960.6338,1288.7383,10956.6338,1284.7383" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="10969.6338" y="1288.0464">handleItemMenu(View::ShapePtr aSelectedShape, const Point&amp; aPoint) : void</text><polygon fill="#FFFF44" points="10960.6338,1293.543,10964.6338,1297.543,10960.6338,1301.543,10956.6338,1297.543" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="10969.6338" y="1300.8511">handleKey(KeyEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1306.3477,10964.6338,1310.3477,10960.6338,1314.3477,10956.6338,1310.3477" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="10969.6338" y="1313.6558">handleLeftDClick(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1319.1523,10964.6338,1323.1523,10960.6338,1327.1523,10956.6338,1323.1523" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="10969.6338" y="1326.4604">handleLeftDown(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1331.957,10964.6338,1335.957,10960.6338,1339.957,10956.6338,1335.957" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="10969.6338" y="1339.2651">handleLeftUp(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1344.7617,10964.6338,1348.7617,10960.6338,1352.7617,10956.6338,1348.7617" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="10969.6338" y="1352.0698">handleMenu(const Point&amp; aScreenPoint) : void</text><polygon fill="#FFFF44" points="10960.6338,1357.5664,10964.6338,1361.5664,10960.6338,1365.5664,10956.6338,1361.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="10969.6338" y="1364.8745">handleMiddleDClick(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1370.3711,10964.6338,1374.3711,10960.6338,1378.3711,10956.6338,1374.3711" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="10969.6338" y="1377.6792">handleMiddleDown(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1383.1758,10964.6338,1387.1758,10960.6338,1391.1758,10956.6338,1387.1758" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="10969.6338" y="1390.4839">handleMiddleUp(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1395.9805,10964.6338,1399.9805,10960.6338,1403.9805,10956.6338,1399.9805" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="10969.6338" y="1403.2886">handleMouseMotion(MouseEvent&amp; event) : void</text><ellipse cx="10960.6338" cy="1413.7852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="10969.6338" y="1416.0933">handleNotification() : void</text><polygon fill="#FFFF44" points="10960.6338,1421.5898,10964.6338,1425.5898,10960.6338,1429.5898,10956.6338,1425.5898" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="10969.6338" y="1428.8979">handleNotification(NotifyEvent&amp; aNotifyEvent) : void</text><polygon fill="#FFFF44" points="10960.6338,1434.3945,10964.6338,1438.3945,10960.6338,1442.3945,10956.6338,1438.3945" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="10969.6338" y="1441.7026">handlePaint(PaintEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1447.1992,10964.6338,1451.1992,10960.6338,1455.1992,10956.6338,1451.1992" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="10969.6338" y="1454.5073">handleRightDClick(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1460.0039,10964.6338,1464.0039,10960.6338,1468.0039,10956.6338,1464.0039" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="10969.6338" y="1467.312">handleRightDown(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1472.8086,10964.6338,1476.8086,10960.6338,1480.8086,10956.6338,1476.8086" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="10969.6338" y="1480.1167">handleRightUp(MouseEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1485.6133,10964.6338,1489.6133,10960.6338,1493.6133,10956.6338,1489.6133" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="10969.6338" y="1492.9214">handleSelection(View::ShapePtr aShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1498.418,10964.6338,1502.418,10960.6338,1506.418,10956.6338,1502.418" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="10969.6338" y="1505.7261">handleShapeInfo(CommandEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1511.2227,10964.6338,1515.2227,10960.6338,1519.2227,10956.6338,1515.2227" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="10969.6338" y="1518.5308">handleSize(SizeEvent&amp; event) : void</text><polygon fill="#FFFF44" points="10960.6338,1524.0273,10964.6338,1528.0273,10960.6338,1532.0273,10956.6338,1528.0273" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="10969.6338" y="1531.3354">initialise() : void</text><ellipse cx="10960.6338" cy="1541.832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="10969.6338" y="1544.1401">populate(int aNumberOfWalls) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10957.6338" y="1551.6367"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="10969.6338" y="1556.9448">remove(const std::vector&lt;std::shared_ptr&lt; T&gt; &gt;&amp; aTs) : void</text><polygon fill="#FFFF44" points="10960.6338,1562.4414,10964.6338,1566.4414,10960.6338,1570.4414,10956.6338,1566.4414" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="10969.6338" y="1569.7495">removeGenericShape(View::ShapePtr aShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1575.2461,10964.6338,1579.2461,10960.6338,1583.2461,10956.6338,1579.2461" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="10969.6338" y="1582.5542">removeShape(View::RobotShapePtr aRobotShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1588.0508,10964.6338,1592.0508,10960.6338,1596.0508,10956.6338,1592.0508" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="10969.6338" y="1595.3589">removeShape(View::GoalShapePtr aGoalShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1600.8555,10964.6338,1604.8555,10960.6338,1608.8555,10956.6338,1604.8555" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="10969.6338" y="1608.1636">removeShape(View::WayPointShapePtr aWayPointShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1613.6602,10964.6338,1617.6602,10960.6338,1621.6602,10956.6338,1617.6602" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="10969.6338" y="1620.9683">removeShape(View::WallShapePtr aWallShape) : void</text><polygon fill="#FFFF44" points="10960.6338,1626.4648,10964.6338,1630.4648,10960.6338,1634.4648,10956.6338,1630.4648" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="10969.6338" y="1633.7729">render(wxDC&amp; dc) : void</text><ellipse cx="10960.6338" cy="1644.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="10969.6338" y="1646.5776">setRobotWorld(model::RobotWorldPtr aRobotWorld) : void</text><ellipse cx="10960.6338" cy="1657.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="10969.6338" y="1659.3823">setSelectedShape(View::ShapePtr aSelectedShape) : void</text><ellipse cx="10960.6338" cy="1669.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="10969.6338" y="1672.187">unpopulate() : void</text><!--class Shape--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="316.8984" id="Shape" style="stroke: #A80036; stroke-width: 1.5;" width="351" x="10987.1338" y="1739"/><ellipse cx="11138.3838" cy="1755" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11138.4932,1750.3438 L11137.3369,1755.4219 L11139.6651,1755.4219 L11138.4932,1750.3438 Z M11137.0088,1748.1094 L11139.9932,1748.1094 L11143.3526,1760.5 L11140.8994,1760.5 L11140.1338,1757.4375 L11136.8526,1757.4375 L11136.1026,1760.5 L11133.6651,1760.5 L11137.0088,1748.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="40" x="11158.8838" y="1759.1543">Shape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10988.1338" x2="11337.1338" y1="1771" y2="1771"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10995.1338" y="1779.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="11007.1338" y="1785.2104">data : ShapeData*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10995.1338" y="1792.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="11007.1338" y="1798.0151">selected : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10988.1338" x2="11337.1338" y1="1804.6094" y2="1804.6094"/><ellipse cx="10998.1338" cy="1816.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="11007.1338" y="1818.8198">Shape()</text><ellipse cx="10998.1338" cy="1829.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="11007.1338" y="1831.6245">Shape(model::ModelObjectPtr aModelObject)</text><ellipse cx="10998.1338" cy="1842.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="11007.1338" y="1844.4292">~Shape()</text><ellipse cx="10998.1338" cy="1854.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="155" x="11007.1338" y="1857.2339">getCentre() : Point {query}</text><ellipse cx="10998.1338" cy="1867.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="11007.1338" y="1870.0386">getSelectedPoint() : Point {query}</text><ellipse cx="10998.1338" cy="1880.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="11007.1338" y="1882.8433">getData() : ShapeData* {query}</text><ellipse cx="10998.1338" cy="1893.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="11007.1338" y="1895.6479">isSelected() : bool {query}</text><ellipse cx="10998.1338" cy="1906.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="254" x="11007.1338" y="1908.4526">occupies(const Point&amp; aPoint) : bool {query}</text><ellipse cx="10998.1338" cy="1918.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11007.1338" y="1921.2573">asDebugString() : std::string {query}</text><ellipse cx="10998.1338" cy="1931.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11007.1338" y="1934.062">asString() : std::string {query}</text><ellipse cx="10998.1338" cy="1944.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="11007.1338" y="1946.8667">draw(wxDC&amp; dc) : void</text><ellipse cx="10998.1338" cy="1957.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="11007.1338" y="1959.6714">handleActivated() : void</text><ellipse cx="10998.1338" cy="1970.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="11007.1338" y="1972.4761">handleBeginLeftDrag() : void</text><ellipse cx="10998.1338" cy="1982.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="11007.1338" y="1985.2808">handleEndDrag() : void</text><ellipse cx="10998.1338" cy="1995.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="11007.1338" y="1998.0854">handleSelection() : void</text><ellipse cx="10998.1338" cy="2008.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="11007.1338" y="2010.8901">setCentre(const Point&amp; aPoint) : void</text><ellipse cx="10998.1338" cy="2021.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="11007.1338" y="2023.6948">setData(ShapeData* aData) : void</text><ellipse cx="10998.1338" cy="2034.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="11007.1338" y="2036.4995">setSelected(bool aSelected) : void</text><ellipse cx="10998.1338" cy="2046.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="11007.1338" y="2049.3042">setSelectedAt(const Point&amp; aPoint, bool aSelected) : void</text><!--class ShapeData--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="86.4141" id="ShapeData" style="stroke: #A80036; stroke-width: 1.5;" width="239" x="11024.1338" y="2334"/><ellipse cx="11104.3838" cy="2350" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11107.3526,2355.6406 Q11106.7744,2355.9375 11106.1338,2356.0859 Q11105.4932,2356.2344 11104.7901,2356.2344 Q11102.2901,2356.2344 11100.9697,2354.5859 Q11099.6494,2352.9375 11099.6494,2349.8125 Q11099.6494,2346.6875 11100.9697,2345.0313 Q11102.2901,2343.375 11104.7901,2343.375 Q11105.4932,2343.375 11106.1416,2343.5313 Q11106.7901,2343.6875 11107.3526,2343.9844 L11107.3526,2346.7031 Q11106.7276,2346.125 11106.1338,2345.8516 Q11105.5401,2345.5781 11104.9151,2345.5781 Q11103.5713,2345.5781 11102.8838,2346.6484 Q11102.1963,2347.7188 11102.1963,2349.8125 Q11102.1963,2351.9063 11102.8838,2352.9766 Q11103.5713,2354.0469 11104.9151,2354.0469 Q11105.5401,2354.0469 11106.1338,2353.7734 Q11106.7276,2353.5 11107.3526,2352.9219 L11107.3526,2355.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="11124.8838" y="2354.1543">ShapeData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11025.1338" x2="11262.1338" y1="2366" y2="2366"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11025.1338" x2="11262.1338" y1="2374" y2="2374"/><ellipse cx="11035.1338" cy="2385.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="11044.1338" y="2388.2104">~ShapeData()</text><ellipse cx="11035.1338" cy="2398.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11044.1338" y="2401.0151">asDebugString() : std::string {query}</text><ellipse cx="11035.1338" cy="2411.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11044.1338" y="2413.8198">asString() : std::string {query}</text><!--class WallShape--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="214.4609" id="WallShape" style="stroke: #A80036; stroke-width: 1.5;" width="652" x="11518.6338" y="2698"/><ellipse cx="11807.8838" cy="2714" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11810.8526,2719.6406 Q11810.2744,2719.9375 11809.6338,2720.0859 Q11808.9932,2720.2344 11808.2901,2720.2344 Q11805.7901,2720.2344 11804.4697,2718.5859 Q11803.1494,2716.9375 11803.1494,2713.8125 Q11803.1494,2710.6875 11804.4697,2709.0313 Q11805.7901,2707.375 11808.2901,2707.375 Q11808.9932,2707.375 11809.6416,2707.5313 Q11810.2901,2707.6875 11810.8526,2707.9844 L11810.8526,2710.7031 Q11810.2276,2710.125 11809.6338,2709.8516 Q11809.0401,2709.5781 11808.4151,2709.5781 Q11807.0713,2709.5781 11806.3838,2710.6484 Q11805.6963,2711.7188 11805.6963,2713.8125 Q11805.6963,2715.9063 11806.3838,2716.9766 Q11807.0713,2718.0469 11808.4151,2718.0469 Q11809.0401,2718.0469 11809.6338,2717.7734 Q11810.2276,2717.5 11810.8526,2716.9219 L11810.8526,2719.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="11828.3838" y="2718.1543">WallShape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11519.6338" x2="12169.6338" y1="2730" y2="2730"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11519.6338" x2="12169.6338" y1="2738" y2="2738"/><ellipse cx="11529.6338" cy="2749.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="11538.6338" y="2752.2104">WallShape(model::WallPtr aWall)</text><ellipse cx="11529.6338" cy="2762.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="626" x="11538.6338" y="2765.0151">WallShape(model::WallPtr aWall, RectangleShapePtr aRectangleShape1, RectangleShapePtr aRectangleShape2)</text><ellipse cx="11529.6338" cy="2775.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="11538.6338" y="2777.8198">~WallShape()</text><ellipse cx="11529.6338" cy="2788.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="11538.6338" y="2790.6245">getWall() : model::WallPtr {query}</text><ellipse cx="11529.6338" cy="2801.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="11538.6338" y="2803.4292">hasEndPointAt(const Point&amp; aPoint) : RectangleShapePtr</text><ellipse cx="11529.6338" cy="2813.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="11538.6338" y="2816.2339">hasEndPoint(RectangleShapePtr aRectangleShape) : bool</text><ellipse cx="11529.6338" cy="2826.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="11538.6338" y="2829.0386">occupies(const Point&amp; aPoint) : bool {query}</text><ellipse cx="11529.6338" cy="2839.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11538.6338" y="2841.8433">asDebugString() : std::string {query}</text><ellipse cx="11529.6338" cy="2852.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11538.6338" y="2854.6479">asString() : std::string {query}</text><ellipse cx="11529.6338" cy="2865.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="11538.6338" y="2867.4526">draw(wxDC&amp; dc) : void</text><ellipse cx="11529.6338" cy="2877.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="11538.6338" y="2880.2573">setSelectedAt(const Point&amp; aPoint, bool aSelected) : void</text><ellipse cx="11529.6338" cy="2890.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="11538.6338" y="2893.062">setWall(model::WallPtr aWall) : void</text><ellipse cx="11529.6338" cy="2903.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="11538.6338" y="2905.8667">updateEndPoint(RectangleShapePtr aRectangleShape) : void</text><!--class WayPointShape--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="201.6563" id="WayPointShape" style="stroke: #A80036; stroke-width: 1.5;" width="305" x="11672.1338" y="3752.5"/><ellipse cx="11771.8838" cy="3768.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11774.8526,3774.1406 Q11774.2744,3774.4375 11773.6338,3774.5859 Q11772.9932,3774.7344 11772.2901,3774.7344 Q11769.7901,3774.7344 11768.4697,3773.0859 Q11767.1494,3771.4375 11767.1494,3768.3125 Q11767.1494,3765.1875 11768.4697,3763.5313 Q11769.7901,3761.875 11772.2901,3761.875 Q11772.9932,3761.875 11773.6416,3762.0313 Q11774.2901,3762.1875 11774.8526,3762.4844 L11774.8526,3765.2031 Q11774.2276,3764.625 11773.6338,3764.3516 Q11773.0401,3764.0781 11772.4151,3764.0781 Q11771.0713,3764.0781 11770.3838,3765.1484 Q11769.6963,3766.2188 11769.6963,3768.3125 Q11769.6963,3770.4063 11770.3838,3771.4766 Q11771.0713,3772.5469 11772.4151,3772.5469 Q11773.0401,3772.5469 11773.6338,3772.2734 Q11774.2276,3772 11774.8526,3771.4219 L11774.8526,3774.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="11792.3838" y="3772.6543">WayPointShape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11673.1338" x2="11976.1338" y1="3784.5" y2="3784.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11673.1338" x2="11976.1338" y1="3792.5" y2="3792.5"/><ellipse cx="11683.1338" cy="3804.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="11692.1338" y="3806.7104">WayPointShape(model::WayPointPtr aWayPoint)</text><ellipse cx="11683.1338" cy="3817.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="11692.1338" y="3819.5151">~WayPointShape()</text><ellipse cx="11683.1338" cy="3830.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="11692.1338" y="3832.3198">getWayPoint() : model::WayPointPtr {query}</text><ellipse cx="11683.1338" cy="3842.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11692.1338" y="3845.1245">asDebugString() : std::string {query}</text><ellipse cx="11683.1338" cy="3855.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11692.1338" y="3857.9292">asString() : std::string {query}</text><ellipse cx="11683.1338" cy="3868.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="11692.1338" y="3870.7339">getActivationColour() : std::string {query}</text><ellipse cx="11683.1338" cy="3881.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="11692.1338" y="3883.5386">getNormalColour() : std::string {query}</text><ellipse cx="11683.1338" cy="3894.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="11692.1338" y="3896.3433">getSelectionColour() : std::string {query}</text><ellipse cx="11683.1338" cy="3906.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="11692.1338" y="3909.1479">draw(wxDC&amp; dc) : void</text><ellipse cx="11683.1338" cy="3919.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="11692.1338" y="3921.9526">handleNotification() : void</text><ellipse cx="11683.1338" cy="3932.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="11692.1338" y="3934.7573">setCentre(const Point&amp; aPoint) : void</text><ellipse cx="11683.1338" cy="3945.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="11692.1338" y="3947.562">setWayPoint(model::WayPointPtr aWayPoint) : void</text><!--class MathUtils--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="73.6094" id="MathUtils" style="stroke: #A80036; stroke-width: 1.5;" width="211" x="10714.1338" y="4462.5"/><ellipse cx="10786.3838" cy="4478.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10789.3526,4484.1406 Q10788.7744,4484.4375 10788.1338,4484.5859 Q10787.4932,4484.7344 10786.7901,4484.7344 Q10784.2901,4484.7344 10782.9697,4483.0859 Q10781.6494,4481.4375 10781.6494,4478.3125 Q10781.6494,4475.1875 10782.9697,4473.5313 Q10784.2901,4471.875 10786.7901,4471.875 Q10787.4932,4471.875 10788.1416,4472.0313 Q10788.7901,4472.1875 10789.3526,4472.4844 L10789.3526,4475.2031 Q10788.7276,4474.625 10788.1338,4474.3516 Q10787.5401,4474.0781 10786.9151,4474.0781 Q10785.5713,4474.0781 10784.8838,4475.1484 Q10784.1963,4476.2188 10784.1963,4478.3125 Q10784.1963,4480.4063 10784.8838,4481.4766 Q10785.5713,4482.5469 10786.9151,4482.5469 Q10787.5401,4482.5469 10788.1338,4482.2734 Q10788.7276,4482 10789.3526,4481.4219 L10789.3526,4484.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="10806.8838" y="4482.6543">MathUtils</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10715.1338" x2="10924.1338" y1="4494.5" y2="4494.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="10715.1338" x2="10924.1338" y1="4502.5" y2="4502.5"/><ellipse cx="10725.1338" cy="4514.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="10734.1338" y="4516.7104">toDegrees(float aRadian) : float</text><line style="stroke: #000000; stroke-width: 1.0;" x1="10734.1338" x2="10912.1338" y1="4518.7104" y2="4518.7104"/><ellipse cx="10725.1338" cy="4527.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="185" x="10734.1338" y="4529.5151">toRadians(float aDegrees) : float</text><line style="stroke: #000000; stroke-width: 1.0;" x1="10734.1338" x2="10919.1338" y1="4531.5151" y2="4531.5151"/><!--class Shape2DUtils--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="252.875" id="Shape2DUtils" style="stroke: #A80036; stroke-width: 1.5;" width="797" x="9882.1338" y="4373"/><ellipse cx="10234.3838" cy="4389" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10237.3526,4394.6406 Q10236.7744,4394.9375 10236.1338,4395.0859 Q10235.4932,4395.2344 10234.7901,4395.2344 Q10232.2901,4395.2344 10230.9697,4393.5859 Q10229.6494,4391.9375 10229.6494,4388.8125 Q10229.6494,4385.6875 10230.9697,4384.0313 Q10232.2901,4382.375 10234.7901,4382.375 Q10235.4932,4382.375 10236.1416,4382.5313 Q10236.7901,4382.6875 10237.3526,4382.9844 L10237.3526,4385.7031 Q10236.7276,4385.125 10236.1338,4384.8516 Q10235.5401,4384.5781 10234.9151,4384.5781 Q10233.5713,4384.5781 10232.8838,4385.6484 Q10232.1963,4386.7188 10232.1963,4388.8125 Q10232.1963,4390.9063 10232.8838,4391.9766 Q10233.5713,4393.0469 10234.9151,4393.0469 Q10235.5401,4393.0469 10236.1338,4392.7734 Q10236.7276,4392.5 10237.3526,4391.9219 L10237.3526,4394.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="10254.8838" y="4393.1543">Shape2DUtils</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9883.1338" x2="10678.1338" y1="4405" y2="4405"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9883.1338" x2="10678.1338" y1="4413" y2="4413"/><ellipse cx="9893.1338" cy="4424.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="718" x="9902.1338" y="4427.2104">getIntersection(const Point&amp; aStartLine1, const Point&amp; aEndLine1, const Point&amp; aStartLine2, const Point&amp; anEndLine2) : Point</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10620.1338" y1="4429.2104" y2="4429.2104"/><ellipse cx="9893.1338" cy="4437.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="289" x="9902.1338" y="4440.0151">rotate(const Point&amp; aPoint, double anAngle) : Point</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10191.1338" y1="4442.0151" y2="4442.0151"/><ellipse cx="9893.1338" cy="4450.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="679" x="9902.1338" y="4452.8198">intersect(const Point&amp; aStartLine1, const Point&amp; aEndLine1, const Point&amp; aStartLine2, const Point&amp; anEndLine2) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10581.1338" y1="4454.8198" y2="4454.8198"/><ellipse cx="9893.1338" cy="4463.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="771" x="9902.1338" y="4465.6245">isCompassPoint(const Point&amp; aPoint, const Size&amp; aSize, const Point&amp; aBorderPoint, CompassPoint aCompassPoint, int aRadius) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10673.1338" y1="4467.6245" y2="4467.6245"/><ellipse cx="9893.1338" cy="4476.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="467" x="9902.1338" y="4478.4292">isInsidePolygon(Point* aPolygon, int aNumberOfPoints, const Point&amp; aPoint) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10369.1338" y1="4480.4292" y2="4480.4292"/><ellipse cx="9893.1338" cy="4488.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="572" x="9902.1338" y="4491.2339">isOnLine(const Point&amp; aStartPoint, const Point&amp; anEndPoint, const Point&amp; aPoint, int aRadius) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10474.1338" y1="4493.2339" y2="4493.2339"/><ellipse cx="9893.1338" cy="4501.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="617" x="9902.1338" y="4504.0386">isOnLine(Point* aPolygon, int aNumberOfPoints, const Point&amp; aPoint, int aRadius, bool aClosedShape) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10519.1338" y1="4506.0386" y2="4506.0386"/><ellipse cx="9893.1338" cy="4514.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="326" x="9902.1338" y="4516.8433">getAngle(const model::BoundedVector&amp; aVector) : double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10228.1338" y1="4518.8433" y2="4518.8433"/><ellipse cx="9893.1338" cy="4527.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="395" x="9902.1338" y="4529.6479">getAngle(const Point&amp; aStartpoint, const Point&amp; anEndPoint) : double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10297.1338" y1="4531.6479" y2="4531.6479"/><polygon fill="#FFFF44" points="9893.1338,4535.1445,9897.1338,4539.1445,9893.1338,4543.1445,9889.1338,4539.1445" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="306" x="9902.1338" y="4542.4526">rotateX(const Point&amp; aPoint, double anAngle) : double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10208.1338" y1="4544.4526" y2="4544.4526"/><polygon fill="#FFFF44" points="9893.1338,4547.9492,9897.1338,4551.9492,9893.1338,4555.9492,9889.1338,4551.9492" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="280" x="9902.1338" y="4555.2573">rotateX(int anX, int anY, double anAngle) : double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10182.1338" y1="4557.2573" y2="4557.2573"/><polygon fill="#FFFF44" points="9893.1338,4560.7539,9897.1338,4564.7539,9893.1338,4568.7539,9889.1338,4564.7539" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="306" x="9902.1338" y="4568.062">rotateY(const Point&amp; aPoint, double anAngle) : double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10208.1338" y1="4570.062" y2="4570.062"/><polygon fill="#FFFF44" points="9893.1338,4573.5586,9897.1338,4577.5586,9893.1338,4581.5586,9889.1338,4577.5586" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="280" x="9902.1338" y="4580.8667">rotateY(int anX, int anY, double anAngle) : double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10182.1338" y1="4582.8667" y2="4582.8667"/><ellipse cx="9893.1338" cy="4591.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="586" x="9902.1338" y="4593.6714">getCompassPoint(const Point&amp; aPoint, const Size&amp; aSize, const Point&amp; aBorderPoint, int aRadius) : int</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10488.1338" y1="4595.6714" y2="4595.6714"/><ellipse cx="9893.1338" cy="4604.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="239" x="9902.1338" y="4606.4761">asString(const Point&amp; aPoint) : std::string</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10141.1338" y1="4608.4761" y2="4608.4761"/><ellipse cx="9893.1338" cy="4616.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="229" x="9902.1338" y="4619.2808">asString(const Size&amp; aSize) : std::string</text><line style="stroke: #000000; stroke-width: 1.0;" x1="9902.1338" x2="10131.1338" y1="4621.2808" y2="4621.2808"/><!--class Astar--><rect fill="#FEFECE" filter="url(#f1rjxkql0gimm)" height="48" id="Astar" style="stroke: #A80036; stroke-width: 1.5;" width="65" x="9893.1338" y="3829.5"/><ellipse cx="9908.1338" cy="3845.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9911.1026,3851.1406 Q9910.5244,3851.4375 9909.8838,3851.5859 Q9909.2432,3851.7344 9908.5401,3851.7344 Q9906.0401,3851.7344 9904.7197,3850.0859 Q9903.3994,3848.4375 9903.3994,3845.3125 Q9903.3994,3842.1875 9904.7197,3840.5313 Q9906.0401,3838.875 9908.5401,3838.875 Q9909.2432,3838.875 9909.8916,3839.0313 Q9910.5401,3839.1875 9911.1026,3839.4844 L9911.1026,3842.2031 Q9910.4776,3841.625 9909.8838,3841.3516 Q9909.2901,3841.0781 9908.6651,3841.0781 Q9907.3213,3841.0781 9906.6338,3842.1484 Q9905.9463,3843.2188 9905.9463,3845.3125 Q9905.9463,3847.4063 9906.6338,3848.4766 Q9907.3213,3849.5469 9908.6651,3849.5469 Q9909.2901,3849.5469 9909.8838,3849.2734 Q9910.4776,3849 9911.1026,3848.4219 L9911.1026,3851.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="9922.1338" y="3849.6543">Astar</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9894.1338" x2="9957.1338" y1="3861.5" y2="3861.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9894.1338" x2="9957.1338" y1="3869.5" y2="3869.5"/><!--link AbstractActuator to SteeringActuator--><path d="M6700.6338,2906.5749 C6700.6338,2987.8762 6700.6338,3097.8738 6700.6338,3157.7619 " fill="none" id="AbstractActuator-SteeringActuator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6693.6339,2906.5713,6700.6338,2886.5713,6707.6339,2906.5713,6693.6339,2906.5713" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractAgent to Robot--><path d="M6227.8248,3320.4286 C6250.8122,3369.2863 6278.7541,3428.6741 6307.5323,3489.8395 " fill="none" id="AbstractAgent-Robot" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6221.4465,3323.3143,6219.2658,3302.2372,6234.1144,3317.3541,6221.4465,3323.3143" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractPercept to DistancePercept--><path d="M5919.7424,5534.045 C5931.3303,5598.3485 5951.2156,5708.6952 5962.713,5772.4968 " fill="none" id="AbstractPercept-DistancePercept" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5912.8128,5535.0611,5916.1548,5514.1366,5926.5909,5532.5781,5912.8128,5535.0611" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractSensor to LaserDistanceSensor--><path d="M6092.9494,4652.9831 C6100.3416,4745.1077 6109.3855,4857.8171 6115.0798,4928.7832 " fill="none" id="AbstractSensor-LaserDistanceSensor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6085.949,4653.2572,6091.3268,4632.7613,6099.9042,4652.1373,6085.949,4653.2572" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractStimulus to DistanceStimulus--><path d="M6359.6338,5534.2785 C6359.6338,5600.803 6359.6338,5716.3168 6359.6338,5778.8327 " fill="none" id="AbstractStimulus-DistanceStimulus" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6352.6339,5534.1367,6359.6338,5514.1366,6366.6339,5534.1366,6352.6339,5534.1367" style="stroke: #A80036; stroke-width: 1.0;"/><!--link DebugTraceFunction to StdOutDebugTraceFunction--><path d="M3493.8036,5540.9753 C3494.0171,5613.2158 3494.3756,5734.5934 3494.5429,5791.1993 " fill="none" id="DebugTraceFunction-StdOutDebugTraceFunction" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3486.8029,5540.7143,3493.7437,5520.6937,3500.8029,5540.6729,3486.8029,5540.7143" style="stroke: #A80036; stroke-width: 1.0;"/><!--link LineShape to WallShape--><path d="M11825.4598,2658.4556 C11827.2367,2672.0365 11828.9609,2685.2136 11830.5992,2697.7354 " fill="none" id="LineShape-WallShape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="11818.4764,2659.0376,11822.8224,2638.2985,11832.3581,2657.2213,11818.4764,2659.0376" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ModelObject to AbstractActuator--><path d="M6805.3284,2477.9251 C6781.3581,2552.8102 6749.0921,2653.6123 6726.7442,2723.4289 " fill="none" id="ModelObject-AbstractActuator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6798.7787,2475.4249,6811.5427,2458.511,6812.1123,2479.6929,6798.7787,2475.4249" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ModelObject to AbstractAgent--><path d="M6716.4086,2471.455 C6643.5122,2531.7 6551.6142,2614.0146 6481.6338,2698 C6374.9278,2826.061 6278.7809,2994.217 6222.7828,3099.9669 " fill="none" id="ModelObject-AbstractAgent" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6712.229,2465.8297,6732.1319,2458.5581,6721.1078,2476.6542,6712.229,2465.8297" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ModelObject to AbstractSensor--><path d="M6627.9462,2436.9614 C6393.5128,2516.5253 6025.4381,2681.9224 5862.6338,2972 C5604.5164,3431.9025 5872.3369,4087.8403 6009.8152,4366.2955 " fill="none" id="ModelObject-AbstractSensor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6625.8548,2430.2798,6647.0424,2430.5696,6630.2985,2443.5559,6625.8548,2430.2798" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ModelObject to RobotWorld--><path d="M6891.1332,2476.7431 C6922.4546,2538.8543 6960.4752,2621.273 6984.6338,2698 C7159.0126,3251.8214 7252.0263,3932.2742 7291.0202,4276.8411 " fill="none" id="ModelObject-RobotWorld" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6884.7101,2479.5561,6881.8622,2458.5586,6897.1827,2473.1972,6884.7101,2479.5561" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ModelObject to Wall--><path d="M6900.1441,2475.5748 C6938.3591,2537.9921 6986.8034,2621.1501 7023.6338,2698 C7348.7754,3376.4366 7495.7423,3537.4196 7633.6338,4277 C7651.7589,4374.2137 7660.4596,4626.8192 7633.6338,4722 C7615.1914,4787.4357 7576.4276,4852.6737 7540.6725,4903.2823 " fill="none" id="ModelObject-Wall" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6894.1821,2479.2427,6889.655,2458.5424,6906.1029,2471.9014,6894.1821,2479.2427" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ModelObject to WayPoint--><path d="M6867.3548,2478.4307 C6884.794,2541.202 6906.0115,2623.7219 6919.6338,2698 C6960.2098,2919.2468 6975.6338,2976.0632 6975.6338,3201 C6975.6338,3201 6975.6338,3201 6975.6338,3853.5 C6975.6338,4239.5829 6957.8046,4337.5832 6993.6338,4722 C6997.9954,4768.796 7005.6305,4819.6422 7013.4418,4864.7932 " fill="none" id="ModelObject-WayPoint" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6860.5044,2479.9273,6861.8399,2458.7798,6873.9837,2476.1444,6860.5044,2479.9273" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RectangleShape to RobotShape--><path d="M11314.8325,3449.057 C11279.2091,3541.2963 11240.1635,3642.3964 11210.0218,3720.442 " fill="none" id="RectangleShape-RobotShape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="11308.407,3446.2646,11322.1424,3430.1296,11321.4668,3451.3085,11308.407,3446.2646" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RectangleShape to WayPointShape--><path d="M11566.9252,3447.3288 C11634.0114,3553.0624 11708.6695,3670.7302 11760.2876,3752.0847 " fill="none" id="RectangleShape-WayPointShape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="11560.8169,3450.7674,11556.0126,3430.1296,11572.6382,3443.267,11560.8169,3450.7674" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RequestHandler to MessageHandler--><path d="M1009.2663,5874.8045 C965.3529,5929.5355 898.6591,6012.6588 866.0121,6053.3481 " fill="none" id="RequestHandler-MessageHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1003.849,5870.3707,1021.8251,5859.1519,1014.7687,5879.1321,1003.849,5870.3707" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ResponseHandler to MessageHandler--><path d="M694.5803,5875.158 C735.7119,5929.8929 797.9735,6012.7463 828.4845,6053.3481 " fill="none" id="ResponseHandler-MessageHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="688.9713,5879.3459,682.5523,5859.1519,700.1634,5870.9354,688.9713,5879.3459" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Session to ClientSession--><path d="M1133.485,5142.9875 C1004.5595,5232.7914 844.8667,5344.0264 743.8354,5414.4005 " fill="none" id="Session-ClientSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1129.8415,5136.9946,1150.2536,5131.3072,1137.8434,5148.4824,1129.8415,5136.9946" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Session to ServerSession--><path d="M1345.7388,5151.303 C1348.1763,5242.3369 1351.1364,5352.882 1352.9522,5420.6978 " fill="none" id="Session-ServerSession" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1338.7413,5151.4874,1345.2033,5131.3072,1352.7363,5151.1126,1338.7413,5151.4874" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Shape to LineShape--><path d="M11354.188,2044.2256 C11384.0604,2067.1071 11415.6796,2091.3266 11447.6918,2115.8471 " fill="none" id="Shape-LineShape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="11349.8796,2049.7431,11338.2588,2032.0242,11358.3928,2038.6288,11349.8796,2049.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Shape to RectangleShape--><path d="M11023.7784,2074.0062 C11017.0286,2087.7423 11011.1819,2101.8027 11006.6338,2116 C10971.2452,2226.4701 10971.1128,2527.5724 11006.6338,2638 C11045.5912,2759.1105 11121.3017,2876.2333 11196.7531,2971.9965 " fill="none" id="Shape-RectangleShape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="11017.6529,2070.6145,11033.1389,2056.1512,11030.0523,2077.1148,11017.6529,2070.6145" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ViewObject to RobotWorldCanvas--><path d="M7893.767,3752.5893 C7922.9199,3666.0934 7978.5548,3546.7473 8074.6338,3490 C8254.6122,3383.699 11643.6198,3510.2353 11836.6338,3430 C12204.3439,3277.1441 12478.6338,3203.2155 12478.6338,2805 C12478.6338,2377 12478.6338,2377 12478.6338,2377 C12478.6338,2091.224 12544.4033,1984.8032 12398.6338,1739 C12169.7268,1353.0065 11697.8892,1088.9494 11413.6664,957.489 " fill="none" id="ViewObject-RobotWorldCanvas" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7900.3393,3755.0154,7887.5154,3771.884,7887.0209,3750.7001,7900.3393,3755.0154" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ViewObject to Shape--><path d="M7905.1905,3753.1887 C7939.7901,3673.7776 7997.0794,3564.2444 8074.6338,3490 C8989.1144,2614.5507 10479.6494,2104.1925 10987.079,1948.7041 " fill="none" id="ViewObject-Shape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7911.5923,3756.022,7897.3078,3771.6731,7898.7144,3750.5302,7911.5923,3756.022" style="stroke: #A80036; stroke-width: 1.0;"/><!--link WayPoint to Goal--><path d="M6965.464,5149.3002 C6920.6531,5240.7107 6865.9091,5352.3839 6832.4205,5420.6978 " fill="none" id="WayPoint-Goal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6959.1956,5146.1842,6974.2845,5131.3072,6971.7664,5152.3467,6959.1956,5146.1842" style="stroke: #A80036; stroke-width: 1.0;"/><!--link WayPointShape to GoalShape--><path d="M11860.1244,3974.1679 C11897.4835,4101.1888 11955.3989,4298.1013 11988.6939,4411.3042 " fill="none" id="WayPointShape-GoalShape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="11853.3536,3975.9551,11854.4258,3954.7926,11866.7847,3972.0047,11853.3536,3975.9551" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractActuator to AbstractAgent--><path d="M6581.1228,2886.5713 C6497.2141,2947.4164 6385.2619,3031.0119 6299.5611,3096.7134 " fill="none" id="AbstractActuator-AbstractAgent" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6295.5002,3099.8283,6305.0758,3097.5245,6299.4675,3096.7852,6300.2068,3091.1768,6295.5002,3099.8283" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractAgent to AbstractActuator--><path d="M6318.7334,3099.8283 C6407.8193,3034.8343 6519.0968,2951.3748 6598.5933,2889.8524 " fill="none" id="AbstractAgent-AbstractActuator" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6602.8297,2886.5713,6593.2649,2888.9198,6598.8767,2889.6329,6598.1635,2895.2446,6602.8297,2886.5713" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractAgent to AbstractPercept--><path d="M6112.7757,3302.3271 C6008.6643,3488.0843 5795.831,3898.8661 5719.6338,4277 C5712.1939,4313.9213 5722.3491,5210.794 5723.6338,5214 C5731.1193,5232.679 5742.1593,5231.21 5754.6338,5247 C5808.2467,5314.8617 5861.8043,5401.0697 5890.0916,5448.4098 " fill="none" id="AbstractAgent-AbstractPercept" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5892.7493,5452.8678,5891.5765,5443.089,5890.189,5448.5731,5884.705,5447.1855,5892.7493,5452.8678" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractAgent to AbstractSensor--><path d="M6157.3156,3302.0803 C6134.1419,3532.8199 6094.1571,4098.6056 6082.0819,4361.3072 " fill="none" id="AbstractAgent-AbstractSensor" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6081.8539,4366.3045,6086.2601,4357.4963,6082.0819,4361.3097,6078.2685,4357.1315,6081.8539,4366.3045" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractSensor to AbstractAgent--><path d="M6098.56,4366.3045 C6123.4707,4107.7556 6162.8175,3542.6496 6172.0115,3307.237 " fill="none" id="AbstractSensor-AbstractAgent" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6172.2101,3302.0803,6167.8664,3310.9196,6172.0175,3307.0766,6175.8605,3311.2277,6172.2101,3302.0803" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractAgent to Queue--><path d="M5996.6538,3302.1426 C5912.0113,3354.1407 5810.7735,3420.9963 5726.6338,3490 C4883.1106,4181.7813 4738.0676,4432.237 4012.6338,5247 C3963.0343,5302.7072 3909.8112,5368.8145 3872.0112,5416.955 " fill="none" id="AbstractAgent-Queue" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3868.8602,5420.9718,3877.5622,5416.3592,3871.9461,5417.0377,3871.2676,5411.4217,3868.8602,5420.9718" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientSession to Message--><path d="M696.7044,5552.7062 C735.6588,5605.9936 788.9898,5682.2657 829.6338,5753 C865.3907,5815.2291 846.9104,5849.2436 898.6338,5899 C961.4324,5959.4104 1047.8123,6000.8885 1125.8326,6028.5394 " fill="none" id="ClientSession-Message" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1130.9593,6030.3408,1123.7943,6023.5834,1126.242,6028.6832,1121.1422,6031.131,1130.9593,6030.3408" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Edge to Vertex--><path d="M9687.9847,3929.0607 C9688.5433,4049.3256 9689.6317,4283.7085 9690.2248,4411.4092 " fill="none" id="Edge-Vertex" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9687.9242,3916.0282,9683.9521,3922.0467,9687.98,3928.0281,9691.952,3922.0095,9687.9242,3916.0282" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="9679.5185" y="3935.7711">2</text><!--link MainApplication to CommandlineArgument--><path d="M3061.1435,4587.6222 C3049.8642,4674.1259 3032.6762,4805.944 3020.84,4896.7193 " fill="none" id="MainApplication-CommandlineArgument" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3062.8323,4574.6702,3058.0901,4580.1026,3061.2807,4586.5695,3066.0229,4581.137,3062.8323,4574.6702" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MainFrameWindow to DebugTraceFunction--><path d="M2628.192,5204.8527 C2634.2477,5208.1524 2640.3974,5211.2132 2646.6338,5214 C2793.0684,5279.4359 3232.0423,5161.3269 3367.6338,5247 C3436.735,5290.6613 3470.3355,5385.7906 3484.6159,5441.1752 " fill="none" id="MainFrameWindow-DebugTraceFunction" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3485.8566,5446.0788,3487.5268,5436.3726,3484.6302,5441.2315,3479.7712,5438.3349,3485.8566,5446.0788" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MainFrameWindow to LogTextCtrl--><path d="M2383.8849,5214.1284 C2365.2918,5293.312 2345.8007,5376.3201 2333.4537,5428.9031 " fill="none" id="MainFrameWindow-LogTextCtrl" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2332.2814,5433.8956,2338.2329,5426.0483,2333.4244,5429.028,2330.4447,5424.2195,2332.2814,5433.8956" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MainFrameWindow to RobotWorldCanvas--><path d="M2241.0286,4790.4594 C2235.3138,4787.4119 2229.5136,4784.5822 2223.6338,4782 C2123.5838,4738.0614 336.1976,4797.9496 257.6338,4722 C-229.3955,4251.1757 159.6338,3878.4017 159.6338,3201 C159.6338,2377 159.6338,2377 159.6338,2377 C159.6338,1248.7327 9341.0431,917.1481 10944.2553,867.8488 " fill="none" id="MainFrameWindow-RobotWorldCanvas" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10949.5176,867.6871,10940.3989,863.9657,10944.52,867.8408,10940.6448,871.9619,10949.5176,867.6871" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ModelObject to ObjectId--><path d="M6646.9311,2394.7041 C5610.4768,2492.7952 685.6409,2983.5163 257.6338,3490 C10.3535,3782.6201 -12.1713,4942.0086 257.6338,5214 C297.6306,5254.3208 4293.8686,5225.992 4346.6338,5247 C4363.1357,5253.5701 4379.2051,5261.7629 4394.7228,5271.1178 " fill="none" id="ModelObject-ObjectId" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4399.0849,5273.7867,4393.4956,5265.6775,4394.8199,5271.1771,4389.3203,5272.5015,4399.0849,5273.7867" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Notifier to Observer--><path d="M4167.3693,5603.8412 C4166.3508,5653.8284 4166.9349,5710.0422 4169.1217,5752.8872 " fill="none" id="Notifier-Observer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4167.6807,5590.6035,4163.5406,5596.5077,4167.3984,5602.6002,4171.5384,5596.6959,4167.6807,5590.6035" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Observer to Notifier--><path d="M4190.7644,5752.8872 C4193.2078,5707.672 4193.7615,5647.5681 4192.4253,5595.6059 " fill="none" id="Observer-Notifier" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4192.2901,5590.6035,4188.5348,5599.7083,4192.4252,5595.6017,4196.5319,5599.4921,4192.2901,5590.6035" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotShape to RobotWorldCanvas--><path d="M11090.893,3720.3791 C11052.7824,3638.7677 11008.3987,3530.9117 10985.6338,3430 C10924.4099,3158.6071 10950.6338,3083.213 10950.6338,2805 C10950.6338,2377 10950.6338,2377 10950.6338,2377 C10950.6338,2093.3187 10931.9177,2020.1629 10969.6338,1739 C10972.0636,1720.887 10974.7115,1702.6035 10977.5526,1684.2027 " fill="none" id="RobotShape-RobotWorldCanvas" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10978.359,1679.0096,10973.0251,1687.289,10977.5916,1683.9504,10980.9303,1688.5169,10978.359,1679.0096" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorldCanvas to RobotShape--><path d="M10949.6152,1640.6315 C10944.0077,1673.7632 10938.9729,1706.6534 10934.6338,1739 C10896.9177,2020.1629 10915.6338,2093.3187 10915.6338,2377 C10915.6338,2377 10915.6338,2377 10915.6338,2805 C10915.6338,3083.213 10889.4099,3158.6071 10950.6338,3430 C10972.954,3528.9408 11016.0569,3634.5573 11057.9979,3715.5674 " fill="none" id="RobotWorldCanvas-RobotShape" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="11060.5028,3720.3791,11059.8949,3710.549,11058.1939,3715.9441,11052.7989,3714.2432,11060.5028,3720.3791" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotShape to RobotWorldCanvas--><path d="M11121.2832,3720.3791 C11087.7824,3638.7677 11043.3987,3530.9117 11020.6338,3430 C10959.4099,3158.6071 10985.6338,3083.213 10985.6338,2805 C10985.6338,2377 10985.6338,2377 10985.6338,2377 C10985.6338,2093.3187 10966.9177,2020.1629 11004.6338,1739 C11007.0636,1720.887 11009.7115,1702.6035 11012.5493,1684.2027 " fill="none" id="RobotShape-RobotWorldCanvas" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="11013.3547,1679.0096,11008.0224,1687.2901,11012.5883,1683.9505,11015.9278,1688.5164,11013.3547,1679.0096" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Shape to ShapeData--><path d="M11156.3467,2056.1678 C11152.584,2151.1253 11148.0592,2265.318 11145.5493,2328.6609 " fill="none" id="Shape-ShapeData" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="11145.3424,2333.881,11149.6957,2325.0465,11145.5404,2328.8849,11141.7019,2324.7297,11145.3424,2333.881" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ViewObject to ObjectId--><path d="M7834.7249,3935.3904 C7803.0459,4019.7718 7755.3235,4155.7273 7727.6338,4277 C7705.4289,4374.2515 7742.6614,4655.1357 7668.6338,4722 C7586.7594,4795.9518 5785.3554,4739.2797 5683.6338,4782 C5428.0178,4889.3519 5486.1079,5099.4538 5233.6338,5214 C5079.6582,5283.858 5009.1379,5178.3187 4854.6338,5247 C4839.2907,5253.8204 4824.2781,5261.9584 4809.706,5271.0463 " fill="none" id="ViewObject-ObjectId" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4805.1979,5273.8968,4814.9425,5272.4679,4809.424,5271.2247,4810.6672,5265.7061,4805.1979,5273.8968" style="stroke: #A80036; stroke-width: 1.0;"/><!--link WidgetDebugTraceFunction to LogTextCtrl--><path d="M2033.588,5041.0849 C2091.0795,5129.6949 2222.4608,5332.1889 2285.5519,5429.4293 " fill="none" id="WidgetDebugTraceFunction-LogTextCtrl" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2288.32,5433.6956,2286.7767,5423.9684,2285.5984,5429.5012,2280.0657,5428.3229,2288.32,5433.6956" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractActuator to AbstractCommand--><path d="M6847.3148,2886.6866 C6876.4662,2910.1996 6903.1414,2938.6832 6919.6338,2972 C7009.9387,3154.4278 6941.8199,3227.6571 6919.6338,3430 C6903.6214,3576.0379 6857.433,3745.4118 6836.3531,3817.7654 " fill="none" id="AbstractActuator-AbstractCommand" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6834.8795,3822.8055,6841.2444,3815.2896,6836.2826,3818.0064,6833.5659,3813.0446,6834.8795,3822.8055" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractSensor to AbstractStimulus--><path d="M6349.1991,4632.6675 C6403.6006,4672.8112 6453.5924,4722.4164 6484.6338,4782 C6605.4383,5013.8825 6441.561,5341.0455 6380.7325,5448.0975 " fill="none" id="AbstractSensor-AbstractStimulus" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6378.0892,5452.7249,6386.0265,5446.894,6380.5692,5448.3833,6379.0799,5442.926,6378.0892,5452.7249" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractSensor to AbstractPercept--><path d="M5874.3829,4632.6957 C5826.9152,4674.3101 5782.7421,4724.5969 5756.6338,4782 C5716.8886,4869.386 5731.9937,5121.216 5756.6338,5214 C5781.1187,5306.1993 5845.3792,5399.7539 5882.6978,5448.7027 " fill="none" id="AbstractSensor-AbstractPercept" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5885.7798,5452.7241,5883.4799,5443.1476,5882.7383,5448.7556,5877.1302,5448.014,5885.7798,5452.7241" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Client to ResponseHandler--><path d="M999.2558,3928.6761 C947.9768,4013.9477 852.1747,4149.8424 729.6338,4217 C561.5752,4309.1033 429.0338,4132.9522 302.6338,4277 C-112.4592,4750.0478 -68.8548,5178.5309 293.6338,5693 C318.1583,5727.8068 408.3488,5760.0455 492.4379,5783.5881 " fill="none" id="Client-ResponseHandler" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="497.4554,5784.9846,489.8575,5778.7178,492.6385,5783.6439,487.7124,5786.4249,497.4554,5784.9846" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Client to ClientSession--><path d="M998.7361,3928.5333 C947.1279,4013.3366 851.172,4148.4662 729.6338,4217 C587.1963,4297.3187 475.7065,4155.1693 366.6338,4277 C297.1609,4354.5992 296.8259,5119.0495 339.6338,5214 C377.0036,5296.8884 453.8627,5364.5387 521.0724,5411.3281 " fill="none" id="Client-ClientSession" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="525.4849,5414.3798,520.3581,5405.9705,521.3726,5411.5357,515.8075,5412.5502,525.4849,5414.3798" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Client to Message--><path d="M1123.5896,3928.6694 C1278.9396,4075.2218 1610.7303,4416.9042 1751.6338,4782 C1786.3186,4871.8719 1769.6338,4901.6672 1769.6338,4998 C1769.6338,4998 1769.6338,4998 1769.6338,5483.5 C1769.6338,5688.4464 1703.9793,5744.2282 1569.6338,5899 C1551.5197,5919.8683 1530.4844,5939.5693 1508.4387,5957.727 " fill="none" id="Client-Message" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1504.311,5961.0994,1513.8113,5958.5026,1508.183,5957.9359,1508.7497,5952.3075,1504.311,5961.0994" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Client to CommunicationService--><path d="M995.2077,3928.5518 C922.1203,4049.305 778.8329,4286.0407 701.7171,4413.4494 " fill="none" id="Client-CommunicationService" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="699.002,4417.9353,707.0842,4412.3069,701.591,4413.6578,700.2401,4408.1646,699.002,4417.9353" style="stroke: #A80036; stroke-width: 1.0;"/><!--link CommunicationService to RequestHandler--><path d="M531.8815,4581.0467 C470.3953,4631.0662 401.1452,4700.9949 367.6338,4782 C349.2847,4826.3543 334.5938,5179.1811 367.6338,5214 C415.8069,5264.7667 947.1691,5197.4911 996.6338,5247 C1031.7058,5282.1033 1012.3491,5643.9162 1019.6338,5693 C1024.0005,5722.4223 1032.0833,5754.9223 1039.0326,5779.9404 " fill="none" id="CommunicationService-RequestHandler" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1040.4059,5784.8411,1041.8287,5775.0956,1039.0566,5780.0266,1034.1256,5777.2545,1040.4059,5784.8411" style="stroke: #A80036; stroke-width: 1.0;"/><!--link LineShape to RectangleShape--><path d="M11535.8575,2638.2078 C11523.1416,2657.6796 11511.5566,2677.6797 11501.6338,2698 C11461.2185,2780.7648 11438.6162,2879.0967 11426.0264,2966.7694 " fill="none" id="LineShape-RectangleShape" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="11425.3231,2971.7303,11430.5471,2963.3811,11426.0251,2966.7798,11422.6263,2962.2578,11425.3231,2971.7303" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RequestHandler to Message--><path d="M1090.3125,5859.1519 C1114.92,5882.788 1148.4025,5914.9488 1182.1019,5947.318 " fill="none" id="RequestHandler-Message" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1185.786,5950.8567,1182.0662,5941.7373,1182.18,5947.393,1176.5243,5947.5069,1185.786,5950.8567" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ResponseHandler to Message--><path d="M748.7756,5859.1878 C781.0466,5871.8813 817.3969,5886.1196 850.6338,5899 C941.0855,5934.053 1041.5674,5972.5207 1126.0823,6004.7409 " fill="none" id="ResponseHandler-Message" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1130.8584,6006.5615,1123.8737,5999.6179,1126.1864,6004.7804,1121.0239,6007.0931,1130.8584,6006.5615" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to Message--><path d="M6263.8475,3908.6756 C6083.7602,3967.449 5837.6632,4079.8995 5719.6338,4277 C5673.3318,4354.3211 5754.6075,5834.5271 5691.6338,5899 C5543.601,6050.5571 2334.3157,6073.52 1509.5065,6076.9216 " fill="none" id="Robot-Message" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1504.3919,6076.9426,1513.4083,6080.9055,1509.3919,6076.922,1513.3754,6072.9056,1504.3919,6076.9426" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to Goal--><path d="M6466.7502,4217.0465 C6466.3129,4237.3269 6465.9343,4257.4172 6465.6338,4277 C6464.1166,4375.8772 6432.431,4628.8518 6465.6338,4722 C6477.1938,4754.4307 6497.0334,4752.4093 6514.6338,4782 C6644.1401,4999.7325 6741.177,5286.7264 6781.3358,5415.6614 " fill="none" id="Robot-Goal" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6782.8567,5420.5563,6784.0059,5410.7747,6781.373,5415.7815,6776.3662,5413.1486,6782.8567,5420.5563" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to AStar--><path d="M6693.4215,3499.1723 C6711.7431,3484.166 6731.3053,3470.8887 6752.1338,3460 C6816.3839,3426.4116 7992.0708,3428.0149 8057.1338,3460 C8138.2659,3499.8846 8203.8298,3573.0478 8252.977,3645.5634 " fill="none" id="Robot-AStar" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8255.8945,3649.8959,8254.1853,3640.1965,8253.1017,3645.7486,8247.5496,3644.6649,8255.8945,3649.8959" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to BoundedVector--><path d="M6618.7811,4217.0948 C6637.6283,4265.9917 6655.9895,4313.6276 6672.0999,4355.4239 " fill="none" id="Robot-BoundedVector" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6673.9524,4360.23,6674.4478,4350.3936,6672.1541,4355.5646,6666.9832,4353.2709,6673.9524,4360.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotShape to Robot--><path d="M10949.0087,3762.2021 C10713.3085,3664.9363 10316.5837,3517.2479 9958.1338,3460 C9870.1928,3445.955 6831.0556,3418.7416 6752.1338,3460 C6732.9325,3470.038 6714.8074,3482.106 6697.7383,3495.6871 " fill="none" id="RobotShape-Robot" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6693.4215,3499.1723,6702.9368,3496.631,6697.3118,3496.0314,6697.9114,3490.4064,6693.4215,3499.1723" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorld to ObjectId--><path d="M7011.1198,4701.8835 C6993.0863,4709.5576 6974.8612,4716.362 6956.6338,4722 C6657.6585,4814.4769 5847.0757,4684.7037 5549.6338,4782 C5258.0852,4877.3686 4982.9603,5101.1271 4804.7699,5270.4801 " fill="none" id="RobotWorld-ObjectId" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4801.1043,5273.9692,4810.3811,5270.6615,4804.726,5270.522,4804.8655,5264.8668,4801.1043,5273.9692" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorld to WayPoint--><path d="M7191.2589,4722.142 C7165.4095,4769.1709 7138.8575,4817.4781 7115.3408,4860.2631 " fill="none" id="RobotWorld-WayPoint" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7112.9288,4864.6514,7120.7694,4858.6911,7115.3372,4860.2697,7113.7586,4854.8376,7112.9288,4864.6514" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorld to Goal--><path d="M7011.0351,4692.1302 C6992.7758,4702.4921 6974.5494,4712.5264 6956.6338,4722 C6898.2311,4752.883 6857.4554,4727.1474 6820.6338,4782 C6688.562,4978.7456 6746.2089,5281.4641 6781.5294,5415.5581 " fill="none" id="RobotWorld-Goal" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6782.8803,5420.6466,6784.437,5410.9215,6781.5973,5415.814,6776.7048,5412.9743,6782.8803,5420.6466" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorld to Wall--><path d="M7381.074,4722.142 C7399.7638,4783.843 7419.12,4847.744 7434.4908,4898.4881 " fill="none" id="RobotWorld-Wall" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7435.9657,4903.3573,7437.1847,4893.5842,7434.5161,4898.572,7429.5283,4895.9035,7435.9657,4903.3573" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorldCanvas to Shape--><path d="M11166.3938,1692.3832 C11166.0972,1708.5656 11165.8125,1724.0963 11165.5419,1738.8592 " fill="none" id="RobotWorldCanvas-Shape" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="11166.6342,1679.2678,11162.5249,1685.1935,11166.4142,1691.2658,11170.5236,1685.3401,11166.6342,1679.2678" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorldCanvas to GoalShape--><path d="M11413.7279,988.0336 C11661.3359,1135.7777 12046.4768,1402.9211 12258.6338,1739 C12350.7009,1884.8438 12330.0421,1944.7611 12350.6338,2116 C12458.1338,3009.9591 12146.668,4087.5201 12045.3289,4406.3745 " fill="none" id="RobotWorldCanvas-GoalShape" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="12043.7056,4411.4735,12050.2473,4404.111,12045.2223,4406.7091,12042.6242,4401.6842,12043.7056,4411.4735" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorldCanvas to WallShape--><path d="M11413.7948,1032.9743 C11685.4002,1250.2138 12120.3523,1652.1718 12296.6338,2116 C12337.8446,2224.4328 12362.9382,2542.8174 12296.6338,2638 C12278.6403,2663.8304 12232.1621,2688.9065 12175.5023,2711.4394 " fill="none" id="RobotWorldCanvas-WallShape" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="12170.7001,2713.3337,12180.5401,2713.752,12175.3513,2711.4989,12177.6044,2706.3101,12170.7001,2713.3337" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorldCanvas to WayPointShape--><path d="M11413.8462,1012.0274 C11639.307,1169.3319 11977.3127,1434.99 12186.6338,1739 C12287.9086,1886.0876 12294.2568,1940.1966 12325.6338,2116 C12366.3965,2344.3909 12370.6968,2410.4185 12325.6338,2638 C12240.0359,3070.2956 11998.5757,3541.9153 11885.0459,3747.6445 " fill="none" id="RobotWorldCanvas-WayPointShape" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="11882.554,3752.1548,11890.4076,3746.2116,11884.972,3747.7784,11883.4053,3742.3428,11882.554,3752.1548" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotWorldCanvas to RobotWorld--><path d="M10949.4585,908.0141 C10164.5304,1073.5194 7658.6338,1658.187 7658.6338,2377 C7658.6338,2377 7658.6338,2377 7658.6338,2805 C7658.6338,3339.1333 7492.001,3949.2782 7390.3475,4271.799 " fill="none" id="RobotWorldCanvas-RobotWorld" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7388.7064,4276.9987,7395.2299,4269.6201,7390.2114,4272.2306,7387.6009,4267.2121,7388.7064,4276.9987" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Server to RequestHandler--><path d="M718.7079,5060.7186 C773.3511,5107.8128 853.2526,5171.28 931.6338,5214 C969.7762,5234.7887 997.7781,5212.0931 1023.6338,5247 C1085.8407,5330.9832 1065.0947,5661.5105 1055.4156,5779.6984 " fill="none" id="Server-RequestHandler" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1054.9916,5784.8271,1059.7196,5776.1873,1055.4036,5779.8441,1051.7468,5775.5281,1054.9916,5784.8271" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Server to CommunicationService--><path d="M658.9629,4935.1635 C664.0848,4846.9888 664.4895,4686.198 660.1769,4586.5484 " fill="none" id="Server-CommunicationService" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="659.9409,4581.2589,656.3463,4590.4283,660.1639,4586.2539,664.3383,4590.0715,659.9409,4581.2589" style="stroke: #A80036; stroke-width: 1.0;"/><!--link CommunicationService to Server--><path d="M639.8994,4581.2589 C635.6712,4678.5809 635.8894,4839.311 640.5538,4930.0907 " fill="none" id="CommunicationService-Server" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="640.8231,4935.1635,644.3402,4925.9641,640.558,4930.1705,636.3515,4926.3883,640.8231,4935.1635" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Server to ServerSession--><path d="M715.1178,5060.5936 C769.2066,5109.0587 850.0847,5174.4019 931.6338,5214 C984.8693,5239.8497 1007.7097,5220.5188 1060.6338,5247 C1148.1957,5290.8127 1233.7323,5364.0855 1289.7594,5417.4819 " fill="none" id="Server-ServerSession" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1293.4068,5420.9698,1289.6664,5411.8589,1289.793,5417.5143,1284.1376,5417.6409,1293.4068,5420.9698" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Session to Message--><path d="M1549.9995,5131.296 C1585.9209,5164.4636 1618.2215,5203.2496 1638.6338,5247 C1722.4439,5426.6327 1706.1971,5506.6475 1638.6338,5693 C1603.619,5789.5779 1532.5624,5878.9011 1466.185,5947.0987 " fill="none" id="Session-Message" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1462.6267,5950.739,1471.7783,5947.0991,1466.1218,5947.1635,1466.0574,5941.507,1462.6267,5950.739" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ServerSession to RequestHandler--><path d="M1298.352,5546.3759 C1237.0593,5614.8498 1140.799,5722.3881 1088.4791,5780.8379 " fill="none" id="ServerSession-RequestHandler" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1085.0973,5784.616,1094.0802,5780.5778,1088.432,5780.8904,1088.1193,5775.2422,1085.0973,5784.616" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientSession to ResponseHandler--><path d="M646.6816,5552.8174 C648.6951,5620.9729 651.7036,5722.8124 653.384,5779.6913 " fill="none" id="ClientSession-ResponseHandler" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="653.5324,5784.7162,657.2648,5775.602,653.3847,5779.7184,649.2683,5775.8383,653.5324,5784.7162" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Shape2DUtils to BoundedVector--><path d="M10115.1839,4372.8654 C10040.322,4323.2833 9948.1176,4272.289 9856.1338,4247 C9779.9334,4226.0503 7084.989,4218.8787 7011.1338,4247 C6950.4731,4270.0974 6894.5291,4312.7911 6848.6499,4356.5859 " fill="none" id="Shape2DUtils-BoundedVector" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6844.8045,4360.2816,6854.0652,4356.9291,6848.4095,4356.8169,6848.5217,4351.1612,6844.8045,4360.2816" style="stroke: #A80036; stroke-width: 1.0;"/><!--link SteeringActuator to AbstractCommand--><path d="M6708.8838,3244.0647 C6732.0533,3365.0095 6797.4161,3706.2033 6818.7821,3817.734 " fill="none" id="SteeringActuator-AbstractCommand" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6819.7659,3822.8696,6822.0012,3813.2778,6818.8252,3817.9589,6814.144,3814.7829,6819.7659,3822.8696" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ViewObject to ModelObject--><path d="M7866.24,3771.6834 C7860.9759,3566.1947 7820.0265,3021.7384 7542.6338,2698 C7411.5967,2545.0696 7192.6288,2461.2166 7033.439,2417.9552 " fill="none" id="ViewObject-ModelObject" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7028.2745,2416.5602,7035.9198,2422.769,7033.1015,2417.8642,7038.0062,2415.0458,7028.2745,2416.5602" style="stroke: #A80036; stroke-width: 1.0;"/><!--link WallShape to Wall--><path d="M11915.0199,2912.1416 C12117.0639,3234.176 12653.9484,4203.1082 12164.6338,4722 C12007.5296,4888.6006 8523.0904,4975.0352 7657.7893,4993.9772 " fill="none" id="WallShape-Wall" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7652.7394,4994.0876,7661.8248,4997.8897,7657.7382,4993.9782,7661.6497,4989.8916,7652.7394,4994.0876" style="stroke: #A80036; stroke-width: 1.0;"/><!--link WallShape to RectangleShape--><path d="M11727.1872,2912.1633 C11707.7279,2929.9188 11686.905,2948.9185 11665.5774,2968.3787 " fill="none" id="WallShape-RectangleShape" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="11661.871,2971.7606,11671.2155,2968.6492,11665.5645,2968.3905,11665.8233,2962.7395,11661.871,2971.7606" style="stroke: #A80036; stroke-width: 1.0;"/><!--link WayPointShape to WayPoint--><path d="M11761.0613,3954.7765 C11633.4948,4147.308 11325.393,4561.2368 10941.6338,4722 C10564.2449,4880.0946 7637.0936,4624.0744 7259.6338,4782 C7217.7594,4799.5199 7179.4863,4829.1349 7147.0236,4860.9093 " fill="none" id="WayPointShape-WayPoint" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7143.0937,4864.7943,7152.3062,4861.3116,7146.6495,4861.2791,7146.6819,4855.6223,7143.0937,4864.7943" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AStar to Wall--><path d="M8225.3847,4057.033 C8102.9685,4237.0212 7914.3594,4504.0967 7731.6338,4722 C7679.9692,4783.6109 7617.7241,4848.4282 7566.3346,4899.7562 " fill="none" id="AStar-Wall" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7562.6536,4903.4283,7571.8503,4899.9039,7566.1934,4899.8971,7566.2003,4894.2402,7562.6536,4903.4283" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AStar to RobotWorld--><path d="M8242.9876,4057.2589 C8197.9842,4117.9826 8141.2025,4178.5272 8074.6338,4217 C7913.6616,4310.0326 7834.8305,4212.0182 7660.6338,4277 C7647.4215,4281.9287 7634.1872,4287.4169 7621.0127,4293.3493 " fill="none" id="AStar-RobotWorld" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7616.1617,4295.5548,7626.0102,4295.4711,7620.7133,4293.4853,7622.6991,4288.1885,7616.1617,4295.5548" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AStar to Shape2DUtils--><path d="M8473.9568,4057.2174 C8519.4052,4119.5026 8577.7621,4181.0067 8647.6338,4217 C8890.1216,4341.9137 9611.0828,4203.0358 9873.6338,4277 C9946.9638,4297.658 10021.6783,4333.4338 10086.7396,4370.3326 " fill="none" id="AStar-Shape2DUtils" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10091.4071,4372.991,10085.5663,4365.061,10087.0624,4370.5164,10081.607,4372.0125,10091.4071,4372.991" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Astar to Vertex--><path d="M9925.7124,3877.7648 C9925.1602,3937.4759 9919.1471,4095.5142 9873.6338,4217 C9847.9589,4285.5326 9803.6083,4354.621 9764.9993,4407.3199 " fill="none" id="Astar-Vertex" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="9761.9939,4411.4049,9770.5492,4406.5257,9764.9569,4407.3774,9764.1052,4401.785,9761.9939,4411.4049" style="stroke: #A80036; stroke-width: 1.0;"/><!--link BoundedVector to BoundedVector--><path d="M6921.422,4421.2406 C6942.5307,4436.2094 6956.1338,4462.2959 6956.1338,4499.5 C6956.1338,4534.0882 6944.3764,4559.0672 6925.7612,4574.437 " fill="none" id="BoundedVector-BoundedVector" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6921.422,4577.7594,6930.9996,4575.4639,6925.3919,4574.7197,6926.1362,4569.112,6921.422,4577.7594" style="stroke: #A80036; stroke-width: 1.0;"/><!--link LaserDistanceSensor to AbstractStimulus--><path d="M6154.6229,5067.0447 C6206.303,5172.0267 6302.7912,5368.031 6342.195,5448.0751 " fill="none" id="LaserDistanceSensor-AbstractStimulus" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6344.4811,5452.7189,6344.095,5442.8776,6342.2728,5448.233,6336.9175,5446.4108,6344.4811,5452.7189" style="stroke: #A80036; stroke-width: 1.0;"/><!--link LaserDistanceSensor to AbstractPercept--><path d="M6090.769,5067.0447 C6045.3597,5172.0267 5960.5792,5368.031 5925.9567,5448.0751 " fill="none" id="LaserDistanceSensor-AbstractPercept" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5923.948,5452.7189,5931.1925,5446.0468,5925.9332,5448.1299,5923.8501,5442.8705,5923.948,5452.7189" style="stroke: #A80036; stroke-width: 1.0;"/><!--link LaserDistanceSensor to DistanceStimulus--><path d="M6127.0519,5067.2142 C6140.7917,5195.2538 6179.7052,5475.8311 6272.6338,5693 C6284.9893,5721.874 6304.0665,5751.1286 6321.2116,5774.4626 " fill="none" id="LaserDistanceSensor-DistanceStimulus" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6324.3885,5778.7492,6322.2434,5769.1368,6321.4114,5774.7321,6315.8161,5773.9001,6324.3885,5778.7492" style="stroke: #A80036; stroke-width: 1.0;"/><!--link LineShape to Shape2DUtils--><path d="M12152.8476,2638.193 C12166.5163,2657.1821 12178.6211,2677.1266 12188.6338,2698 C12394.1714,3126.4816 12989.1504,3318.5272 11994.6338,4217 C11887.5026,4313.7853 10835.8307,4238.6758 10696.6338,4277 C10621.7796,4297.6091 10545.3216,4333.4633 10478.7109,4370.4466 " fill="none" id="LineShape-Shape2DUtils" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10474.3378,4372.8842,10484.1465,4371.9962,10478.7052,4370.4498,10480.2515,4365.0084,10474.3378,4372.8842" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Logger to MainFrameWindow--><path d="M2523.7794,4549.1206 C2513.1339,4602.7245 2495.4283,4691.8782 2478.5895,4776.6677 " fill="none" id="Logger-MainFrameWindow" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2477.5843,4781.7293,2483.2611,4773.6811,2478.5585,4776.8251,2475.4144,4772.1224,2477.5843,4781.7293" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RectangleShape to Shape2DUtils--><path d="M11002.5531,3428.5592 C10977.5804,3448.091 10953.675,3468.6081 10931.6338,3490 C10656.2537,3757.2693 10440.3989,4161.9101 10340.7823,4368.3347 " fill="none" id="RectangleShape-Shape2DUtils" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10338.5963,4372.8714,10346.1065,4366.4999,10340.7667,4368.367,10338.8995,4363.0272,10338.5963,4372.8714" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to RobotWorld--><path d="M6693.5355,4184.2176 C6706.6993,4196.0275 6720.4048,4207.0425 6734.6338,4217 C6818.3729,4275.6003 6862.9245,4236.1984 6956.6338,4277 C6973.1593,4284.1953 6989.8163,4292.0711 7006.4261,4300.4294 " fill="none" id="Robot-RobotWorld" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7011.1095,4302.7995,7004.8856,4295.1665,7006.6483,4300.5417,7001.2731,4302.3044,7011.1095,4302.7995" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to CommunicationService--><path d="M6263.9118,3865.0207 C5597.4893,3902.4602 3506.1851,4032.6265 1789.6338,4277 C1490.2642,4319.6192 1150.4569,4388.6532 920.3061,4438.5327 " fill="none" id="Robot-CommunicationService" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="915.2297,4439.6336,924.8731,4441.635,920.1161,4438.5738,923.1773,4433.8168,915.2297,4439.6336" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to MainApplication--><path d="M6263.9599,3894.2162 C5652.6419,4010.162 3907.0695,4341.2365 3291.0947,4458.0656 " fill="none" id="Robot-MainApplication" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3286.1433,4459.0047,3295.731,4461.2576,3291.0557,4458.073,3294.2403,4453.3977,3286.1433,4459.0047" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to Logger--><path d="M6264.0918,3864.2792 C5582.5162,3900.729 3474.3082,4031.0543 2841.6338,4277 C2742.5165,4315.5308 2646.0934,4393.7679 2588.277,4446.4231 " fill="none" id="Robot-Logger" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2584.5249,4449.8538,2593.8661,4446.7326,2588.2149,4446.4798,2588.4677,4440.8286,2584.5249,4449.8538" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to Vertex--><path d="M6693.1547,4190.3767 C6706.3482,4200.3003 6720.1726,4209.26 6734.6338,4217 C6849.2382,4278.3393 8945.8857,4252.9777 9073.6338,4277 C9234.8084,4307.3079 9409.9178,4373.9369 9532.2698,4426.4266 " fill="none" id="Robot-Vertex" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="9536.9633,4428.4443,9530.2747,4421.215,9532.3698,4426.4696,9527.1152,4428.5647,9536.9633,4428.4443" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to AbstractSensor--><path d="M6263.9072,4202.0261 C6228.9805,4258.7162 6194.7039,4314.3511 6165.4171,4361.887 " fill="none" id="Robot-AbstractSensor" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6162.7791,4366.1687,6170.9055,4360.6043,6165.4018,4361.9118,6164.0944,4356.4081,6162.7791,4366.1687" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to Wall--><path d="M6472.3808,4217.2934 C6472.3878,4438.2152 6480.7311,4684.7451 6516.6338,4722 C6631.4268,4841.1163 7109.3097,4710.8072 7258.6338,4782 C7313.4608,4808.1396 7361.2666,4855.6242 7396.987,4899.4278 " fill="none" id="Robot-Wall" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7400.1881,4903.3831,7397.6355,4893.8708,7397.0426,4899.4965,7391.4169,4898.9036,7400.1881,4903.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Robot to Shape2DUtils--><path d="M6693.5576,4190.8447 C6706.6279,4200.5967 6720.3178,4209.3977 6734.6338,4217 C6888.6815,4298.8041 9705.0621,4232.21 9873.6338,4277 C9948.0234,4296.7655 10023.6002,4332.7882 10089.1078,4370.173 " fill="none" id="Robot-Shape2DUtils" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10093.8068,4372.8668,10087.9883,4364.9204,10089.4691,4370.38,10084.0095,4371.8608,10093.8068,4372.8668" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotShape to BoundedVector--><path d="M10948.8868,3937.447 C10715.6364,4026.1624 10325.54,4160.8499 9975.6338,4217 C9648.4198,4269.5087 7303.9825,4160.7677 6993.6338,4277 C6946.4422,4294.6743 6901.6744,4324.5762 6862.7903,4356.8207 " fill="none" id="RobotShape-BoundedVector" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6858.5634,4360.3542,6868.034,4357.6508,6862.3995,4357.1473,6862.903,4351.5129,6858.5634,4360.3542" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotShape to RobotWorld--><path d="M10949.0896,3936.9618 C10715.8153,4025.3395 10325.5084,4159.8148 9975.6338,4217 C9721.6948,4258.5051 7906.5986,4201.4416 7660.6338,4277 C7647.3823,4281.0708 7634.1494,4285.7994 7621.0082,4291.0632 " fill="none" id="RobotShape-RobotWorld" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7616.1709,4293.0264,7626.0145,4293.3482,7620.8039,4291.1461,7623.006,4285.9354,7616.1709,4293.0264" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotShape to Vertex--><path d="M10948.9084,3914.9096 C10606.5047,4016.2461 9956.2716,4213.5941 9865.6338,4277 C9817.065,4310.9765 9775.417,4362.3252 9744.9492,4407.1354 " fill="none" id="RobotShape-Vertex" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="9742.0357,4411.4507,9750.3869,4406.2299,9744.8335,4407.3068,9743.7566,4401.7534,9742.0357,4411.4507" style="stroke: #A80036; stroke-width: 1.0;"/><!--link RobotShape to Shape2DUtils--><path d="M10977.7763,3986.5683 C10825.2922,4098.7605 10608.3637,4258.3685 10457.1265,4369.6432 " fill="none" id="RobotShape-Shape2DUtils" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10452.6713,4372.9212,10462.2911,4370.8093,10456.6986,4369.958,10457.5499,4364.3656,10452.6713,4372.9212" style="stroke: #A80036; stroke-width: 1.0;"/><!--link VertexEqualPointCompare to VertexLessCostCompare--><!--link VertexEqualPointCompare to VertexLessIdCompare--><!--link NotificationFunctionTypeTraits to NotificationFunctionTypeTraitsTracing--><!--link NotificationFunctionTypeTraits to NotificationHandler--><!--
@startuml

package PathAlgorithm {
class AStar {
	+getClosedSet() : ClosedSet {query}
	#getCS() : ClosedSet&
	#getCS() : ClosedSet& {query}
	+findInClosedSet(const Vertex& aVertex) : ClosedSet::iterator
	+getOpenSet() : OpenSet {query}
	#getOS() : OpenSet&
	#getOS() : OpenSet& {query}
	+findInOpenSet(const Vertex& aVertex) : OpenSet::iterator
	+search(const Point& aStartPoint, const Point& aGoalPoint, const Size& aRobotSize) : Path
	+search(Vertex aStart, const Vertex& aGoal, const Size& aRobotSize) : Path
	-closedSet : PathAlgorithm::ClosedSet
	-openSet : PathAlgorithm::OpenSet
	-predecessorMap : PathAlgorithm::VertexMap
	+getPredecessorMap() : VertexMap {query}
	#getPM() : VertexMap&
	#getPM() : VertexMap& {query}
	+findRemoveClosedSet(const Vertex& aVertex) : bool
	+findRemoveInOpenSet(const Vertex& aVertex) : bool
	-closedSetMutex : mutable std::recursive_mutex
	-openSetMutex : mutable std::recursive_mutex
	-predecessorMapMutex : mutable std::recursive_mutex
	+addToClosedSet(const Vertex& aVertex) : void
	+addToOpenSet(const Vertex& aVertex) : void
	+removeFirstFromOpenSet() : void
	+removeFromClosedSet(const Vertex& aVertex) : void
	+removeFromClosedSet(ClosedSet::iterator& i) : void
	+removeFromOpenSet(const Vertex& aVertex) : void
	+removeFromOpenSet(OpenSet::iterator& i) : void
}

class Vertex {
	+Vertex(int anX, int anY)
	+Vertex(const Point& aPoint)
	+asPoint() : Point {query}
	+equalPoint(const Vertex& aVertex) : bool {query}
	+lessCost(const Vertex& aVertex) : bool {query}
	+lessId(const Vertex& aVertex) : bool {query}
	+actualCost : double
	+heuristicCost : double
	+x : int
	+y : int
}

class Edge {
	+Edge(const Vertex& aVertex1, const Vertex& aVertex2)
	+Edge(const Edge& anEdge)
	+vertex1 : Vertex
	+vertex2 : Vertex
	+otherSide(const Vertex& aVertex) : Vertex& {query}
	+thisSide(const Vertex& aVertex) : Vertex& {query}
}
class VertexEqualPointCompare {
	+operator()(const Vertex& lhs, const Vertex& rhs) : bool {query}
}

class VertexLessCostCompare {
	+operator()(const Vertex& lhs, const Vertex& rhs) : bool {query}
}

class VertexLessIdCompare {
	+operator()(const Vertex& lhs, const Vertex& rhs) : bool {query}
}

class ViewObject {
	+ViewObject()
	+ViewObject(model::ModelObjectPtr aModelObject)
	+~ViewObject()
	-objectId : Base::ObjectId
	+getObjectId() : Base::ObjectId& {query}
	+getModelObject() : model::ModelObjectPtr {query}
	-modelObject : model::ModelObjectPtr
	#rebindModelObject(model::ModelObjectPtr aModelObject) : void
	+setModelObject(model::ModelObjectPtr aModelObject) : void
}
}

package model{
abstract class AbstractActuator {
	+AbstractActuator()
	+AbstractActuator(AbstractAgent* anAgent)
	+~AbstractActuator()
	#agent : AbstractAgent*
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+attachAgent(AbstractAgent* anAgent) : void
	+detachAgent() : void
	+{abstract} handleCommand(AbstractCommand& anAbstractCommand) : void
}

abstract class AbstractAgent {
	+AbstractAgent()
	+~AbstractAgent()
	#perceptQueue : Base::Queue< std::shared_ptr< AbstractPercept> >
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	#actuators : std::vector< std::shared_ptr< AbstractActuator> >
	#sensors : std::vector< std::shared_ptr< AbstractSensor> >
	+addPercept(std::shared_ptr< AbstractPercept> anAbstractPercept) : void
	+attachActuator(std::shared_ptr< AbstractActuator> anActuator, bool attachActuatorToAgent) : void
	+attachSensor(std::shared_ptr< AbstractSensor> aSensor, bool attachSensorToAgent) : void
	+{abstract} startActing() : void
	+{abstract} stopActing() : void
}

class AbstractCommand {
	+~AbstractCommand()
}

class AbstractPercept {
	+~AbstractPercept()
}

abstract class AbstractSensor {
	+AbstractSensor()
	+AbstractSensor(AbstractAgent* anAgent)
	+~AbstractSensor()
	#agent : AbstractAgent*
	#running : bool
	#sensorMutex : mutable std::recursive_mutex
	+{abstract} getPerceptFor(std::shared_ptr< AbstractStimulus> anAbstractPercepts) : std::shared_ptr<AbstractPercept> {query}
	+{abstract} getStimulus() : std::shared_ptr<AbstractStimulus> {query}
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	#sensorThread : std::thread
	+attachAgent(AbstractAgent* anAgent) : void
	+detachAgent() : void
	+run(unsigned long aSleepTime) : void
	+sendPercept(std::shared_ptr< AbstractPercept> anAbstractPercept) : void
	+setOff() : void
	+setOn(unsigned long aSleepTime) : void
}

class AbstractStimulus {
	+~AbstractStimulus()
}

class BoundedVector {
	+BoundedVector()
	+BoundedVector(float anX, float anY)
	+BoundedVector(const Point& aPoint1, const Point& aPoint2)
	+BoundedVector(const BoundedVector& aPolarCoord)
	+~BoundedVector()
	+getNormalised() : BoundedVector
	+operator-() : BoundedVector
	+operator*=(float aScalar) : BoundedVector&
	+operator+=(const BoundedVector& aVector) : BoundedVector&
	+operator-=(const BoundedVector& aVector) : BoundedVector&
	+operator/=(float aScalar) : BoundedVector&
	+getMagnitude() : float
	+x : float
	+y : float
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+normalise() : void
	+reverse() : void
}

class Robot {
	+Robot()
	+Robot(const std::string& aName)
	+Robot(const std::string& aName, const Point& aPosition)
	+~Robot()
	-front : BoundedVector
	+getFront() : BoundedVector {query}
	-goal : model::GoalPtr
	-astar : PathAlgorithm::AStar
	+getOpenSet() : PathAlgorithm::OpenSet {query}
	+getPath() : PathAlgorithm::Path {query}
	-path : PathAlgorithm::Path
	+getBackLeft() : Point {query}
	+getBackRight() : Point {query}
	+getFrontLeft() : Point {query}
	+getFrontRight() : Point {query}
	+getPosition() : Point {query}
	-position : Point
	+getRegion() : Region {query}
	+getSize() : Size {query}
	-size : Size
	-acting : bool
	#arrived(model::GoalPtr aGoal) : bool
	#collision() : bool
	-communicating : bool
	-driving : bool
	+intersects(const Region& aRegion) : bool {query}
	+isActing() : bool {query}
	+isCommunicating() : bool {query}
	+isDriving() : bool {query}
	+getSpeed() : float {query}
	-speed : float
	-robotMutex : mutable std::recursive_mutex
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getName() : std::string {query}
	-name : std::string
	-robotThread : std::thread
	#calculateRoute(model::GoalPtr aGoal) : void
	#drive() : void
	+handleNotification() : void
	+handleRequest(Messaging::Message& aMessage) : void
	+handleResponse(const Messaging::Message& aMessage) : void
	+setFront(const BoundedVector& aVector, bool aNotifyObservers) : void
	+setName(const std::string& aName, bool aNotifyObservers) : void
	+setPosition(const Point& aPosition, bool aNotifyObservers) : void
	+setSize(const Size& aSize, bool aNotifyObservers) : void
	+setSpeed(float aNewSpeed, bool aNotifyObservers) : void
	+startActing() : void
	+startCommunicating() : void
	+startDriving() : void
	+stopActing() : void
	+stopCommunicating() : void
	+stopDriving() : void
}

class LaserDistanceSensor {
	+LaserDistanceSensor()
	+LaserDistanceSensor(Robot* aRobot)
	+~LaserDistanceSensor()
	+getPerceptFor(std::shared_ptr< AbstractStimulus> anAbstractStimulus) : std::shared_ptr<AbstractPercept> {query}
	+getStimulus() : std::shared_ptr<AbstractStimulus> {query}
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
}

class ModelObject {
	+ModelObject()
	+~ModelObject()
	-objectId : Base::ObjectId
	+getObjectId() : Base::ObjectId& {query}
	+operator<(const ModelObject& aModelObject) : bool {query}
	+operator==(const ModelObject& aModelObject) : bool {query}
	+toPtr() : std::shared_ptr<DestinationType>
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
}

class RobotWorld {
	#RobotWorld()
	#~RobotWorld()
	+getGoal(const std::string& aName) : GoalPtr {query}
	+getGoal(const Base::ObjectId& anObjectId) : GoalPtr {query}
	+newGoal(const std::string& aName, const Point& aPosition, bool aNotifyObservers) : GoalPtr
	+getRobot(const std::string& aName) : RobotPtr {query}
	+getRobot(const Base::ObjectId& anObjectId) : RobotPtr {query}
	+newRobot(const std::string& aName, const Point& aPosition, bool aNotifyObservers) : RobotPtr
	+{static} getRobotWorld() : RobotWorld&
	+getWall(const Base::ObjectId& anObjectId) : WallPtr {query}
	+newWall(const Point& aPoint1, const Point& aPoint2, bool aNotifyObservers) : WallPtr
	+getWayPoint(const std::string& aName) : WayPointPtr {query}
	+getWayPoint(const Base::ObjectId& anObjectId) : WayPointPtr {query}
	+newWayPoint(const std::string& aName, const Point& aPosition, bool aNotifyObservers) : WayPointPtr
	-goals : mutable std::vector< GoalPtr>
	-robots : mutable std::vector< RobotPtr>
	-walls : mutable std::vector< WallPtr>
	-wayPoints : mutable std::vector< WayPointPtr>
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getGoals() : std::vector<GoalPtr>& {query}
	+getRobots() : std::vector<RobotPtr>& {query}
	+getWalls() : std::vector<WallPtr>& {query}
	+getWayPoints() : std::vector<WayPointPtr>& {query}
	+deleteGoal(model::GoalPtr aGoal, bool aNotifyObservers) : void
	+deleteRobot(model::RobotPtr aRobot, bool aNotifyObservers) : void
	+deleteWall(model::WallPtr aWall, bool aNotifyObservers) : void
	+deleteWayPoint(model::WayPointPtr aWayPoint, bool aNotifyObservers) : void
	+populate(int aNumberOfWalls) : void
	+unpopulate(bool aNotifyObservers) : void
	+unpopulate(const std::vector<Base::ObjectId>& aKeepObjects, bool aNotifyObservers) : void
}

class SteeringActuator {
	+SteeringActuator()
	+~SteeringActuator()
	+handleCommand(AbstractCommand& anAbstractCommand) : void
}

class Wall {
	+Wall()
	+Wall(const Point& aPoint1, const Point& aPoint2)
	+~Wall()
	+getPoint1() : Point {query}
	+getPoint2() : Point {query}
	-point1 : Point
	-point2 : Point
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+setPoint1(const Point& aPoint1, bool aNotifyObservers) : void
	+setPoint2(const Point& aPoint2, bool aNotifyObservers) : void
}

class WayPoint {
	+WayPoint()
	+WayPoint(const std::string& aName)
	+WayPoint(const std::string& aName, const Point& aPosition)
	+~WayPoint()
	+getPosition() : Point {query}
	-position : Point
	+getRegion() : Region {query}
	+getSize() : Size {query}
	-size : Size
	+intersects(const Region& aRegion) : bool {query}
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getName() : std::string {query}
	-name : std::string
	+setName(const std::string& aName, bool aNotifyObservers) : void
	+setPosition(const Point& aPosition, bool aNotifyObservers) : void
	+setSize(const Size& aSize, bool aNotifyObservers) : void
}

class DistancePercept {
	+DistancePercept(const DistanceStimulus& aDistanceStimulus)
	+DistancePercept(double anAngle, double aDistance)
	+angle : double
	+distance : double
}

class DistanceStimulus {
	+DistanceStimulus(double anAngle, double aDistance)
	+angle : double
	+distance : double
}

class Goal {
	+Goal()
	+Goal(const std::string& aName)
	+Goal(const std::string& aName, const Point& aPosition)
	+~Goal()
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
}
}

package Messaging{
class Client {
	+Client(const std::string& aHost, const std::string& aPort, ResponseHandlerPtr aResponseHandler)
	+~Client()
	-responseHandler : ResponseHandlerPtr
	-io_service : boost::asio::io_service&
	-host : std::string
	-port : std::string
	+dispatchMessage(Message& aMessage) : void
	+handleConnect(ClientSession* aSession, const boost::system::error_code& error) : void
}

class ClientSession {
	+ClientSession(Message aMessage, boost::asio::io_service& io_service, ResponseHandlerPtr aResponseHandler)
	+~ClientSession()
	-message : Message
	-responseHandler : ResponseHandlerPtr
	+handleMessageRead(Message& aMessage) : void
	+handleMessageWritten(Message& UNUSEDPARAM(aMessage)) : void
	+start() : void
}

class CommunicationService {
	-CommunicationService()
	-~CommunicationService()
	+{static} getCommunicationService() : CommunicationService&
	-io_service : boost::asio::io_service
	+getIOService() : boost::asio::io_service&
	-requestHandlerThread : std::thread
	+runRequestHandler(RequestHandlerPtr aRequestHandler, short aPort) : void
	+runRequestHandler(RequestHandlerPtr aRequestHandler, const std::string& aPort) : void
	-runRequestHandlerWorker(RequestHandlerPtr aRequestHandler, short aPort) : void
}

class Message {
	+Message()
	+Message(char aMessageType)
	+Message(char aMessageType, const std::string& aMessage)
	+Message(const Message& aMessage)
	+~Message()
	+getBody() : MessageBody {query}
	+message : MessageBody
	+getHeader() : MessageHeader {query}
	+getMessageType() : char {query}
	+messageType : char
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+length() : unsigned long {query}
	+setBody(const std::string& aBody) : void
	+setHeader(const MessageHeader& aHeader) : void
	+setMessageType(char aMessageType) : void
}

class Message::MessageHeader {
	+MessageHeader()
	+MessageHeader(char aMessageType, unsigned long aMessageLength)
	+MessageHeader(const std::string& aMessageHeaderBuffer)
	+getMessageType() : char {query}
	+messageType : char
	+{static} magicNumber1 : static const char
	+{static} magicNumber2 : static const char
	+{static} magicNumber3 : static const char
	+{static} magicNumber4 : static const char
	+{static} majorVersion : static const char
	+{static} minorVersion : static const char
	+asString() : std::string {query}
	+toString() : std::string {query}
	+getHeaderLength() : unsigned long {query}
	+getMessageLength() : unsigned long {query}
	+messageLength : unsigned long
	+fromString(const std::string& aString) : void
}

abstract class MessageHandler {
}

abstract class RequestHandler {
	+~RequestHandler()
	+{abstract} handleRequest(Message& aMessage) : void
}

abstract class ResponseHandler {
	+~ResponseHandler()
	+{abstract} handleResponse(const Message& aMessage) : void
}


class Server {
	+Server(short port, RequestHandlerPtr aRequestHandler)
	+~Server()
	-requestHandler : RequestHandlerPtr
	-io_service : boost::asio::io_service&
	-acceptor : boost::asio::ip::tcp::acceptor
	+handleAccept(ServerSession* aSession, const boost::system::error_code& error) : void
}

class ServerSession {
	+ServerSession(boost::asio::io_service& io_service, RequestHandlerPtr aRequestHandler)
	+~ServerSession()
	-requestHandler : RequestHandlerPtr
	+handleMessageRead(Message& aMessage) : void
	+handleMessageWritten(Message& UNUSEDPARAM(aMessage)) : void
	+start() : void
}

abstract class Session {
	+Session(boost::asio::io_service& io_service)
	+~Session()
	#socket : boost::asio::ip::tcp::socket
	+getSocket() : boost::asio::ip::tcp::socket&
	#bodyBuffer : std::vector< char>
	#headerBuffer : std::vector< char>
	#handleBodyRead(Message& aMessage, const boost::system::error_code& error, size_t bytes_transferred) : void
	#handleBodyWritten(Message& aMessage, const boost::system::error_code& error) : void
	#handleHeaderRead(Message& aMessage, const boost::system::error_code& error, size_t UNUSEDPARAM(bytes_transferred)) : void
	#handleHeaderWritten(Message& aMessage, const boost::system::error_code& error) : void
	+{abstract} handleMessageRead(Message& aMessage) : void
	#handleMessageRead(Message& aMessage, const boost::system::error_code& error, size_t UNUSEDPARAM(bytes_transferred)) : void
	+{abstract} handleMessageWritten(Message& aMessage) : void
	#handleMessageWritten(Message& aMessage, const boost::system::error_code& error) : void
	#readMessage() : void
	+{abstract} start() : void
	#writeMessage(Message& aMessage) : void
}
}

package Application{
class CommandlineArgument {
	+CommandlineArgument()
	+CommandlineArgument(unsigned long anArgumentNumber, const std::string& aVariable, const std::string& aValue)
	+CommandlineArgument(const CommandlineArgument& aCommandlineArgument)
	+~CommandlineArgument()
	+operator=(const CommandlineArgument& aCommandlineArgument) : CommandlineArgument&
	+operator<(const CommandlineArgument& aCommandlineArgument) : bool {query}
	+operator==(const unsigned long anArgumentNumber) : bool {query}
	+operator==(const std::string& aVariable) : bool {query}
	+operator==(const CommandlineArgument& aCommandlineArgument) : bool {query}
	+value : std::string
	+variable : std::string
	+argumentNumber : unsigned long
}

class LogTextCtrl {
	+LogTextCtrl(Window* aParent, WindowId aWindowId, long aStyle, const std::string& anInitialText, const Point& aPoint, const Size& aSize)
	+~LogTextCtrl()
	#OnCommandEvent(CommandEvent& anEvent) : void
	+log(const std::string& aString) : void
}

class Logger {
	+{static} isEnabled() : bool
	-{static} disable : static bool
	+{static} log(const std::string& aMessage) : void
	+{static} setDisable(bool aDisable) : void
}

class MainApplication {
	+{static} getArg(const std::string& aVariable) : CommandlineArgument&
	+{static} getArg(unsigned long anArgumentNumber) : CommandlineArgument&
	+OnInit() : bool
	+{static} isArgGiven(const std::string& aVariable) : bool
	-{static} commandlineArguments : static std::vector< CommandlineArgument>
	-{static} commandlineFiles : static std::vector< std::string>
	+{static} getCommandlineFiles() : std::vector<std::string>&
	+{static} setCommandlineArguments(int argc, char* argv) : void
}

class MainFrameWindow {
	+MainFrameWindow(const std::string& aTitle)
	+~MainFrameWindow()
	+getTraceFunction() : Base::DebugTraceFunction& {query}
	-debugTraceFunction : Base::DebugTraceFunction*
	-logTextCtrl : LogTextCtrl*
	#initialiseMenuBar() : MenuBar*
	-menuBar : MenuBar*
	-buttonPanel : Panel*
	-clientPanel : Panel*
	#initialiseButtonPanel() : Panel*
	#initialiseClientPanel() : Panel*
	#initialiseLhsPanel() : Panel*
	#initialiseRhsPanel() : Panel*
	-lhsPanel : Panel*
	-rhsPanel : Panel*
	#initialiseSplitterWindow() : SplitterWindow*
	-splitterWindow : SplitterWindow*
	-robotWorldCanvas : View::RobotWorldCanvas*
	-OnAbout(CommandEvent& anEvent) : void
	-OnPopulate(CommandEvent& anEvent) : void
	-OnQuit(CommandEvent& anEvent) : void
	-OnSendMessage(CommandEvent& anEvent) : void
	-OnStartListening(CommandEvent& anEvent) : void
	-OnStartRobot(CommandEvent& anEvent) : void
	-OnStdOutDebugTraceFunction(CommandEvent& anEvent) : void
	-OnStopListening(CommandEvent& anEvent) : void
	-OnStopRobot(CommandEvent& anEvent) : void
	-OnUnpopulate(CommandEvent& anEvent) : void
	-OnWidgetDebugTraceFunction(CommandEvent& anEvent) : void
	#initialise() : void
}

class WidgetDebugTraceFunction {
	+WidgetDebugTraceFunction(Application::LogTextCtrl* aLogTextCtrl)
	-outputControl : Application::LogTextCtrl*
	+trace(const std::string& aText) : void
}
}

package Base{
abstract class DebugTraceFunction {
	+~DebugTraceFunction()
	+{abstract} trace(const std::string& aText) : void
}

class NotificationFunctionTypeTraits <template< typename NotificationFunction >> {
	+call(NotificationFunction& aNotificationFunction, NotifyEvent &) : void
}

class NotificationFunctionTypeTraitsTracing {
}

class NotificationHandler <template< typename NotificationFunction >> {
	+NotificationHandler(const NotificationFunction& aNotificationFunction)
	+~NotificationHandler()
	-function : NotificationFunction
	+OnNotificationEvent(NotifyEvent& aNotifyEvent) : void
}

class Notifier {
	+Notifier(bool enable)
	+~Notifier()
	+isEnabledForNotification() : bool {query}
	-notify : bool
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	-observers : std::vector< Observer*>
	+addObserver(Observer& anObserver) : void
	+disableNotification() : void
	+enableNotification(bool enable) : void
	+notifyObservers() : void
	+removeAllObservers() : void
	+removeObserver(Observer& anObserver) : void
}

class ObjectId {
	+ObjectId()
	+ObjectId(unsigned long max)
	+ObjectId(unsigned long, unsigned long len, unsigned char* aDataPointer, bool)
	+ObjectId(const ObjectId& anObjectId)
	+ObjectId(InputIterator first, InputIterator last)
	+ObjectId(const std::string& anObjectIdString)
	+~ObjectId()
	+{static} newObjectId() : ObjectId
	+operator=(const ObjectId& anObjectId) : ObjectId&
	+isNull() : bool {query}
	+isValid() : bool {query}
	+operator<(const ObjectId& anObjectId) : bool {query}
	+operator==(const ObjectId& anObjectId) : bool {query}
	+release() : bool {query}
	+get_buffer() : const_pointer {query}
	+operator[](unsigned long index) : const_reference {query}
	+{static} allocbuf(unsigned long nelems) : pointer
	+get_buffer(bool orphan) : pointer
	+operator[](unsigned long index) : reference
	+{static} objectIdNamespace : static std::string
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+toString() : std::string {query}
	+length() : unsigned long {query}
	+maximum() : unsigned long {query}
	+{static} freebuf(pointer aT) : void
	+fromString(const std::string& anObjectIdString) : void
	+length(unsigned long len) : void
	+replace(unsigned long, unsigned long len, pointer newData, bool) : void
}

abstract class Observer {
	+Observer()
	+~Observer()
	+operator<(const Observer& aObserver) : bool {query}
	+operator==(const Observer& aObserver) : bool {query}
	+{abstract} handleNotification() : void
	+handleNotificationsFor(Notifier& aNotifier) : void
	+stopHandlingNotificationsFor(Notifier& aNotifier) : void
}

class Queue <template< typename QueueContentType >> {
	+dequeue() : QueueContentType
	+size() : size_t {query}
	-queueFull : std::condition_variable
	-queueBusy : std::mutex
	-queue : std::queue< QueueContentType>
	+enqueue(const QueueContentType& anElement) : void
}


class StdOutDebugTraceFunction {
	+trace(const std::string& aText) : void
}
}

package View{
class GoalShape {
	+GoalShape(model::GoalPtr aGoal)
	+~GoalShape()
	+getGoal() : model::GoalPtr {query}
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getActivationColour() : std::string {query}
	+getNormalColour() : std::string {query}
	+getSelectionColour() : std::string {query}
	+handleNotification() : void
	+setGoal(model::GoalPtr aGoal) : void
}



class LineShape {
	+LineShape(RectangleShapePtr aNode1, RectangleShapePtr aNode2, const std::string& aTitle, int aLineWidth, int anArrowHeadSize)
	+LineShape(model::ModelObjectPtr aModelObject, RectangleShapePtr aNode1, RectangleShapePtr aNode2, const std::string& aTitle, int aLineWidth, int anArrowHeadSize)
	+~LineShape()
	+getBegin() : Point {query}
	+getCentre() : Point {query}
	+getEnd() : Point {query}
	-left : Point
	-right : Point
	-top : Point
	#getNode1() : RectangleShapePtr
	#getNode1() : RectangleShapePtr {query}
	#getNode2() : RectangleShapePtr
	#getNode2() : RectangleShapePtr {query}
	-node1 : RectangleShapePtr
	-node2 : RectangleShapePtr
	+connects(RectangleShapePtr aNode) : bool {query}
	+occupies(const Point& aPoint) : bool {query}
	+getLength() : double {query}
	-arrowHeadSize : int
	+getArrowHeadSize() : int {query}
	+getLineWidth() : int {query}
	-lineWidth : int
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getTitle() : std::string {query}
	-title : std::string
	+draw(wxDC& dc) : void
	+drawHead(wxDC& dc) : void
	+handleActivated() : void
	+handleNotification() : void
	+handleSelection() : void
	+setArrowHeadSize(int anArrowHeadSize) : void
	+setCentre(const Point& aPoint) : void
	+setLineWidth(int aLineWidth) : void
	+setNode1(RectangleShapePtr aNode1) : void
	+setNode2(RectangleShapePtr aNode2) : void
	+setTitle(const std::string& aTitle) : void
}

class RectangleShape {
	+RectangleShape(const std::string& aTitle)
	+RectangleShape(const Point& aCentrePoint, const std::string& aTitle, int aBorderWidth, int aSpacing)
	+RectangleShape(model::ModelObjectPtr aModelObject, const Point& aCentrePoint, const std::string& aTitle, int aBorderWidth, int aSpacing)
	+~RectangleShape()
	#centre : Point
	+getCentre() : Point {query}
	+operator=(const RectangleShape& aRectangleShape) : RectangleShape&
	+getSize() : Size {query}
	#size : Size
	#titleSize : Size
	+isBorderPoint(const Point aPoint, int aRadius) : bool {query}
	+occupies(const Point& aPoint) : bool {query}
	#borderWidth : int
	+getBorderWidth() : int {query}
	+getSpacing() : int {query}
	#spacing : int
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getActivationColour() : std::string {query}
	+getNormalColour() : std::string {query}
	+getSelectionColour() : std::string {query}
	+getTitle() : std::string {query}
	#title : std::string
	+draw(wxDC& dc) : void
	+handleActivated() : void
	+handleNotification() : void
	+handleSelection() : void
	+setBorderWidth(int aBorderWidth) : void
	+setCentre(const Point& aPoint) : void
	+setSize(const Size& aSize) : void
	+setSpacing(int aSpacing) : void
	+setTitle(const std::string& aTitle) : void
}

class RobotShape {
	+RobotShape(model::RobotPtr aRobot)
	+~RobotShape()
	+getRobot() : model::RobotPtr {query}
	-robotWorldCanvas : RobotWorldCanvas*
	+occupies(const Point& aPoint) : bool {query}
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getActivationColour() : std::string {query}
	+getNormalColour() : std::string {query}
	+getSelectionColour() : std::string {query}
	+draw(wxDC& dc) : void
	+handleActivated() : void
	+handleNotification() : void
	+handleSelection() : void
	+setCentre(const Point& aPoint) : void
	+setRobot(model::RobotPtr aRobot) : void
	+setRobotWorldCanvas(RobotWorldCanvas* aRobotWorldCanvas) : void
}

class RobotWorldCanvas {
	+RobotWorldCanvas(Window* anOwner)
	+RobotWorldCanvas(Window* anOwner, model::ModelObjectPtr aModelObject)
	-function<void(NotifyEvent &)
	+~RobotWorldCanvas()
	+getRobotWorld() : model::RobotWorldPtr {query}
	-actionOffset : Point
	+devicePointFor(const Point& aScreenPoint) : Point {query}
	-endActionPoint : Point
	-popupPoint : Point
	+screenPointFor(const Point& aDevicePoint) : Point {query}
	-startActionPoint : Point
	+getSelectedShape() : ShapePtr {query}
	+getShapeAt(const Point& aPoint) : ShapePtr {query}
	-startActionSize : Size
	-endActionShape : View::ShapePtr
	-selectedShape : View::ShapePtr
	-startActionShape : View::ShapePtr
	-activationEnabled : bool
	-dandEnabled : bool
	+isShapeAt(const Point& aPoint) : bool {query}
	+isShapeSelected() : bool {query}
	-menuItemEnabled : bool
	+selectShapeAt(const Point& aPoint) : bool
	-selectionEnabled : bool
	-actionStatus : enum
	-shapes : std::vector< ShapePtr>
	-OnAddGoal(CommandEvent& event) : void
	-OnAddRobot(CommandEvent& event) : void
	-OnAddWall(CommandEvent& event) : void
	-OnAddWayPoint(CommandEvent& event) : void
	-OnCharDown(KeyEvent& event) : void
	-OnDeleteGoal(CommandEvent& event) : void
	-OnDeleteRobot(CommandEvent& event) : void
	-OnDeleteWall(CommandEvent& event) : void
	-OnDeleteWayPoint(CommandEvent& event) : void
	-OnEditGoal(CommandEvent& event) : void
	-OnEditRobot(CommandEvent& event) : void
	-OnEditWall(CommandEvent& event) : void
	-OnEditWayPoint(CommandEvent& event) : void
	-OnKeyDown(KeyEvent& event) : void
	-OnLeftDClick(MouseEvent& event) : void
	-OnLeftDown(MouseEvent& event) : void
	-OnLeftUp(MouseEvent& event) : void
	-OnMiddleDClick(MouseEvent& event) : void
	-OnMiddleDown(MouseEvent& event) : void
	-OnMiddleUp(MouseEvent& event) : void
	-OnMouseMotion(MouseEvent& event) : void
	-OnNotificationEvent(NotifyEvent& aNotifyEvent) : void
	-OnPaint(PaintEvent& event) : void
	-OnRightDClick(MouseEvent& event) : void
	-OnRightDown(MouseEvent& event) : void
	-OnRightUp(MouseEvent& event) : void
	-OnShapeInfo(CommandEvent& event) : void
	-OnSize(SizeEvent& event) : void
	-OnWorldInfo(CommandEvent& event) : void
	-add(const std::vector<std::shared_ptr< T> >& aTs) : void
	#addShape(View::RobotShapePtr aRobotShape) : void
	#addShape(View::GoalShapePtr aGoalShape) : void
	#addShape(View::WayPointShapePtr aWayPointShape) : void
	#addShape(View::WallShapePtr aWallShape) : void
	+enableActivationHandling(bool enable) : void
	+enableDragAndDropHandling(bool enable) : void
	+enableHandlePaint(bool enable) : void
	+enableHandleSize(bool enable) : void
	+enableItemMenuHandling(bool enable) : void
	+enableKeyHandling(bool enable) : void
	+enableLeftDClickHandling(bool enable) : void
	+enableLeftDownHandling(bool enable) : void
	+enableLeftUpHandling(bool enable) : void
	+enableMiddleDClickHandling(bool enable) : void
	+enableMiddleDownHandling(bool enable) : void
	+enableMiddleUpHandling(bool enable) : void
	+enableMouseMotionHandling(bool enable) : void
	+enableRightDClickHandling(bool enable) : void
	+enableRightDownHandling(bool enable) : void
	+enableRightUpHandling(bool enable) : void
	+enableSelectionHandling(bool enable) : void
	#handleActivation(View::ShapePtr aShape) : void
	#handleAddGoal(CommandEvent& event) : void
	#handleAddRobot(CommandEvent& event) : void
	#handleAddWall(CommandEvent& event) : void
	#handleAddWayPoint(CommandEvent& event) : void
	+handleBackGroundNotification() : void
	#handleBeginLeftDrag(View::ShapePtr aShape) : void
	#handleDeleteGoal(CommandEvent& event) : void
	#handleDeleteRobot(CommandEvent& event) : void
	#handleDeleteWall(CommandEvent& event) : void
	#handleDeleteWayPoint(CommandEvent& event) : void
	#handleEditGoal(CommandEvent& event) : void
	#handleEditRobot(CommandEvent& event) : void
	#handleEditWall(CommandEvent& event) : void
	#handleEditWayPoint(CommandEvent& event) : void
	#handleEndDrag(View::ShapePtr aShape) : void
	#handleItemMenu(View::ShapePtr aSelectedShape, const Point& aPoint) : void
	#handleKey(KeyEvent& event) : void
	#handleLeftDClick(MouseEvent& event) : void
	#handleLeftDown(MouseEvent& event) : void
	#handleLeftUp(MouseEvent& event) : void
	#handleMenu(const Point& aScreenPoint) : void
	#handleMiddleDClick(MouseEvent& event) : void
	#handleMiddleDown(MouseEvent& event) : void
	#handleMiddleUp(MouseEvent& event) : void
	#handleMouseMotion(MouseEvent& event) : void
	+handleNotification() : void
	#handleNotification(NotifyEvent& aNotifyEvent) : void
	#handlePaint(PaintEvent& event) : void
	#handleRightDClick(MouseEvent& event) : void
	#handleRightDown(MouseEvent& event) : void
	#handleRightUp(MouseEvent& event) : void
	#handleSelection(View::ShapePtr aShape) : void
	#handleShapeInfo(CommandEvent& event) : void
	#handleSize(SizeEvent& event) : void
	#initialise() : void
	+populate(int aNumberOfWalls) : void
	-remove(const std::vector<std::shared_ptr< T> >& aTs) : void
	#removeGenericShape(View::ShapePtr aShape) : void
	#removeShape(View::RobotShapePtr aRobotShape) : void
	#removeShape(View::GoalShapePtr aGoalShape) : void
	#removeShape(View::WayPointShapePtr aWayPointShape) : void
	#removeShape(View::WallShapePtr aWallShape) : void
	#render(wxDC& dc) : void
	+setRobotWorld(model::RobotWorldPtr aRobotWorld) : void
	+setSelectedShape(View::ShapePtr aSelectedShape) : void
	+unpopulate() : void
}

abstract class Shape {
	+Shape()
	+Shape(model::ModelObjectPtr aModelObject)
	+~Shape()
	+{abstract} getCentre() : Point {query}
	+getSelectedPoint() : Point {query}
	-data : ShapeData*
	+getData() : ShapeData* {query}
	+isSelected() : bool {query}
	+{abstract} occupies(const Point& aPoint) : bool {query}
	-selected : bool
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+{abstract} draw(wxDC& dc) : void
	+handleActivated() : void
	+handleBeginLeftDrag() : void
	+handleEndDrag() : void
	+handleSelection() : void
	+{abstract} setCentre(const Point& aPoint) : void
	+setData(ShapeData* aData) : void
	+setSelected(bool aSelected) : void
	+setSelectedAt(const Point& aPoint, bool aSelected) : void
}

class ShapeData {
	+~ShapeData()
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
}


class WallShape {
	+WallShape(model::WallPtr aWall)
	+WallShape(model::WallPtr aWall, RectangleShapePtr aRectangleShape1, RectangleShapePtr aRectangleShape2)
	+~WallShape()
	+getWall() : model::WallPtr {query}
	+hasEndPointAt(const Point& aPoint) : RectangleShapePtr
	+hasEndPoint(RectangleShapePtr aRectangleShape) : bool
	+occupies(const Point& aPoint) : bool {query}
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+draw(wxDC& dc) : void
	+setSelectedAt(const Point& aPoint, bool aSelected) : void
	+setWall(model::WallPtr aWall) : void
	+updateEndPoint(RectangleShapePtr aRectangleShape) : void
}

class WayPointShape {
	+WayPointShape(model::WayPointPtr aWayPoint)
	+~WayPointShape()
	+getWayPoint() : model::WayPointPtr {query}
	+asDebugString() : std::string {query}
	+asString() : std::string {query}
	+getActivationColour() : std::string {query}
	+getNormalColour() : std::string {query}
	+getSelectionColour() : std::string {query}
	+draw(wxDC& dc) : void
	+handleNotification() : void
	+setCentre(const Point& aPoint) : void
	+setWayPoint(model::WayPointPtr aWayPoint) : void
}
}

package Utils{
class MathUtils {
	+{static} toDegrees(float aRadian) : float
	+{static} toRadians(float aDegrees) : float
}

class Shape2DUtils {
	+{static} getIntersection(const Point& aStartLine1, const Point& aEndLine1, const Point& aStartLine2, const Point& anEndLine2) : Point
	+{static} rotate(const Point& aPoint, double anAngle) : Point
	+{static} intersect(const Point& aStartLine1, const Point& aEndLine1, const Point& aStartLine2, const Point& anEndLine2) : bool
	+{static} isCompassPoint(const Point& aPoint, const Size& aSize, const Point& aBorderPoint, CompassPoint aCompassPoint, int aRadius) : bool
	+{static} isInsidePolygon(Point* aPolygon, int aNumberOfPoints, const Point& aPoint) : bool
	+{static} isOnLine(const Point& aStartPoint, const Point& anEndPoint, const Point& aPoint, int aRadius) : bool
	+{static} isOnLine(Point* aPolygon, int aNumberOfPoints, const Point& aPoint, int aRadius, bool aClosedShape) : bool
	+{static} getAngle(const model::BoundedVector& aVector) : double
	+{static} getAngle(const Point& aStartpoint, const Point& anEndPoint) : double
	#{static} rotateX(const Point& aPoint, double anAngle) : double
	#{static} rotateX(int anX, int anY, double anAngle) : double
	#{static} rotateY(const Point& aPoint, double anAngle) : double
	#{static} rotateY(int anX, int anY, double anAngle) : double
	+{static} getCompassPoint(const Point& aPoint, const Size& aSize, const Point& aBorderPoint, int aRadius) : int
	+{static} asString(const Point& aPoint) : std::string
	+{static} asString(const Size& aSize) : std::string
}
}


AbstractActuator <|- - SteeringActuator
AbstractAgent <|- - Robot
AbstractPercept <|- - DistancePercept
AbstractSensor <|- - LaserDistanceSensor
AbstractStimulus <|- - DistanceStimulus
DebugTraceFunction <|- - StdOutDebugTraceFunction
LineShape <|- - WallShape
ModelObject <|- - AbstractActuator
ModelObject <|- - AbstractAgent
ModelObject <|- - AbstractSensor
ModelObject <|- - RobotWorld
ModelObject <|- - Wall
ModelObject <|- - WayPoint
RectangleShape <|- - RobotShape
RectangleShape <|- - WayPointShape
RequestHandler <|- - MessageHandler
ResponseHandler <|- - MessageHandler
Session <|- - ClientSession
Session <|- - ServerSession
Shape <|- - LineShape
Shape <|- - RectangleShape
ViewObject <|- - RobotWorldCanvas
ViewObject <|- - Shape
WayPoint <|- - Goal
WayPointShape <|- - GoalShape

AbstractActuator ..> AbstractAgent
AbstractAgent ..> AbstractActuator
AbstractAgent ..> AbstractPercept
AbstractAgent ..> AbstractSensor
AbstractAgent - -> Queue
AbstractSensor ..> AbstractAgent
ClientSession - -> Message
Edge "2" o- - Vertex
MainApplication o- - CommandlineArgument
MainFrameWindow ..> DebugTraceFunction
MainFrameWindow ..> LogTextCtrl
MainFrameWindow ..> RobotWorldCanvas
ModelObject - -> ObjectId
Notifier o- - Observer
RobotShape ..> RobotWorldCanvas
Shape ..> ShapeData
ViewObject - -> ObjectId
WidgetDebugTraceFunction ..> LogTextCtrl

AbstractActuator ..> AbstractCommand
AbstractSensor ..> AbstractStimulus
AbstractSensor ..> AbstractPercept
Client ..> ResponseHandler
Client ..> ClientSession
Client ..> Message
Client ..> CommunicationService
CommunicationService ..> RequestHandler
LineShape ..> RectangleShape
RequestHandler ..> Message
ResponseHandler ..> Message
Observer - -> Notifier
Robot - -> Message
Robot ..> Goal
Robot - -> AStar
Robot - -> BoundedVector
RobotShape - -> Robot
RobotWorld ..> ObjectId
RobotWorld - -> WayPoint
RobotWorld - -> Goal
RobotWorld - -> Wall
RobotWorldCanvas o- - Shape
RobotWorldCanvas ..> RobotShape
RobotWorldCanvas ..> GoalShape
RobotWorldCanvas ..> WallShape
RobotWorldCanvas ..> WayPointShape
RobotWorldCanvas ..> RobotWorld
Server ..> RequestHandler
Server ..> CommunicationService
Server ..> ServerSession
Session - -> Message
ServerSession ..> RequestHandler
ClientSession ..> ResponseHandler
Shape2DUtils ..> BoundedVector
SteeringActuator ..> AbstractCommand
ViewObject ..> ModelObject
WallShape ..> Wall
WallShape ..> RectangleShape
WayPointShape ..> WayPoint

AStar ..> Wall
AStar ..> RobotWorld
AStar ..> Shape2DUtils
Astar - -> Vertex
BoundedVector ..> BoundedVector
CommunicationService - -> Server
LaserDistanceSensor ..> AbstractStimulus
LaserDistanceSensor ..> AbstractPercept
LaserDistanceSensor ..> DistanceStimulus
LineShape ..> Shape2DUtils
Logger ..> MainFrameWindow
RectangleShape ..> Shape2DUtils
Robot ..> RobotWorld
Robot ..> CommunicationService
Robot ..> MainApplication
Robot ..> Logger
Robot ..> Vertex
Robot ..> AbstractSensor
Robot ..> Wall
Robot ..> Shape2DUtils
RobotShape ..> RobotWorldCanvas
RobotShape ..> BoundedVector
RobotShape ..> RobotWorld
RobotShape ..> Vertex
RobotShape ..> Shape2DUtils



@enduml

PlantUML version 1.2018.02(Fri Mar 09 18:20:44 CET 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_162-8u162-b12-0ubuntu0.16.04.2-b12
Operating System: Linux
OS Version: 4.13.0-38-generic
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>