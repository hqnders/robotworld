<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_model_1_1_robot_world" kind="class" language="C++" prot="public">
    <compoundname>model::RobotWorld</compoundname>
    <basecompoundref refid="class_model_1_1_model_object" prot="public" virt="non-virtual">model::ModelObject</basecompoundref>
      <sectiondef kind="user-defined">
      <header>Debug functions</header>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a9f5a599b9d6523f45df7cbb0aafe4c08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string model::RobotWorld::asString</definition>
        <argsstring>() const </argsstring>
        <name>asString</name>
        <reimplements refid="class_model_1_1_model_object_1a9db00b9150a932a1637e425f24c0bdf0">asString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a 1-line description of the object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="146" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="387" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a9c599037d4bdc7ebd4e9138c3cf3cc82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string model::RobotWorld::asDebugString</definition>
        <argsstring>() const </argsstring>
        <name>asDebugString</name>
        <reimplements refid="class_model_1_1_model_object_1aced22b0b0ee637c598c463de6a1d8d03">asDebugString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a description of the object with all data of the object usable for debugging </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="150" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="394" bodyend="418"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_model_1_1_robot_world_1a5019cd139c3d2e9aa10bd07b565d835a" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; RobotPtr &gt;</type>
        <definition>std::vector&lt; RobotPtr &gt; model::RobotWorld::robots</definition>
        <argsstring></argsstring>
        <name>robots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The vectors are mutable to allow for lazy instantiation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="167" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_model_1_1_robot_world_1a265deae54f92d839882a4472630adb36" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; WayPointPtr &gt;</type>
        <definition>std::vector&lt; WayPointPtr &gt; model::RobotWorld::wayPoints</definition>
        <argsstring></argsstring>
        <name>wayPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="168" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_model_1_1_robot_world_1a35470d30ffdbce51b22ed9a2f3c0a0be" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; GoalPtr &gt;</type>
        <definition>std::vector&lt; GoalPtr &gt; model::RobotWorld::goals</definition>
        <argsstring></argsstring>
        <name>goals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="169" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_model_1_1_robot_world_1aa5dab80b57998a5a47aa65599ff0c41a" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; WallPtr &gt;</type>
        <definition>std::vector&lt; WallPtr &gt; model::RobotWorld::walls</definition>
        <argsstring></argsstring>
        <name>walls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="170" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_model_1_1_robot_world_1a3129fe115ffa78851d1d81e62a87bfa0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_model_1_1_robot_world" kindref="compound">RobotWorld</ref> &amp;</type>
        <definition>static RobotWorld&amp; model::RobotWorld::getRobotWorld</definition>
        <argsstring>()</argsstring>
        <name>getRobotWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_model_1_1_robot_world_1af0d58001395b3b375c2a98b28f2f3ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RobotPtr</type>
        <definition>RobotPtr model::RobotWorld::newRobot</definition>
        <argsstring>(const std::string &amp;aName=&quot;New Robot&quot;, const Point &amp;aPosition=Point(-1,-1), bool aNotifyObservers=true)</argsstring>
        <name>newRobot</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aName</declname>
          <defval>&quot;New <ref refid="class_model_1_1_robot" kindref="compound">Robot</ref>&quot;</defval>
        </param>
        <param>
          <type>const Point &amp;</type>
          <declname>aPosition</declname>
          <defval>Point(-1,-1)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="39" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="22" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a45272003383e53e4d8273e83a3e7dc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>WayPointPtr</type>
        <definition>WayPointPtr model::RobotWorld::newWayPoint</definition>
        <argsstring>(const std::string &amp;aName=&quot;New WayPoint&quot;, const Point &amp;aPosition=Point(-1,-1), bool aNotifyObservers=true)</argsstring>
        <name>newWayPoint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aName</declname>
          <defval>&quot;New <ref refid="class_model_1_1_way_point" kindref="compound">WayPoint</ref>&quot;</defval>
        </param>
        <param>
          <type>const Point &amp;</type>
          <declname>aPosition</declname>
          <defval>Point(-1,-1)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="45" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="37" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1afc21f82cc1c2c65655da7ef6a7e0f6e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GoalPtr</type>
        <definition>GoalPtr model::RobotWorld::newGoal</definition>
        <argsstring>(const std::string &amp;aName=&quot;New Goal&quot;, const Point &amp;aPosition=Point(-1,-1), bool aNotifyObservers=true)</argsstring>
        <name>newGoal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aName</declname>
          <defval>&quot;New <ref refid="class_model_1_1_goal" kindref="compound">Goal</ref>&quot;</defval>
        </param>
        <param>
          <type>const Point &amp;</type>
          <declname>aPosition</declname>
          <defval>Point(-1,-1)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="51" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="52" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a8b3d9243b9550a6fe01bc3b880fadec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>WallPtr</type>
        <definition>WallPtr model::RobotWorld::newWall</definition>
        <argsstring>(const Point &amp;aPoint1, const Point &amp;aPoint2, bool aNotifyObservers=true)</argsstring>
        <name>newWall</name>
        <param>
          <type>const Point &amp;</type>
          <declname>aPoint1</declname>
        </param>
        <param>
          <type>const Point &amp;</type>
          <declname>aPoint2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="57" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="67" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1aa6d7a030f609d6b1187b1c5e93469695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model::RobotWorld::deleteRobot</definition>
        <argsstring>(RobotPtr aRobot, bool aNotifyObservers=true)</argsstring>
        <name>deleteRobot</name>
        <param>
          <type>RobotPtr</type>
          <declname>aRobot</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="63" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="82" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1afbb97c93d8d68e6e624af6fc988b57ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model::RobotWorld::deleteWayPoint</definition>
        <argsstring>(WayPointPtr aWayPoint, bool aNotifyObservers=true)</argsstring>
        <name>deleteWayPoint</name>
        <param>
          <type>WayPointPtr</type>
          <declname>aWayPoint</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="68" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="101" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a5208d73a57a8b663f4de407150fb8379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model::RobotWorld::deleteGoal</definition>
        <argsstring>(GoalPtr aGoal, bool aNotifyObservers=true)</argsstring>
        <name>deleteGoal</name>
        <param>
          <type>GoalPtr</type>
          <declname>aGoal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="73" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="120" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a25c789a5165ee686ef21e1492aace738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model::RobotWorld::deleteWall</definition>
        <argsstring>(WallPtr aWall, bool aNotifyObservers=true)</argsstring>
        <name>deleteWall</name>
        <param>
          <type>WallPtr</type>
          <declname>aWall</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="78" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="140" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1aa65fc818fe12a23953ac53f7f62705fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RobotPtr</type>
        <definition>RobotPtr model::RobotWorld::getRobot</definition>
        <argsstring>(const std::string &amp;aName) const </argsstring>
        <name>getRobot</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="83" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="162" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1ac7897e5aa501752e5e93b555efbf752a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RobotPtr</type>
        <definition>RobotPtr model::RobotWorld::getRobot</definition>
        <argsstring>(const Base::ObjectId &amp;anObjectId) const </argsstring>
        <name>getRobot</name>
        <param>
          <type>const <ref refid="class_base_1_1_object_id" kindref="compound">Base::ObjectId</ref> &amp;</type>
          <declname>anObjectId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="87" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a4ec5350ad359e9b37bd2f5606a86fea1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>WayPointPtr</type>
        <definition>WayPointPtr model::RobotWorld::getWayPoint</definition>
        <argsstring>(const std::string &amp;aName) const </argsstring>
        <name>getWayPoint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="91" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="190" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a6ce03ec6f6f106172053cdd789844347" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>WayPointPtr</type>
        <definition>WayPointPtr model::RobotWorld::getWayPoint</definition>
        <argsstring>(const Base::ObjectId &amp;anObjectId) const </argsstring>
        <name>getWayPoint</name>
        <param>
          <type>const <ref refid="class_base_1_1_object_id" kindref="compound">Base::ObjectId</ref> &amp;</type>
          <declname>anObjectId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="95" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="204" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1aae1b5a0410c5ae207cd8b7525e204cc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GoalPtr</type>
        <definition>GoalPtr model::RobotWorld::getGoal</definition>
        <argsstring>(const std::string &amp;aName) const </argsstring>
        <name>getGoal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="99" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a3a678aa437a062c21acccf9ed105a3ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GoalPtr</type>
        <definition>GoalPtr model::RobotWorld::getGoal</definition>
        <argsstring>(const Base::ObjectId &amp;anObjectId) const </argsstring>
        <name>getGoal</name>
        <param>
          <type>const <ref refid="class_base_1_1_object_id" kindref="compound">Base::ObjectId</ref> &amp;</type>
          <declname>anObjectId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="103" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="232" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a8d6dab46a8c89a42f101f4548e4b3da6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>WallPtr</type>
        <definition>WallPtr model::RobotWorld::getWall</definition>
        <argsstring>(const Base::ObjectId &amp;anObjectId) const </argsstring>
        <name>getWall</name>
        <param>
          <type>const <ref refid="class_base_1_1_object_id" kindref="compound">Base::ObjectId</ref> &amp;</type>
          <declname>anObjectId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="107" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="246" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a657cbe460deb2057521ae51dc5327fe7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; RobotPtr &gt; &amp;</type>
        <definition>const std::vector&lt; RobotPtr &gt; &amp; model::RobotWorld::getRobots</definition>
        <argsstring>() const </argsstring>
        <name>getRobots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="111" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a1bbc183d9e63ae142bcbc0373aa06e78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; WayPointPtr &gt; &amp;</type>
        <definition>const std::vector&lt; WayPointPtr &gt; &amp; model::RobotWorld::getWayPoints</definition>
        <argsstring>() const </argsstring>
        <name>getWayPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="115" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a6bac601255c803cc88cc145da2aa1ff0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; GoalPtr &gt; &amp;</type>
        <definition>const std::vector&lt; GoalPtr &gt; &amp; model::RobotWorld::getGoals</definition>
        <argsstring>() const </argsstring>
        <name>getGoals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="119" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a6751f9fe7b9e33047a6d518f5a2f819b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; WallPtr &gt; &amp;</type>
        <definition>const std::vector&lt; WallPtr &gt; &amp; model::RobotWorld::getWalls</definition>
        <argsstring>() const </argsstring>
        <name>getWalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="123" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1afe09ff15bf8a4cbed1222baa065107d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model::RobotWorld::populate</definition>
        <argsstring>(int aNumberOfWalls=2)</argsstring>
        <name>populate</name>
        <param>
          <type>int</type>
          <declname>aNumberOfWalls</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="127" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="289" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1aa54ca5337df73d34be09a2c3b9a66c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model::RobotWorld::unpopulate</definition>
        <argsstring>(bool aNotifyObservers=true)</argsstring>
        <name>unpopulate</name>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="131" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="312" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1a4a62b951e0cdab0ce60f0189442481f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model::RobotWorld::unpopulate</definition>
        <argsstring>(const std::vector&lt; Base::ObjectId &gt; &amp;aKeepObjects, bool aNotifyObservers=true)</argsstring>
        <name>unpopulate</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_base_1_1_object_id" kindref="compound">Base::ObjectId</ref> &gt; &amp;</type>
          <declname>aKeepObjects</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aNotifyObservers</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aKeepObjects</parametername>
</parameternamelist>
<parameterdescription>
<para>Keep the objects with these ObjectIdsin the world </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aNotifyObservers</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="137" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="327" bodyend="383"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_model_1_1_robot_world_1a0c67a71c8dec8eda6d182666d7e629ba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>model::RobotWorld::RobotWorld</definition>
        <argsstring>()</argsstring>
        <name>RobotWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="157" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="422" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_robot_world_1abbcd88bc3659fe2a57328f0d8be440ad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>model::RobotWorld::~RobotWorld</definition>
        <argsstring>()</argsstring>
        <name>~RobotWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="161" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.cpp" bodystart="428" bodyend="433"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="651">
        <label>model::ModelObject</label>
        <link refid="class_model_1_1_model_object"/>
        <childnode refid="652" relation="public-inheritance">
        </childnode>
        <childnode refid="653" relation="public-inheritance">
        </childnode>
        <childnode refid="654" relation="public-inheritance">
        </childnode>
      </node>
      <node id="652">
        <label>boost::noncopyable</label>
      </node>
      <node id="653">
        <label>Base::Notifier</label>
        <link refid="class_base_1_1_notifier"/>
      </node>
      <node id="654">
        <label>std::enable_shared_from_this&lt; ModelObject &gt;</label>
      </node>
      <node id="650">
        <label>model::RobotWorld</label>
        <link refid="class_model_1_1_robot_world"/>
        <childnode refid="651" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="656">
        <label>model::ModelObject</label>
        <link refid="class_model_1_1_model_object"/>
        <childnode refid="657" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
        <childnode refid="659" relation="public-inheritance">
        </childnode>
      </node>
      <node id="657">
        <label>boost::noncopyable</label>
      </node>
      <node id="658">
        <label>Base::Notifier</label>
        <link refid="class_base_1_1_notifier"/>
      </node>
      <node id="659">
        <label>std::enable_shared_from_this&lt; ModelObject &gt;</label>
      </node>
      <node id="655">
        <label>model::RobotWorld</label>
        <link refid="class_model_1_1_robot_world"/>
        <childnode refid="656" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" line="30" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/RobotWorld.hpp" bodystart="29" bodyend="171"/>
    <listofallmembers>
      <member refid="class_base_1_1_notifier_1a5c4e89f48f9688c71ffec225717dd79e" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>addObserver</name></member>
      <member refid="class_model_1_1_robot_world_1a9c599037d4bdc7ebd4e9138c3cf3cc82" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>asDebugString</name></member>
      <member refid="class_model_1_1_robot_world_1a9f5a599b9d6523f45df7cbb0aafe4c08" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>asString</name></member>
      <member refid="class_model_1_1_robot_world_1a5208d73a57a8b663f4de407150fb8379" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>deleteGoal</name></member>
      <member refid="class_model_1_1_robot_world_1aa6d7a030f609d6b1187b1c5e93469695" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>deleteRobot</name></member>
      <member refid="class_model_1_1_robot_world_1a25c789a5165ee686ef21e1492aace738" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>deleteWall</name></member>
      <member refid="class_model_1_1_robot_world_1afbb97c93d8d68e6e624af6fc988b57ca" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>deleteWayPoint</name></member>
      <member refid="class_base_1_1_notifier_1a050d0bbcf113f31cc16cd3b5229c7576" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>disableNotification</name></member>
      <member refid="class_base_1_1_notifier_1abed77da5cd65a9a37a3b066aaa02e21d" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>enableNotification</name></member>
      <member refid="class_model_1_1_robot_world_1aae1b5a0410c5ae207cd8b7525e204cc0" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getGoal</name></member>
      <member refid="class_model_1_1_robot_world_1a3a678aa437a062c21acccf9ed105a3ec" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getGoal</name></member>
      <member refid="class_model_1_1_robot_world_1a6bac601255c803cc88cc145da2aa1ff0" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getGoals</name></member>
      <member refid="class_model_1_1_model_object_1afc50aa1e512814a9b6c37a4d3f8b4a97" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getObjectId</name></member>
      <member refid="class_model_1_1_robot_world_1aa65fc818fe12a23953ac53f7f62705fb" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getRobot</name></member>
      <member refid="class_model_1_1_robot_world_1ac7897e5aa501752e5e93b555efbf752a" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getRobot</name></member>
      <member refid="class_model_1_1_robot_world_1a657cbe460deb2057521ae51dc5327fe7" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getRobots</name></member>
      <member refid="class_model_1_1_robot_world_1a3129fe115ffa78851d1d81e62a87bfa0" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getRobotWorld</name></member>
      <member refid="class_model_1_1_robot_world_1a8d6dab46a8c89a42f101f4548e4b3da6" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getWall</name></member>
      <member refid="class_model_1_1_robot_world_1a6751f9fe7b9e33047a6d518f5a2f819b" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getWalls</name></member>
      <member refid="class_model_1_1_robot_world_1a4ec5350ad359e9b37bd2f5606a86fea1" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getWayPoint</name></member>
      <member refid="class_model_1_1_robot_world_1a6ce03ec6f6f106172053cdd789844347" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getWayPoint</name></member>
      <member refid="class_model_1_1_robot_world_1a1bbc183d9e63ae142bcbc0373aa06e78" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>getWayPoints</name></member>
      <member refid="class_model_1_1_robot_world_1a35470d30ffdbce51b22ed9a2f3c0a0be" prot="private" virt="non-virtual"><scope>model::RobotWorld</scope><name>goals</name></member>
      <member refid="class_base_1_1_notifier_1a2dfb91da06e2150d8b263b804ff93cac" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>isEnabledForNotification</name></member>
      <member refid="class_model_1_1_model_object_1aec6051457cc42ff15ad76dea42278cec" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>ModelObject</name></member>
      <member refid="class_model_1_1_robot_world_1afc21f82cc1c2c65655da7ef6a7e0f6e5" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>newGoal</name></member>
      <member refid="class_model_1_1_robot_world_1af0d58001395b3b375c2a98b28f2f3ef2" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>newRobot</name></member>
      <member refid="class_model_1_1_robot_world_1a8b3d9243b9550a6fe01bc3b880fadec5" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>newWall</name></member>
      <member refid="class_model_1_1_robot_world_1a45272003383e53e4d8273e83a3e7dc7f" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>newWayPoint</name></member>
      <member refid="class_base_1_1_notifier_1ade4bd558bcb722ae11f2dc9b9e0af0a3" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>Notifier</name></member>
      <member refid="class_base_1_1_notifier_1a9a3df81524d8db68dd64f9a26575c6b4" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>notifyObservers</name></member>
      <member refid="class_model_1_1_model_object_1a8f5b0be9dabedf96e17cf26dfaa58109" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>operator&lt;</name></member>
      <member refid="class_model_1_1_model_object_1a4dd43ca01fedf5452e9990c1954ada7b" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>operator==</name></member>
      <member refid="class_model_1_1_robot_world_1afe09ff15bf8a4cbed1222baa065107d9" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>populate</name></member>
      <member refid="class_base_1_1_notifier_1a54d234bcf2531b2a96333f8d3876d485" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>removeAllObservers</name></member>
      <member refid="class_base_1_1_notifier_1abd13a6f822088d759f4464dbe2e6bb88" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>removeObserver</name></member>
      <member refid="class_model_1_1_robot_world_1a5019cd139c3d2e9aa10bd07b565d835a" prot="private" virt="non-virtual"><scope>model::RobotWorld</scope><name>robots</name></member>
      <member refid="class_model_1_1_robot_world_1a0c67a71c8dec8eda6d182666d7e629ba" prot="protected" virt="non-virtual"><scope>model::RobotWorld</scope><name>RobotWorld</name></member>
      <member refid="class_model_1_1_model_object_1a5330f9a80aeecb0ffe5110fc74258dcb" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>toPtr</name></member>
      <member refid="class_model_1_1_robot_world_1aa54ca5337df73d34be09a2c3b9a66c37" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>unpopulate</name></member>
      <member refid="class_model_1_1_robot_world_1a4a62b951e0cdab0ce60f0189442481f8" prot="public" virt="non-virtual"><scope>model::RobotWorld</scope><name>unpopulate</name></member>
      <member refid="class_model_1_1_robot_world_1aa5dab80b57998a5a47aa65599ff0c41a" prot="private" virt="non-virtual"><scope>model::RobotWorld</scope><name>walls</name></member>
      <member refid="class_model_1_1_robot_world_1a265deae54f92d839882a4472630adb36" prot="private" virt="non-virtual"><scope>model::RobotWorld</scope><name>wayPoints</name></member>
      <member refid="class_model_1_1_model_object_1a83cf28d0263fca8bbb4003253f767d22" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>~ModelObject</name></member>
      <member refid="class_base_1_1_notifier_1ada72bc1d08008fedeaab951a820717ab" prot="public" virt="virtual"><scope>model::RobotWorld</scope><name>~Notifier</name></member>
      <member refid="class_model_1_1_robot_world_1abbcd88bc3659fe2a57328f0d8be440ad" prot="protected" virt="virtual"><scope>model::RobotWorld</scope><name>~RobotWorld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
