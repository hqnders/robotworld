<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_view_1_1_shape" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>View::Shape</compoundname>
    <basecompoundref refid="class_view_1_1_view_object" prot="public" virt="non-virtual">View::ViewObject</basecompoundref>
    <derivedcompoundref refid="class_view_1_1_line_shape" prot="public" virt="non-virtual">View::LineShape</derivedcompoundref>
    <derivedcompoundref refid="class_view_1_1_rectangle_shape" prot="public" virt="non-virtual">View::RectangleShape</derivedcompoundref>
      <sectiondef kind="user-defined">
      <header>Pure virtual abstract Shape functions</header>
      <memberdef kind="function" id="class_view_1_1_shape_1a47a18af27ae3664dd61b56a52a61dd05" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void View::Shape::draw</definition>
        <argsstring>(wxDC &amp;dc)=0</argsstring>
        <name>draw</name>
        <reimplementedby refid="class_view_1_1_line_shape_1a84f369c61a8f0f05d84410c240390493">draw</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1a430ce6f93a932205861ec0327df3ca42">draw</reimplementedby>
        <reimplementedby refid="class_view_1_1_wall_shape_1a1da863c9f5b02edf721f173fef2903d8">draw</reimplementedby>
        <reimplementedby refid="class_view_1_1_way_point_shape_1ac8e4cd575b74030ac9931f64bba16e1f">draw</reimplementedby>
        <reimplementedby refid="class_view_1_1_robot_shape_1a9f12f9abfa2d4ebfa47b06e02c71d23c">draw</reimplementedby>
        <param>
          <type>wxDC &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1a7a202614a593376dcfae7baf892604b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool View::Shape::occupies</definition>
        <argsstring>(const Point &amp;aPoint) const =0</argsstring>
        <name>occupies</name>
        <reimplementedby refid="class_view_1_1_line_shape_1a746b918386d398654f3471af760878ef">occupies</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1ac736dfe69f1a3633696d8c663cd49b51">occupies</reimplementedby>
        <reimplementedby refid="class_view_1_1_wall_shape_1ab71871a176a8d08210513d2ce920c176">occupies</reimplementedby>
        <reimplementedby refid="class_view_1_1_robot_shape_1aff3acf7b0326d17f5cabdc19c7164095">occupies</reimplementedby>
        <param>
          <type>const Point &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPoint</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the point is in the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1a4f958c233208b77c7f5aa2c380b27b3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>Point</type>
        <definition>virtual Point View::Shape::getCentre</definition>
        <argsstring>() const =0</argsstring>
        <name>getCentre</name>
        <reimplementedby refid="class_view_1_1_line_shape_1a0973ec253864af16021f34633fe9fd9f">getCentre</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1a075d237a4c4bad46346e9305fd9f60d7">getCentre</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1af833b07b29d58eb0538f88aefdef29bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void View::Shape::setCentre</definition>
        <argsstring>(const Point &amp;aPoint)=0</argsstring>
        <name>setCentre</name>
        <reimplementedby refid="class_view_1_1_line_shape_1a17d23477829fad85416320b734aa77ad">setCentre</reimplementedby>
        <reimplementedby refid="class_view_1_1_way_point_shape_1a2fa9c9ec63a43d61ed5356060cab8cc7">setCentre</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1a905817abb1294f0e83f1ecdb065cc994">setCentre</reimplementedby>
        <reimplementedby refid="class_view_1_1_robot_shape_1a4b12a96d27b17153069e8864258f52df">setCentre</reimplementedby>
        <param>
          <type>const Point &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="102" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Accessors and mutators</header>
      <memberdef kind="function" id="class_view_1_1_shape_1a537df4d4736c76092f66d24c1205704d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_view_1_1_shape_data" kindref="compound">ShapeData</ref> *</type>
        <definition>ShapeData* View::Shape::getData</definition>
        <argsstring>() const </argsstring>
        <name>getData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="111" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1abc73bac8ae94ccbb8228410367091575" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void View::Shape::setData</definition>
        <argsstring>(ShapeData *aData)</argsstring>
        <name>setData</name>
        <param>
          <type><ref refid="struct_view_1_1_shape_data" kindref="compound">ShapeData</ref> *</type>
          <declname>aData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="118" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1af9e1799d43f25355d04f95c1f4e75277" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool View::Shape::isSelected</definition>
        <argsstring>() const </argsstring>
        <name>isSelected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="129" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1a44eacfc99c6a81016afecd06731eedb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void View::Shape::setSelected</definition>
        <argsstring>(bool aSelected=true)</argsstring>
        <name>setSelected</name>
        <param>
          <type>bool</type>
          <declname>aSelected</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="136" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1aa698e74f91344d0d0dee2c3273c1ec07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void View::Shape::setSelectedAt</definition>
        <argsstring>(const Point &amp;aPoint=DefaultPosition, bool aSelected=true)</argsstring>
        <name>setSelectedAt</name>
        <reimplementedby refid="class_view_1_1_wall_shape_1afb594e5259f6ce9c57fc6516db138716">setSelectedAt</reimplementedby>
        <param>
          <type>const Point &amp;</type>
          <declname>aPoint</declname>
          <defval>DefaultPosition</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>aSelected</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>By default this does the same as Shape::setSelected because by default a <ref refid="class_view_1_1_shape" kindref="compound">Shape</ref> has no volume or surface and the selection point can be assumed to be the centre. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="145" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="145" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1af5616956f613db8a30a65b12914ccd8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>Point</type>
        <definition>virtual Point View::Shape::getSelectedPoint</definition>
        <argsstring>() const </argsstring>
        <name>getSelectedPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="154" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Debug functions</header>
      <memberdef kind="function" id="class_view_1_1_shape_1a54231a2190a7244fdbd1b66900acf162" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string View::Shape::asString</definition>
        <argsstring>() const </argsstring>
        <name>asString</name>
        <reimplementedby refid="class_view_1_1_goal_shape_1a7f6c2c9c9502d264657a0b688e3d5e86">asString</reimplementedby>
        <reimplementedby refid="class_view_1_1_wall_shape_1a1d93e20e10199c6a550c29cd3f88349b">asString</reimplementedby>
        <reimplementedby refid="class_view_1_1_way_point_shape_1a89bbc1a878732d81245c5b5b6c5f035a">asString</reimplementedby>
        <reimplementedby refid="class_view_1_1_robot_shape_1a2af7fa2dfdf390213a921751fb144afa">asString</reimplementedby>
        <reimplementedby refid="class_view_1_1_line_shape_1a814f67ef4b420635f5a71309c4d20a04">asString</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1a82517a7fb6b1b0331efaa79f306ecc38">asString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a 1-line description of the object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="194" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1a47a54c2594bad3a5a26ed5aabf9c3f7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string View::Shape::asDebugString</definition>
        <argsstring>() const </argsstring>
        <name>asDebugString</name>
        <reimplementedby refid="class_view_1_1_goal_shape_1a7d88c0780ae52278bacb44f4a6c79da5">asDebugString</reimplementedby>
        <reimplementedby refid="class_view_1_1_wall_shape_1a0b24f24720b2870e6d71e316842bf57f">asDebugString</reimplementedby>
        <reimplementedby refid="class_view_1_1_way_point_shape_1a0f21e281b69fe62eb8728ad5dc28fce6">asDebugString</reimplementedby>
        <reimplementedby refid="class_view_1_1_robot_shape_1afb69a3cb5c895002b054807d26291579">asDebugString</reimplementedby>
        <reimplementedby refid="class_view_1_1_line_shape_1a625bf67fd65a8258d6186ec9e350cc45">asDebugString</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1ae46b92ba72ec4a590afbd106ced79c98">asDebugString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a description of the object with all data of the object usable for debugging </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="201" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="201" bodyend="204"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_view_1_1_shape_1a908c1351b226965a5d120ec6e052fd83" prot="private" static="no" mutable="no">
        <type><ref refid="struct_view_1_1_shape_data" kindref="compound">ShapeData</ref> *</type>
        <definition>ShapeData* View::Shape::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="208" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_shape_1a25d3dd34b510d5b29862411b9ab77113" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool View::Shape::selected</definition>
        <argsstring></argsstring>
        <name>selected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="209" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_view_1_1_shape_1a9740ec703e12e87ac1a49023b3bcd507" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>View::Shape::Shape</definition>
        <argsstring>()</argsstring>
        <name>Shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="59" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1afb97a8a335b877e5541c3c9844e5959c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>View::Shape::Shape</definition>
        <argsstring>(model::ModelObjectPtr aModelObject)</argsstring>
        <name>Shape</name>
        <param>
          <type>model::ModelObjectPtr</type>
          <declname>aModelObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="68" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1a4169e646865eb9f6c248087d13f236de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual View::Shape::~Shape</definition>
        <argsstring>()</argsstring>
        <name>~Shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="78" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1ac128288b584db6de840f7ec20493aafd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void View::Shape::handleActivated</definition>
        <argsstring>()</argsstring>
        <name>handleActivated</name>
        <reimplementedby refid="class_view_1_1_robot_shape_1ab07702949d9d374331a17db4759f0762">handleActivated</reimplementedby>
        <reimplementedby refid="class_view_1_1_line_shape_1a377b62d54ef2aa35fb325fed70dc8863">handleActivated</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1a6e075b3fda71d5dd4fbd3f3f9ff42126">handleActivated</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref> if enableActivation is set for the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref>. If this is not the desired behaviour override RobotWorldCanvas::handleItemActivated in a derived class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="164" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1a62035e3329fede659614b5ce2060a0f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void View::Shape::handleSelection</definition>
        <argsstring>()</argsstring>
        <name>handleSelection</name>
        <reimplementedby refid="class_view_1_1_robot_shape_1a8983c43b4ec8cd9eda0f4e32a8f69b19">handleSelection</reimplementedby>
        <reimplementedby refid="class_view_1_1_line_shape_1a26cc81c55e98316763ddb33b227e80ae">handleSelection</reimplementedby>
        <reimplementedby refid="class_view_1_1_rectangle_shape_1a15a3cd81166a65e5734b79c87552db00">handleSelection</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref> if enableSelection is set for the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref>. If this is not the desired behaviour override RobotWorldCanvas::handleSelectionChanged in a derived class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="172" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1abfe27e44508e837d8d62de605b32dd61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void View::Shape::handleBeginLeftDrag</definition>
        <argsstring>()</argsstring>
        <name>handleBeginLeftDrag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref> when the user starts dragging this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="178" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_shape_1a0ffded9065c593ce94e3db4d27078bec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void View::Shape::handleEndDrag</definition>
        <argsstring>()</argsstring>
        <name>handleEndDrag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref> when the user drops this object after dragging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="184" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="184" bodyend="186"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="685">
        <label>View::WayPointShape</label>
        <link refid="class_view_1_1_way_point_shape"/>
        <childnode refid="683" relation="public-inheritance">
        </childnode>
      </node>
      <node id="686">
        <label>View::GoalShape</label>
        <link refid="class_view_1_1_goal_shape"/>
        <childnode refid="685" relation="public-inheritance">
        </childnode>
      </node>
      <node id="681">
        <label>View::LineShape</label>
        <link refid="class_view_1_1_line_shape"/>
        <childnode refid="678" relation="public-inheritance">
        </childnode>
      </node>
      <node id="680">
        <label>Base::Observer</label>
        <link refid="class_base_1_1_observer"/>
      </node>
      <node id="682">
        <label>View::WallShape</label>
        <link refid="class_view_1_1_wall_shape"/>
        <childnode refid="681" relation="public-inheritance">
        </childnode>
      </node>
      <node id="678">
        <label>View::Shape</label>
        <link refid="class_view_1_1_shape"/>
        <childnode refid="679" relation="public-inheritance">
        </childnode>
      </node>
      <node id="683">
        <label>View::RectangleShape</label>
        <link refid="class_view_1_1_rectangle_shape"/>
        <childnode refid="678" relation="public-inheritance">
        </childnode>
      </node>
      <node id="679">
        <label>View::ViewObject</label>
        <link refid="class_view_1_1_view_object"/>
        <childnode refid="680" relation="public-inheritance">
        </childnode>
      </node>
      <node id="684">
        <label>View::RobotShape</label>
        <link refid="class_view_1_1_robot_shape"/>
        <childnode refid="683" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="689">
        <label>Base::Observer</label>
        <link refid="class_base_1_1_observer"/>
      </node>
      <node id="687">
        <label>View::Shape</label>
        <link refid="class_view_1_1_shape"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
      </node>
      <node id="688">
        <label>View::ViewObject</label>
        <link refid="class_view_1_1_view_object"/>
        <childnode refid="689" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" line="54" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape.hpp" bodystart="53" bodyend="210"/>
    <listofallmembers>
      <member refid="class_view_1_1_shape_1a47a54c2594bad3a5a26ed5aabf9c3f7c" prot="public" virt="virtual"><scope>View::Shape</scope><name>asDebugString</name></member>
      <member refid="class_view_1_1_shape_1a54231a2190a7244fdbd1b66900acf162" prot="public" virt="virtual"><scope>View::Shape</scope><name>asString</name></member>
      <member refid="class_view_1_1_shape_1a908c1351b226965a5d120ec6e052fd83" prot="private" virt="non-virtual"><scope>View::Shape</scope><name>data</name></member>
      <member refid="class_view_1_1_shape_1a47a18af27ae3664dd61b56a52a61dd05" prot="public" virt="pure-virtual"><scope>View::Shape</scope><name>draw</name></member>
      <member refid="class_view_1_1_shape_1a4f958c233208b77c7f5aa2c380b27b3f" prot="public" virt="pure-virtual"><scope>View::Shape</scope><name>getCentre</name></member>
      <member refid="class_view_1_1_shape_1a537df4d4736c76092f66d24c1205704d" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>getData</name></member>
      <member refid="class_view_1_1_view_object_1a84ff0c9baf21a4736dacaf0811ea0851" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>getModelObject</name></member>
      <member refid="class_view_1_1_view_object_1af1779cd5a68017ff5a1ece2afec8ddc0" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>getObjectId</name></member>
      <member refid="class_view_1_1_shape_1af5616956f613db8a30a65b12914ccd8c" prot="public" virt="virtual"><scope>View::Shape</scope><name>getSelectedPoint</name></member>
      <member refid="class_view_1_1_shape_1ac128288b584db6de840f7ec20493aafd" prot="public" virt="virtual"><scope>View::Shape</scope><name>handleActivated</name></member>
      <member refid="class_view_1_1_shape_1abfe27e44508e837d8d62de605b32dd61" prot="public" virt="virtual"><scope>View::Shape</scope><name>handleBeginLeftDrag</name></member>
      <member refid="class_view_1_1_shape_1a0ffded9065c593ce94e3db4d27078bec" prot="public" virt="virtual"><scope>View::Shape</scope><name>handleEndDrag</name></member>
      <member refid="class_base_1_1_observer_1a37d00a5290a60aa9ab664af5d1642c3e" prot="public" virt="pure-virtual"><scope>View::Shape</scope><name>handleNotification</name></member>
      <member refid="class_base_1_1_observer_1a805cc1ddc6526d692af81d76ae29d802" prot="public" virt="virtual"><scope>View::Shape</scope><name>handleNotificationsFor</name></member>
      <member refid="class_view_1_1_shape_1a62035e3329fede659614b5ce2060a0f3" prot="public" virt="virtual"><scope>View::Shape</scope><name>handleSelection</name></member>
      <member refid="class_view_1_1_shape_1af9e1799d43f25355d04f95c1f4e75277" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>isSelected</name></member>
      <member refid="class_base_1_1_observer_1a0b8f55248bb0b393ed760d50b7f58d21" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>Observer</name></member>
      <member refid="class_view_1_1_shape_1a7a202614a593376dcfae7baf892604b1" prot="public" virt="pure-virtual"><scope>View::Shape</scope><name>occupies</name></member>
      <member refid="class_base_1_1_observer_1aeabd57c2929d345f45132d4c0c1c6c58" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>operator&lt;</name></member>
      <member refid="class_base_1_1_observer_1aca74f78fc397401d5e90cd85193bd84c" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>operator==</name></member>
      <member refid="class_view_1_1_view_object_1a7b0dee4ac27877d28968858214e708e3" prot="protected" virt="virtual"><scope>View::Shape</scope><name>rebindModelObject</name></member>
      <member refid="class_view_1_1_shape_1a25d3dd34b510d5b29862411b9ab77113" prot="private" virt="non-virtual"><scope>View::Shape</scope><name>selected</name></member>
      <member refid="class_view_1_1_shape_1af833b07b29d58eb0538f88aefdef29bc" prot="public" virt="pure-virtual"><scope>View::Shape</scope><name>setCentre</name></member>
      <member refid="class_view_1_1_shape_1abc73bac8ae94ccbb8228410367091575" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>setData</name></member>
      <member refid="class_view_1_1_view_object_1aff22ce3c0e7d0db12837f16902595c24" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>setModelObject</name></member>
      <member refid="class_view_1_1_shape_1a44eacfc99c6a81016afecd06731eedb0" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>setSelected</name></member>
      <member refid="class_view_1_1_shape_1aa698e74f91344d0d0dee2c3273c1ec07" prot="public" virt="virtual"><scope>View::Shape</scope><name>setSelectedAt</name></member>
      <member refid="class_view_1_1_shape_1a9740ec703e12e87ac1a49023b3bcd507" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>Shape</name></member>
      <member refid="class_view_1_1_shape_1afb97a8a335b877e5541c3c9844e5959c" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>Shape</name></member>
      <member refid="class_base_1_1_observer_1a0646f881f6716ab7be41ecefa74b5071" prot="public" virt="virtual"><scope>View::Shape</scope><name>stopHandlingNotificationsFor</name></member>
      <member refid="class_view_1_1_view_object_1aa54c31897c07be82e15f595736f4ebe9" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>ViewObject</name></member>
      <member refid="class_view_1_1_view_object_1abbc94f6ef3de75d64602e4d26694f2cc" prot="public" virt="non-virtual"><scope>View::Shape</scope><name>ViewObject</name></member>
      <member refid="class_base_1_1_observer_1aca7a3c17bdc9d86a9f67519779baf2e9" prot="public" virt="virtual"><scope>View::Shape</scope><name>~Observer</name></member>
      <member refid="class_view_1_1_shape_1a4169e646865eb9f6c248087d13f236de" prot="public" virt="virtual"><scope>View::Shape</scope><name>~Shape</name></member>
      <member refid="class_view_1_1_view_object_1aeece80891c9da5b57181e3c42ce25eec" prot="public" virt="virtual"><scope>View::Shape</scope><name>~ViewObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
