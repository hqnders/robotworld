<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_model_1_1_abstract_sensor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>model::AbstractSensor</compoundname>
    <basecompoundref refid="class_model_1_1_model_object" prot="public" virt="non-virtual">model::ModelObject</basecompoundref>
    <derivedcompoundref refid="class_model_1_1_laser_distance_sensor" prot="public" virt="non-virtual">model::LaserDistanceSensor</derivedcompoundref>
      <sectiondef kind="user-defined">
      <header>Debug functions</header>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1a85c18d6d51b8b6a3b97f682ad242be9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string model::AbstractSensor::asString</definition>
        <argsstring>() const </argsstring>
        <name>asString</name>
        <reimplements refid="class_model_1_1_model_object_1a9db00b9150a932a1637e425f24c0bdf0">asString</reimplements>
        <reimplementedby refid="class_model_1_1_laser_distance_sensor_1a9403593acd21d557e5af1d79901fde34">asString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a 1-line description of the object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="97" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1aa67bce32b6a602772773f0f23d0634f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string model::AbstractSensor::asDebugString</definition>
        <argsstring>() const </argsstring>
        <name>asDebugString</name>
        <reimplements refid="class_model_1_1_model_object_1aced22b0b0ee637c598c463de6a1d8d03">asDebugString</reimplements>
        <reimplementedby refid="class_model_1_1_laser_distance_sensor_1ab32d7cbfd19a9a5ec12a0c06ebb02b4f">asDebugString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a description of the object with all data of the object usable for debugging </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="101" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_model_1_1_abstract_sensor_1acc26be4569ca92c524e3759f8bda8e36" prot="protected" static="no" mutable="no">
        <type><ref refid="class_model_1_1_abstract_agent" kindref="compound">AbstractAgent</ref> *</type>
        <definition>AbstractAgent* model::AbstractSensor::agent</definition>
        <argsstring></argsstring>
        <name>agent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="105" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_model_1_1_abstract_sensor_1ad4cbae39fd0117e9917c33a6a7f09fa5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool model::AbstractSensor::running</definition>
        <argsstring></argsstring>
        <name>running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="106" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_model_1_1_abstract_sensor_1a7de4321e9fa04d352cd42b7f33e2ce9c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacestd_1af8ef78a9cf464d7f7faf334b0648cd20" kindref="member">std::thread</ref></type>
        <definition>std::thread model::AbstractSensor::sensorThread</definition>
        <argsstring></argsstring>
        <name>sensorThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="107" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_model_1_1_abstract_sensor_1ab8de89a6213d2a76d930e02a3cac3947" prot="protected" static="no" mutable="yes">
        <type>std::recursive_mutex</type>
        <definition>std::recursive_mutex model::AbstractSensor::sensorMutex</definition>
        <argsstring></argsstring>
        <name>sensorMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="108" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1aac26d87792344b5422af0c8ea681c558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>model::AbstractSensor::AbstractSensor</definition>
        <argsstring>()</argsstring>
        <name>AbstractSensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="49" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="10" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1a787a53fde6320acca0a3500221f11bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>model::AbstractSensor::AbstractSensor</definition>
        <argsstring>(AbstractAgent *anAgent)</argsstring>
        <name>AbstractSensor</name>
        <param>
          <type><ref refid="class_model_1_1_abstract_agent" kindref="compound">AbstractAgent</ref> *</type>
          <declname>anAgent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="53" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1a3fc48cedbf4c5083b1b90da3d704ba5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>model::AbstractSensor::~AbstractSensor</definition>
        <argsstring>()</argsstring>
        <name>~AbstractSensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="57" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1a958bad26decf903bb28fd45bc835c7bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model::AbstractSensor::setOn</definition>
        <argsstring>(unsigned long aSleepTime=100)</argsstring>
        <name>setOn</name>
        <param>
          <type>unsigned long</type>
          <declname>aSleepTime</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A sensor reads 10 stimuli/second (it sleeps for 100 ms) by default </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="61" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="33" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1a31f0eb53ed8252c45e4ac64ea328d7b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model::AbstractSensor::setOff</definition>
        <argsstring>()</argsstring>
        <name>setOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="65" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1a63ae4aa9e8ac1592f48dbdb1b734ddde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_model_1_1_abstract_stimulus" kindref="compound">AbstractStimulus</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt; AbstractStimulus &gt; model::AbstractSensor::getStimulus</definition>
        <argsstring>() const =0</argsstring>
        <name>getStimulus</name>
        <reimplementedby refid="class_model_1_1_laser_distance_sensor_1a532a168e8d0f7f6986075e83ba58de3e">getStimulus</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1ac9254468d847d18b0895b9fa29fb7871" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_model_1_1_abstract_percept" kindref="compound">AbstractPercept</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt; AbstractPercept &gt; model::AbstractSensor::getPerceptFor</definition>
        <argsstring>(std::shared_ptr&lt; AbstractStimulus &gt; anAbstractPercepts) const =0</argsstring>
        <name>getPerceptFor</name>
        <reimplementedby refid="class_model_1_1_laser_distance_sensor_1af3dc2140292c2e3def32b89e3e0a5e87">getPerceptFor</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_model_1_1_abstract_stimulus" kindref="compound">AbstractStimulus</ref> &gt;</type>
          <declname>anAbstractPercepts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1a2b0fb54fe519b4c58187b939ec612eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model::AbstractSensor::sendPercept</definition>
        <argsstring>(std::shared_ptr&lt; AbstractPercept &gt; anAbstractPercept)</argsstring>
        <name>sendPercept</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_model_1_1_abstract_percept" kindref="compound">AbstractPercept</ref> &gt;</type>
          <declname>anAbstractPercept</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="77" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1ab85ffa9f6dbdf249681ed95a052bf017" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model::AbstractSensor::run</definition>
        <argsstring>(unsigned long aSleepTime)</argsstring>
        <name>run</name>
        <param>
          <type>unsigned long</type>
          <declname>aSleepTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="81" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="65" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1ad78d0c553f653f564fbbe222a1a8bd81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model::AbstractSensor::attachAgent</definition>
        <argsstring>(AbstractAgent *anAgent)</argsstring>
        <name>attachAgent</name>
        <param>
          <type><ref refid="class_model_1_1_abstract_agent" kindref="compound">AbstractAgent</ref> *</type>
          <declname>anAgent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="85" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_model_1_1_abstract_sensor_1ab6bc01195b77d486d7ea628f731416db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model::AbstractSensor::detachAgent</definition>
        <argsstring>()</argsstring>
        <name>detachAgent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="89" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="420">
        <label>model::ModelObject</label>
        <link refid="class_model_1_1_model_object"/>
        <childnode refid="421" relation="public-inheritance">
        </childnode>
        <childnode refid="422" relation="public-inheritance">
        </childnode>
        <childnode refid="423" relation="public-inheritance">
        </childnode>
      </node>
      <node id="421">
        <label>boost::noncopyable</label>
      </node>
      <node id="422">
        <label>Base::Notifier</label>
        <link refid="class_base_1_1_notifier"/>
      </node>
      <node id="423">
        <label>std::enable_shared_from_this&lt; ModelObject &gt;</label>
      </node>
      <node id="419">
        <label>model::AbstractSensor</label>
        <link refid="class_model_1_1_abstract_sensor"/>
        <childnode refid="420" relation="public-inheritance">
        </childnode>
      </node>
      <node id="424">
        <label>model::LaserDistanceSensor</label>
        <link refid="class_model_1_1_laser_distance_sensor"/>
        <childnode refid="419" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="426">
        <label>model::ModelObject</label>
        <link refid="class_model_1_1_model_object"/>
        <childnode refid="427" relation="public-inheritance">
        </childnode>
        <childnode refid="428" relation="public-inheritance">
        </childnode>
        <childnode refid="429" relation="public-inheritance">
        </childnode>
      </node>
      <node id="427">
        <label>boost::noncopyable</label>
      </node>
      <node id="431">
        <label>Base::Queue&lt; std::shared_ptr&lt; model::AbstractPercept &gt; &gt;</label>
        <link refid="class_base_1_1_queue"/>
      </node>
      <node id="428">
        <label>Base::Notifier</label>
        <link refid="class_base_1_1_notifier"/>
      </node>
      <node id="430">
        <label>model::AbstractAgent</label>
        <link refid="class_model_1_1_abstract_agent"/>
        <childnode refid="426" relation="public-inheritance">
        </childnode>
        <childnode refid="431" relation="usage">
          <edgelabel>perceptQueue</edgelabel>
        </childnode>
      </node>
      <node id="429">
        <label>std::enable_shared_from_this&lt; ModelObject &gt;</label>
      </node>
      <node id="425">
        <label>model::AbstractSensor</label>
        <link refid="class_model_1_1_abstract_sensor"/>
        <childnode refid="426" relation="public-inheritance">
        </childnode>
        <childnode refid="430" relation="usage">
          <edgelabel>agent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" line="44" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/AbstractSensor.hpp" bodystart="43" bodyend="111"/>
    <listofallmembers>
      <member refid="class_model_1_1_abstract_sensor_1aac26d87792344b5422af0c8ea681c558" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>AbstractSensor</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a787a53fde6320acca0a3500221f11bf4" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>AbstractSensor</name></member>
      <member refid="class_base_1_1_notifier_1a5c4e89f48f9688c71ffec225717dd79e" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>addObserver</name></member>
      <member refid="class_model_1_1_abstract_sensor_1acc26be4569ca92c524e3759f8bda8e36" prot="protected" virt="non-virtual"><scope>model::AbstractSensor</scope><name>agent</name></member>
      <member refid="class_model_1_1_abstract_sensor_1aa67bce32b6a602772773f0f23d0634f0" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>asDebugString</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a85c18d6d51b8b6a3b97f682ad242be9d" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>asString</name></member>
      <member refid="class_model_1_1_abstract_sensor_1ad78d0c553f653f564fbbe222a1a8bd81" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>attachAgent</name></member>
      <member refid="class_model_1_1_abstract_sensor_1ab6bc01195b77d486d7ea628f731416db" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>detachAgent</name></member>
      <member refid="class_base_1_1_notifier_1a050d0bbcf113f31cc16cd3b5229c7576" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>disableNotification</name></member>
      <member refid="class_base_1_1_notifier_1abed77da5cd65a9a37a3b066aaa02e21d" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>enableNotification</name></member>
      <member refid="class_model_1_1_model_object_1afc50aa1e512814a9b6c37a4d3f8b4a97" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>getObjectId</name></member>
      <member refid="class_model_1_1_abstract_sensor_1ac9254468d847d18b0895b9fa29fb7871" prot="public" virt="pure-virtual"><scope>model::AbstractSensor</scope><name>getPerceptFor</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a63ae4aa9e8ac1592f48dbdb1b734ddde" prot="public" virt="pure-virtual"><scope>model::AbstractSensor</scope><name>getStimulus</name></member>
      <member refid="class_base_1_1_notifier_1a2dfb91da06e2150d8b263b804ff93cac" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>isEnabledForNotification</name></member>
      <member refid="class_model_1_1_model_object_1aec6051457cc42ff15ad76dea42278cec" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>ModelObject</name></member>
      <member refid="class_base_1_1_notifier_1ade4bd558bcb722ae11f2dc9b9e0af0a3" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>Notifier</name></member>
      <member refid="class_base_1_1_notifier_1a9a3df81524d8db68dd64f9a26575c6b4" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>notifyObservers</name></member>
      <member refid="class_model_1_1_model_object_1a8f5b0be9dabedf96e17cf26dfaa58109" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>operator&lt;</name></member>
      <member refid="class_model_1_1_model_object_1a4dd43ca01fedf5452e9990c1954ada7b" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>operator==</name></member>
      <member refid="class_base_1_1_notifier_1a54d234bcf2531b2a96333f8d3876d485" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>removeAllObservers</name></member>
      <member refid="class_base_1_1_notifier_1abd13a6f822088d759f4464dbe2e6bb88" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>removeObserver</name></member>
      <member refid="class_model_1_1_abstract_sensor_1ab85ffa9f6dbdf249681ed95a052bf017" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>run</name></member>
      <member refid="class_model_1_1_abstract_sensor_1ad4cbae39fd0117e9917c33a6a7f09fa5" prot="protected" virt="non-virtual"><scope>model::AbstractSensor</scope><name>running</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a2b0fb54fe519b4c58187b939ec612eb0" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>sendPercept</name></member>
      <member refid="class_model_1_1_abstract_sensor_1ab8de89a6213d2a76d930e02a3cac3947" prot="protected" virt="non-virtual"><scope>model::AbstractSensor</scope><name>sensorMutex</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a7de4321e9fa04d352cd42b7f33e2ce9c" prot="protected" virt="non-virtual"><scope>model::AbstractSensor</scope><name>sensorThread</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a31f0eb53ed8252c45e4ac64ea328d7b9" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>setOff</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a958bad26decf903bb28fd45bc835c7bb" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>setOn</name></member>
      <member refid="class_model_1_1_model_object_1a5330f9a80aeecb0ffe5110fc74258dcb" prot="public" virt="non-virtual"><scope>model::AbstractSensor</scope><name>toPtr</name></member>
      <member refid="class_model_1_1_abstract_sensor_1a3fc48cedbf4c5083b1b90da3d704ba5a" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>~AbstractSensor</name></member>
      <member refid="class_model_1_1_model_object_1a83cf28d0263fca8bbb4003253f767d22" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>~ModelObject</name></member>
      <member refid="class_base_1_1_notifier_1ada72bc1d08008fedeaab951a820717ab" prot="public" virt="virtual"><scope>model::AbstractSensor</scope><name>~Notifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
