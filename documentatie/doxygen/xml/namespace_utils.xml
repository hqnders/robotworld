<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespace_utils" kind="namespace" language="C++">
    <compoundname>Utils</compoundname>
    <innerclass refid="class_utils_1_1_math_utils" prot="public">Utils::MathUtils</innerclass>
    <innerclass refid="class_utils_1_1_shape2_d_utils" prot="public">Utils::Shape2DUtils</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_math_utils_8hpp_1a1b0f2a3f78effad68e3b1003a2c699f6" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Utils::PI</definition>
        <argsstring></argsstring>
        <name>PI</name>
        <initializer>= 3.141592654</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/MathUtils.hpp" line="11" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/MathUtils.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_math_utils_8hpp_1a4632e2dcb0af2e65ee8edd6487186df3" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Utils::ALMOST_ZERO</definition>
        <argsstring></argsstring>
        <name>ALMOST_ZERO</name>
        <initializer>= 0.000000000000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/MathUtils.hpp" line="15" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/MathUtils.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_shape2_d_utils_8cpp_1a96137dcc99a51f57ebc9aa4a597ee1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Utils::GetAngle</definition>
        <argsstring>(const Point &amp;aStartpoint, const Point &amp;anEndPoint)</argsstring>
        <name>GetAngle</name>
        <param>
          <type>const Point &amp;</type>
          <declname>aStartpoint</declname>
        </param>
        <param>
          <type>const Point &amp;</type>
          <declname>anEndPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape2DUtils.cpp" line="11" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/Shape2DUtils.cpp" bodystart="11" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1aef99b198a8c5ac81903a56f6a375ae69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Utils::demangleTypeInfo</definition>
        <argsstring>(const std::type_info &amp;aTypeInfo)</argsstring>
        <name>demangleTypeInfo</name>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>aTypeInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The demangled (human readable) version of the name() string for std::type_info </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" line="22" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" bodystart="22" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1ace270973b04e2d1c0569cb856e325c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Utils::demangleTypeInfo</definition>
        <argsstring>(const std::string &amp;aTypeInfoString)</argsstring>
        <name>demangleTypeInfo</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aTypeInfoString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The demangled (human readable) version of aTypeInfoString which should contain the name() string for std::type_info </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" line="34" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1ac11b6f353edfdb84d1a9790379fe84b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string Utils::typeinfoFor</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>typeinfoFor</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The demangled (human readable) version of the name() string for type T </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" line="47" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1a71b374aa8ba7082470150ebcc88f8b1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string Utils::typeinfoFor</definition>
        <argsstring>(T const *&amp;x)</argsstring>
        <name>typeinfoFor</name>
        <param>
          <type>T const *&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The demangled (human readable) version of the name() string for type T </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" line="55" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/TypeInfo.hpp" bodystart="55" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/MathUtils.cpp" line="4" column="1"/>
  </compounddef>
</doxygen>
