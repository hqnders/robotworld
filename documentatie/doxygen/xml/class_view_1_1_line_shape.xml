<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_view_1_1_line_shape" kind="class" language="C++" prot="public">
    <compoundname>View::LineShape</compoundname>
    <basecompoundref refid="class_view_1_1_shape" prot="public" virt="non-virtual">View::Shape</basecompoundref>
    <derivedcompoundref refid="class_view_1_1_wall_shape" prot="public" virt="non-virtual">View::WallShape</derivedcompoundref>
      <sectiondef kind="user-defined">
      <header>Observer functions</header>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a21a183cd9f63130fe48497743c2c4abb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void View::LineShape::handleNotification</definition>
        <argsstring>()</argsstring>
        <name>handleNotification</name>
        <reimplements refid="class_base_1_1_observer_1a37d00a5290a60aa9ab664af5d1642c3e">handleNotification</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A Notifier will call this function if this Observer will handle the notifications of that Notifier. It is the responsibility of the Observer to filter any events it is interested in. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="49" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Pure virtual abstract Shape functions</header>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a84f369c61a8f0f05d84410c240390493" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void View::LineShape::draw</definition>
        <argsstring>(wxDC &amp;dc)</argsstring>
        <name>draw</name>
        <reimplements refid="class_view_1_1_shape_1a47a18af27ae3664dd61b56a52a61dd05">draw</reimplements>
        <reimplementedby refid="class_view_1_1_wall_shape_1a1da863c9f5b02edf721f173fef2903d8">draw</reimplementedby>
        <param>
          <type>wxDC &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="58" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="57" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a746b918386d398654f3471af760878ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool View::LineShape::occupies</definition>
        <argsstring>(const Point &amp;aPoint) const </argsstring>
        <name>occupies</name>
        <reimplements refid="class_view_1_1_shape_1a7a202614a593376dcfae7baf892604b1">occupies</reimplements>
        <reimplementedby refid="class_view_1_1_wall_shape_1ab71871a176a8d08210513d2ce920c176">occupies</reimplementedby>
        <param>
          <type>const Point &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPoint</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the point is in the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="64" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="211" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a0973ec253864af16021f34633fe9fd9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Point</type>
        <definition>Point View::LineShape::getCentre</definition>
        <argsstring>() const </argsstring>
        <name>getCentre</name>
        <reimplements refid="class_view_1_1_shape_1a4f958c233208b77c7f5aa2c380b27b3f">getCentre</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="68" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="230" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a17d23477829fad85416320b734aa77ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void View::LineShape::setCentre</definition>
        <argsstring>(const Point &amp;aPoint)</argsstring>
        <name>setCentre</name>
        <reimplements refid="class_view_1_1_shape_1af833b07b29d58eb0538f88aefdef29bc">setCentre</reimplements>
        <param>
          <type>const Point &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="72" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="237" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Debug functions</header>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a814f67ef4b420635f5a71309c4d20a04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string View::LineShape::asString</definition>
        <argsstring>() const </argsstring>
        <name>asString</name>
        <reimplements refid="class_view_1_1_shape_1a54231a2190a7244fdbd1b66900acf162">asString</reimplements>
        <reimplementedby refid="class_view_1_1_wall_shape_1a1d93e20e10199c6a550c29cd3f88349b">asString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a 1-line description of the object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="134" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="332" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a625bf67fd65a8258d6186ec9e350cc45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string View::LineShape::asDebugString</definition>
        <argsstring>() const </argsstring>
        <name>asDebugString</name>
        <reimplements refid="class_view_1_1_shape_1a47a54c2594bad3a5a26ed5aabf9c3f7c">asDebugString</reimplements>
        <reimplementedby refid="class_view_1_1_wall_shape_1a0b24f24720b2870e6d71e316842bf57f">asDebugString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a description of the object with all data of the object usable for debugging </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="138" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="341" bodyend="348"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_view_1_1_line_shape_1abbc53b4b42df008db1a628bf3bb8516a" prot="private" static="no" mutable="no">
        <type>RectangleShapePtr</type>
        <definition>RectangleShapePtr View::LineShape::node1</definition>
        <argsstring></argsstring>
        <name>node1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="170" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_line_shape_1ad22a21c0532765d6398ad1a1fe0c47a1" prot="private" static="no" mutable="no">
        <type>RectangleShapePtr</type>
        <definition>RectangleShapePtr View::LineShape::node2</definition>
        <argsstring></argsstring>
        <name>node2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="171" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_line_shape_1a11f8fc45687ed64d7be4f536e12a7447" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string View::LineShape::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="172" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_line_shape_1a8ed04c6ed07de54e4107330fb474dce9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int View::LineShape::lineWidth</definition>
        <argsstring></argsstring>
        <name>lineWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="173" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_line_shape_1abd0e65ae3b6cf181355a84bb7b73c1ca" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int View::LineShape::arrowHeadSize</definition>
        <argsstring></argsstring>
        <name>arrowHeadSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="174" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_line_shape_1a5148bf5ea3bbcdf6fff27d0826b800b0" prot="private" static="no" mutable="no">
        <type>Point</type>
        <definition>Point View::LineShape::top</definition>
        <argsstring></argsstring>
        <name>top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="175" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_line_shape_1a15b05a14a3c47ba9c9ac1e50f3cc70d2" prot="private" static="no" mutable="no">
        <type>Point</type>
        <definition>Point View::LineShape::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="176" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_view_1_1_line_shape_1ad1057fe115d65782df12fcff76173ea9" prot="private" static="no" mutable="no">
        <type>Point</type>
        <definition>Point View::LineShape::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="177" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_view_1_1_line_shape_1ab558c4ee9f3ee29a1b9bcee37e29354a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>View::LineShape::LineShape</definition>
        <argsstring>(RectangleShapePtr aNode1, RectangleShapePtr aNode2, const std::string &amp;aTitle=&quot;&quot;, int aLineWidth=1, int anArrowHeadSize=10)</argsstring>
        <name>LineShape</name>
        <param>
          <type>RectangleShapePtr</type>
          <declname>aNode1</declname>
        </param>
        <param>
          <type>RectangleShapePtr</type>
          <declname>aNode2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>aTitle</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>aLineWidth</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>anArrowHeadSize</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="23" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="13" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a8f8bfaac1fb3f6925d7d3eb40f94d4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>View::LineShape::LineShape</definition>
        <argsstring>(model::ModelObjectPtr aModelObject, RectangleShapePtr aNode1, RectangleShapePtr aNode2, const std::string &amp;aTitle=&quot;&quot;, int aLineWidth=1, int anArrowHeadSize=10)</argsstring>
        <name>LineShape</name>
        <param>
          <type>model::ModelObjectPtr</type>
          <declname>aModelObject</declname>
        </param>
        <param>
          <type>RectangleShapePtr</type>
          <declname>aNode1</declname>
        </param>
        <param>
          <type>RectangleShapePtr</type>
          <declname>aNode2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>aTitle</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>aLineWidth</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>anArrowHeadSize</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="31" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="31" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1abf23022df7fda3cf91c8eaec259ad95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>View::LineShape::~LineShape</definition>
        <argsstring>()</argsstring>
        <name>~LineShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="40" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a2fe3effe9eff5bd00fe495e0f1c39606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void View::LineShape::drawHead</definition>
        <argsstring>(wxDC &amp;dc)</argsstring>
        <name>drawHead</name>
        <param>
          <type>wxDC &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="77" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="99" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1af83c7add92fbad90624d57dd3b7abc6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string View::LineShape::getTitle</definition>
        <argsstring>() const </argsstring>
        <name>getTitle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="81" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a913834fd48496cc0bea586fcdcce86ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void View::LineShape::setTitle</definition>
        <argsstring>(const std::string &amp;aTitle)</argsstring>
        <name>setTitle</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>aTitle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="85" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a96e2e0cea7dc8dbbb82e22b538e324f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int View::LineShape::getLineWidth</definition>
        <argsstring>() const </argsstring>
        <name>getLineWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="89" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a44f4b897aaaed84f5746898983d4da05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void View::LineShape::setLineWidth</definition>
        <argsstring>(int aLineWidth)</argsstring>
        <name>setLineWidth</name>
        <param>
          <type>int</type>
          <declname>aLineWidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="93" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a69e09bc46d6653c7569ec10495238cce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int View::LineShape::getArrowHeadSize</definition>
        <argsstring>() const </argsstring>
        <name>getArrowHeadSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="97" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="272" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a3984d3a088b05bfcd42b0dc6bd25ad05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void View::LineShape::setArrowHeadSize</definition>
        <argsstring>(int anArrowHeadSize)</argsstring>
        <name>setArrowHeadSize</name>
        <param>
          <type>int</type>
          <declname>anArrowHeadSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="101" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1afd1c59f2e5d16ea338cb13bcee7238e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Point</type>
        <definition>Point View::LineShape::getBegin</definition>
        <argsstring>() const </argsstring>
        <name>getBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="105" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a80ae31b43cd8370771a900e4f9aee883" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Point</type>
        <definition>Point View::LineShape::getEnd</definition>
        <argsstring>() const </argsstring>
        <name>getEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="109" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1ae42912ba4477d893a5d21b65410d9053" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double View::LineShape::getLength</definition>
        <argsstring>() const </argsstring>
        <name>getLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="113" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="303" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1afb683de0d0b2218330ce566fe29baa2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool View::LineShape::connects</definition>
        <argsstring>(RectangleShapePtr aNode) const </argsstring>
        <name>connects</name>
        <param>
          <type>RectangleShapePtr</type>
          <declname>aNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="117" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a377b62d54ef2aa35fb325fed70dc8863" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void View::LineShape::handleActivated</definition>
        <argsstring>()</argsstring>
        <name>handleActivated</name>
        <reimplements refid="class_view_1_1_shape_1ac128288b584db6de840f7ec20493aafd">handleActivated</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref> if enableActivation is set for the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref>. If this is not the desired behaviour override RobotWorldCanvas::handleItemActivated in a derived class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="122" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a26cc81c55e98316763ddb33b227e80ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void View::LineShape::handleSelection</definition>
        <argsstring>()</argsstring>
        <name>handleSelection</name>
        <reimplements refid="class_view_1_1_shape_1a62035e3329fede659614b5ce2060a0f3">handleSelection</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called by the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref> if enableSelection is set for the <ref refid="class_view_1_1_robot_world_canvas" kindref="compound">RobotWorldCanvas</ref>. If this is not the desired behaviour override RobotWorldCanvas::handleSelectionChanged in a derived class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="126" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.cpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a0c24c5c1d322a05f0ff54878e21de6e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void View::LineShape::setNode1</definition>
        <argsstring>(RectangleShapePtr aNode1)</argsstring>
        <name>setNode1</name>
        <param>
          <type>RectangleShapePtr</type>
          <declname>aNode1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="141" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a65512e5a2c699118bdd2813056d13fa4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void View::LineShape::setNode2</definition>
        <argsstring>(RectangleShapePtr aNode2)</argsstring>
        <name>setNode2</name>
        <param>
          <type>RectangleShapePtr</type>
          <declname>aNode2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="145" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="145" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_view_1_1_line_shape_1a82b50c636d3bd4c9857e557d9652eba6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RectangleShapePtr</type>
        <definition>RectangleShapePtr View::LineShape::getNode1</definition>
        <argsstring>()</argsstring>
        <name>getNode1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="151" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1adefdad302f5f46beb45894022d06161a" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const RectangleShapePtr</type>
        <definition>const RectangleShapePtr View::LineShape::getNode1</definition>
        <argsstring>() const </argsstring>
        <name>getNode1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="155" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a02f9d9ec648b6da68b3d11e782377b04" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RectangleShapePtr</type>
        <definition>RectangleShapePtr View::LineShape::getNode2</definition>
        <argsstring>()</argsstring>
        <name>getNode2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="160" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_view_1_1_line_shape_1a9f1d8709cc442af41daddb9abdbdedb8" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const RectangleShapePtr</type>
        <definition>const RectangleShapePtr View::LineShape::getNode2</definition>
        <argsstring>() const </argsstring>
        <name>getNode2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="164" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="504">
        <label>View::LineShape</label>
        <link refid="class_view_1_1_line_shape"/>
        <childnode refid="505" relation="public-inheritance">
        </childnode>
      </node>
      <node id="507">
        <label>Base::Observer</label>
        <link refid="class_base_1_1_observer"/>
      </node>
      <node id="508">
        <label>View::WallShape</label>
        <link refid="class_view_1_1_wall_shape"/>
        <childnode refid="504" relation="public-inheritance">
        </childnode>
      </node>
      <node id="505">
        <label>View::Shape</label>
        <link refid="class_view_1_1_shape"/>
        <childnode refid="506" relation="public-inheritance">
        </childnode>
      </node>
      <node id="506">
        <label>View::ViewObject</label>
        <link refid="class_view_1_1_view_object"/>
        <childnode refid="507" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="509">
        <label>View::LineShape</label>
        <link refid="class_view_1_1_line_shape"/>
        <childnode refid="510" relation="public-inheritance">
        </childnode>
      </node>
      <node id="512">
        <label>Base::Observer</label>
        <link refid="class_base_1_1_observer"/>
      </node>
      <node id="510">
        <label>View::Shape</label>
        <link refid="class_view_1_1_shape"/>
        <childnode refid="511" relation="public-inheritance">
        </childnode>
      </node>
      <node id="511">
        <label>View::ViewObject</label>
        <link refid="class_view_1_1_view_object"/>
        <childnode refid="512" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" line="18" column="1" bodyfile="/home/hqnders/Documents/han/osm/software/robotworld/src/LineShape.hpp" bodystart="17" bodyend="178"/>
    <listofallmembers>
      <member refid="class_view_1_1_line_shape_1abd0e65ae3b6cf181355a84bb7b73c1ca" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>arrowHeadSize</name></member>
      <member refid="class_view_1_1_line_shape_1a625bf67fd65a8258d6186ec9e350cc45" prot="public" virt="virtual"><scope>View::LineShape</scope><name>asDebugString</name></member>
      <member refid="class_view_1_1_line_shape_1a814f67ef4b420635f5a71309c4d20a04" prot="public" virt="virtual"><scope>View::LineShape</scope><name>asString</name></member>
      <member refid="class_view_1_1_line_shape_1afb683de0d0b2218330ce566fe29baa2d" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>connects</name></member>
      <member refid="class_view_1_1_line_shape_1a84f369c61a8f0f05d84410c240390493" prot="public" virt="virtual"><scope>View::LineShape</scope><name>draw</name></member>
      <member refid="class_view_1_1_line_shape_1a2fe3effe9eff5bd00fe495e0f1c39606" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>drawHead</name></member>
      <member refid="class_view_1_1_line_shape_1a69e09bc46d6653c7569ec10495238cce" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getArrowHeadSize</name></member>
      <member refid="class_view_1_1_line_shape_1afd1c59f2e5d16ea338cb13bcee7238e0" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getBegin</name></member>
      <member refid="class_view_1_1_line_shape_1a0973ec253864af16021f34633fe9fd9f" prot="public" virt="virtual"><scope>View::LineShape</scope><name>getCentre</name></member>
      <member refid="class_view_1_1_shape_1a537df4d4736c76092f66d24c1205704d" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getData</name></member>
      <member refid="class_view_1_1_line_shape_1a80ae31b43cd8370771a900e4f9aee883" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getEnd</name></member>
      <member refid="class_view_1_1_line_shape_1ae42912ba4477d893a5d21b65410d9053" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getLength</name></member>
      <member refid="class_view_1_1_line_shape_1a96e2e0cea7dc8dbbb82e22b538e324f3" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getLineWidth</name></member>
      <member refid="class_view_1_1_view_object_1a84ff0c9baf21a4736dacaf0811ea0851" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getModelObject</name></member>
      <member refid="class_view_1_1_line_shape_1a82b50c636d3bd4c9857e557d9652eba6" prot="protected" virt="non-virtual"><scope>View::LineShape</scope><name>getNode1</name></member>
      <member refid="class_view_1_1_line_shape_1adefdad302f5f46beb45894022d06161a" prot="protected" virt="non-virtual"><scope>View::LineShape</scope><name>getNode1</name></member>
      <member refid="class_view_1_1_line_shape_1a02f9d9ec648b6da68b3d11e782377b04" prot="protected" virt="non-virtual"><scope>View::LineShape</scope><name>getNode2</name></member>
      <member refid="class_view_1_1_line_shape_1a9f1d8709cc442af41daddb9abdbdedb8" prot="protected" virt="non-virtual"><scope>View::LineShape</scope><name>getNode2</name></member>
      <member refid="class_view_1_1_view_object_1af1779cd5a68017ff5a1ece2afec8ddc0" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getObjectId</name></member>
      <member refid="class_view_1_1_shape_1af5616956f613db8a30a65b12914ccd8c" prot="public" virt="virtual"><scope>View::LineShape</scope><name>getSelectedPoint</name></member>
      <member refid="class_view_1_1_line_shape_1af83c7add92fbad90624d57dd3b7abc6a" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>getTitle</name></member>
      <member refid="class_view_1_1_line_shape_1a377b62d54ef2aa35fb325fed70dc8863" prot="public" virt="virtual"><scope>View::LineShape</scope><name>handleActivated</name></member>
      <member refid="class_view_1_1_shape_1abfe27e44508e837d8d62de605b32dd61" prot="public" virt="virtual"><scope>View::LineShape</scope><name>handleBeginLeftDrag</name></member>
      <member refid="class_view_1_1_shape_1a0ffded9065c593ce94e3db4d27078bec" prot="public" virt="virtual"><scope>View::LineShape</scope><name>handleEndDrag</name></member>
      <member refid="class_view_1_1_line_shape_1a21a183cd9f63130fe48497743c2c4abb" prot="public" virt="virtual"><scope>View::LineShape</scope><name>handleNotification</name></member>
      <member refid="class_base_1_1_observer_1a805cc1ddc6526d692af81d76ae29d802" prot="public" virt="virtual"><scope>View::LineShape</scope><name>handleNotificationsFor</name></member>
      <member refid="class_view_1_1_line_shape_1a26cc81c55e98316763ddb33b227e80ae" prot="public" virt="virtual"><scope>View::LineShape</scope><name>handleSelection</name></member>
      <member refid="class_view_1_1_shape_1af9e1799d43f25355d04f95c1f4e75277" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>isSelected</name></member>
      <member refid="class_view_1_1_line_shape_1ad1057fe115d65782df12fcff76173ea9" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>left</name></member>
      <member refid="class_view_1_1_line_shape_1ab558c4ee9f3ee29a1b9bcee37e29354a" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>LineShape</name></member>
      <member refid="class_view_1_1_line_shape_1a8f8bfaac1fb3f6925d7d3eb40f94d4c8" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>LineShape</name></member>
      <member refid="class_view_1_1_line_shape_1a8ed04c6ed07de54e4107330fb474dce9" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>lineWidth</name></member>
      <member refid="class_view_1_1_line_shape_1abbc53b4b42df008db1a628bf3bb8516a" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>node1</name></member>
      <member refid="class_view_1_1_line_shape_1ad22a21c0532765d6398ad1a1fe0c47a1" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>node2</name></member>
      <member refid="class_base_1_1_observer_1a0b8f55248bb0b393ed760d50b7f58d21" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>Observer</name></member>
      <member refid="class_view_1_1_line_shape_1a746b918386d398654f3471af760878ef" prot="public" virt="virtual"><scope>View::LineShape</scope><name>occupies</name></member>
      <member refid="class_base_1_1_observer_1aeabd57c2929d345f45132d4c0c1c6c58" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>operator&lt;</name></member>
      <member refid="class_base_1_1_observer_1aca74f78fc397401d5e90cd85193bd84c" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>operator==</name></member>
      <member refid="class_view_1_1_view_object_1a7b0dee4ac27877d28968858214e708e3" prot="protected" virt="virtual"><scope>View::LineShape</scope><name>rebindModelObject</name></member>
      <member refid="class_view_1_1_line_shape_1a15b05a14a3c47ba9c9ac1e50f3cc70d2" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>right</name></member>
      <member refid="class_view_1_1_line_shape_1a3984d3a088b05bfcd42b0dc6bd25ad05" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setArrowHeadSize</name></member>
      <member refid="class_view_1_1_line_shape_1a17d23477829fad85416320b734aa77ad" prot="public" virt="virtual"><scope>View::LineShape</scope><name>setCentre</name></member>
      <member refid="class_view_1_1_shape_1abc73bac8ae94ccbb8228410367091575" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setData</name></member>
      <member refid="class_view_1_1_line_shape_1a44f4b897aaaed84f5746898983d4da05" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setLineWidth</name></member>
      <member refid="class_view_1_1_view_object_1aff22ce3c0e7d0db12837f16902595c24" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setModelObject</name></member>
      <member refid="class_view_1_1_line_shape_1a0c24c5c1d322a05f0ff54878e21de6e8" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setNode1</name></member>
      <member refid="class_view_1_1_line_shape_1a65512e5a2c699118bdd2813056d13fa4" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setNode2</name></member>
      <member refid="class_view_1_1_shape_1a44eacfc99c6a81016afecd06731eedb0" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setSelected</name></member>
      <member refid="class_view_1_1_shape_1aa698e74f91344d0d0dee2c3273c1ec07" prot="public" virt="virtual"><scope>View::LineShape</scope><name>setSelectedAt</name></member>
      <member refid="class_view_1_1_line_shape_1a913834fd48496cc0bea586fcdcce86ad" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>setTitle</name></member>
      <member refid="class_view_1_1_shape_1a9740ec703e12e87ac1a49023b3bcd507" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>Shape</name></member>
      <member refid="class_view_1_1_shape_1afb97a8a335b877e5541c3c9844e5959c" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>Shape</name></member>
      <member refid="class_base_1_1_observer_1a0646f881f6716ab7be41ecefa74b5071" prot="public" virt="virtual"><scope>View::LineShape</scope><name>stopHandlingNotificationsFor</name></member>
      <member refid="class_view_1_1_line_shape_1a11f8fc45687ed64d7be4f536e12a7447" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>title</name></member>
      <member refid="class_view_1_1_line_shape_1a5148bf5ea3bbcdf6fff27d0826b800b0" prot="private" virt="non-virtual"><scope>View::LineShape</scope><name>top</name></member>
      <member refid="class_view_1_1_view_object_1aa54c31897c07be82e15f595736f4ebe9" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>ViewObject</name></member>
      <member refid="class_view_1_1_view_object_1abbc94f6ef3de75d64602e4d26694f2cc" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>ViewObject</name></member>
      <member refid="class_view_1_1_line_shape_1abf23022df7fda3cf91c8eaec259ad95e" prot="public" virt="non-virtual"><scope>View::LineShape</scope><name>~LineShape</name></member>
      <member refid="class_base_1_1_observer_1aca7a3c17bdc9d86a9f67519779baf2e9" prot="public" virt="virtual"><scope>View::LineShape</scope><name>~Observer</name></member>
      <member refid="class_view_1_1_shape_1a4169e646865eb9f6c248087d13f236de" prot="public" virt="virtual"><scope>View::LineShape</scope><name>~Shape</name></member>
      <member refid="class_view_1_1_view_object_1aeece80891c9da5b57181e3c42ce25eec" prot="public" virt="virtual"><scope>View::LineShape</scope><name>~ViewObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
